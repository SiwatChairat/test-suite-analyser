NO.,HEAD,CHANGE TYPE,CHANGED STATEMENT,PARENT ENTITY,ROOT ENTITY,SIGNIFICANCE LEVEL
325,c9a73cd594dd7df6a1fc5a3eea42438ba8f18e8c,"STATEMENT_UPDATE","VARIABLE_DECLARATION_STATEMENT: Thread th = new Thread(new HystrixContextRunnable(new Runnable() {
  public @Override void run() {
    for (int i = 0;; (i < 100); i ++) 
      {
        responses.add(new TestRequestCollapser(timer, counter, 1).queue());
      }
  }
}));","FOR_STATEMENT: (t < 5)","com.netflix.hystrix.HystrixCollapser.UnitTests.testRequestVariableLifecycle2()","LOW"
325,c9a73cd594dd7df6a1fc5a3eea42438ba8f18e8c,"STATEMENT_UPDATE","CONSTRUCTOR_INVOCATION: super(new OnSubscribeFunc<R>() {
  public @Override Subscription onSubscribe(final Observer<? super R> observer) {
    final SafeObservableSubscription s = new SafeObservableSubscription();
    TimerListener listener = new TimerListener() {
      public @Override void tick() {
        if (originalCommand.isCommandTimedOut.compareAndSet(TimedOutStatus.NOT_EXECUTED, TimedOutStatus.TIMED_OUT))
            {
              originalCommand.metrics.markTimeout((System.currentTimeMillis() - originalCommand.invocationStartTime));
              originalCommand.recordTotalExecutionTime(originalCommand.invocationStartTime);
              try
                {
                  R v = originalCommand.getFallbackOrThrowException(HystrixEventType.TIMEOUT, FailureType.TIMEOUT, "timed-out", new TimeoutException());
                  observer.onNext(v);
                  observer.onCompleted();
                }
              catch (HystrixRuntimeException re)
                {
                  observer.onError(re);
                }
            }
        s.unsubscribe();
      }
      public @Override int getIntervalTimeInMilliseconds() {
        return originalCommand.properties.executionIsolationThreadTimeoutInMilliseconds().get();
      }
    };
    Reference<TimerListener> _tl = null;
    if (isNonBlocking)
        {
          _tl = HystrixTimer.getInstance().addTimerListener(listener);
        }
    else
        {
          _tl = new SoftReference<TimerListener>(listener);
        }
    final Reference<TimerListener> tl = _tl;
    originalCommand.timeoutTimer.set(tl);
    return s.wrap(o.subscribe(new Observer<R>() {
  public @Override void onCompleted() {
    tl.clear();
    observer.onCompleted();
  }
  public @Override void onError(Throwable e) {
    tl.clear();
    observer.onError(e);
  }
  public @Override void onNext(R v) {
    observer.onNext(v);
  }
}));
  }
});","METHOD: com.netflix.hystrix.HystrixCommand.TimeoutObservable.TimeoutObservable(Observable<R>,HystrixCommand<R>,boolean)","com.netflix.hystrix.HystrixCommand.TimeoutObservable.TimeoutObservable(Observable<R>,HystrixCommand<R>,boolean)","LOW"
325,c9a73cd594dd7df6a1fc5a3eea42438ba8f18e8c,"STATEMENT_UPDATE","VARIABLE_DECLARATION_STATEMENT: final Future<R> f = threadPool.getExecutor().submit(concurrencyStrategy.wrapCallable(new HystrixContextCallable<R>(new Callable<R>() {
  public @Override R call() throws Exception {
    boolean recordDuration = true;
    try
      {
        ExceptionThreadingUtility.assignCallingThread(callingThread);
        executionHook.onThreadStart(_this);
        threadPool.markThreadExecution();
        try
          {
            Hystrix.startCurrentThreadExecutingCommand(getCommandKey());
            R r = executeCommand();
            if (isCommandTimedOut.compareAndSet(TimedOutStatus.NOT_EXECUTED, TimedOutStatus.COMPLETED))
                {
                  r = executionHook.onComplete(_this, r);
                  observer.onNext(r);
                  preTerminationWork(recordDuration);
                  observer.onCompleted();
                  return r;
                }
            else
                {
                  recordDuration = false;
                  preTerminationWork(recordDuration);
                  return null;
                }
          }
        finally
          {
            Hystrix.endCurrentThreadExecutingCommand();
          }
      }
    catch (Exception e)
      {
        preTerminationWork(recordDuration);
        if (isCommandTimedOut.compareAndSet(TimedOutStatus.NOT_EXECUTED, TimedOutStatus.COMPLETED))
            {
              observer.onError(e);
            }
        throw e;
      }
  }
  private void preTerminationWork(boolean recordDuration) {
    if (recordDuration)
        {
          recordTotalExecutionTime(invocationStartTime);
        }
    threadPool.markThreadCompletion();
    try
      {
        executionHook.onThreadComplete(_this);
      }
    catch (Exception e)
      {
        logger.warn("ExecutionHook.onThreadComplete threw an exception that will be ignored.", e);
      }
  }
})));","BODY: ","com.netflix.hystrix.HystrixCommand.subscribeWithThreadIsolation(Observer<? super R>)","LOW"
325,c9a73cd594dd7df6a1fc5a3eea42438ba8f18e8c,"STATEMENT_UPDATE","VARIABLE_DECLARATION_STATEMENT: final Runnable sharedSemaphoreRunnable = new HystrixContextRunnable(new Runnable() {
  public void run() {
    try
      {
        new LatchedSemaphoreCommand(circuitBreaker, sharedSemaphore, startLatch, sharedLatch).execute();
      }
    catch (Exception e)
      {
        e.printStackTrace();
      }
  }
});","METHOD: com.netflix.hystrix.HystrixCommand.UnitTest.testSemaphorePermitsInUse()","com.netflix.hystrix.HystrixCommand.UnitTest.testSemaphorePermitsInUse()","LOW"
325,c9a73cd594dd7df6a1fc5a3eea42438ba8f18e8c,"STATEMENT_UPDATE","VARIABLE_DECLARATION_STATEMENT: final Thread isolatedThread = new Thread(new HystrixContextRunnable(new Runnable() {
  public void run() {
    try
      {
        new LatchedSemaphoreCommand(circuitBreaker, isolatedSemaphore, startLatch, isolatedLatch).execute();
      }
    catch (Exception e)
      {
        e.printStackTrace();
        failureCount.incrementAndGet();
      }
  }
}));","METHOD: com.netflix.hystrix.HystrixCommand.UnitTest.testSemaphorePermitsInUse()","com.netflix.hystrix.HystrixCommand.UnitTest.testSemaphorePermitsInUse()","LOW"
325,c9a73cd594dd7df6a1fc5a3eea42438ba8f18e8c,"STATEMENT_UPDATE","VARIABLE_DECLARATION_STATEMENT: Runnable r = new HystrixContextRunnable(new Runnable() {
  public @Override void run() {
    try
      {
        results.add(new TestSemaphoreCommandWithFallback(circuitBreaker, 1, 200, false).execute());
      }
    catch (Exception e)
      {
        e.printStackTrace();
        exceptionReceived.set(true);
      }
  }
});","METHOD: com.netflix.hystrix.HystrixCommand.UnitTest.testRejectedExecutionSemaphoreWithFallback()","com.netflix.hystrix.HystrixCommand.UnitTest.testRejectedExecutionSemaphoreWithFallback()","LOW"
325,c9a73cd594dd7df6a1fc5a3eea42438ba8f18e8c,"STATEMENT_UPDATE","VARIABLE_DECLARATION_STATEMENT: Runnable r = new HystrixContextRunnable(new Runnable() {
  public @Override void run() {
    try
      {
        results.add(new TestSemaphoreCommand(circuitBreaker, semaphore, 200).execute());
      }
    catch (Exception e)
      {
        e.printStackTrace();
        exceptionReceived.set(true);
      }
  }
});","METHOD: com.netflix.hystrix.HystrixCommand.UnitTest.testExecutionSemaphoreWithExecution()","com.netflix.hystrix.HystrixCommand.UnitTest.testExecutionSemaphoreWithExecution()","LOW"
325,c9a73cd594dd7df6a1fc5a3eea42438ba8f18e8c,"STATEMENT_UPDATE","VARIABLE_DECLARATION_STATEMENT: Runnable r = new HystrixContextRunnable(new Runnable() {
  public @Override void run() {
    try
      {
        new TestSemaphoreCommand(circuitBreaker, semaphore, 200).queue().get();
      }
    catch (Exception e)
      {
        e.printStackTrace();
        exceptionReceived.set(true);
      }
  }
});","METHOD: com.netflix.hystrix.HystrixCommand.UnitTest.testExecutionSemaphoreWithQueue()","com.netflix.hystrix.HystrixCommand.UnitTest.testExecutionSemaphoreWithQueue()","LOW"
325,c9a73cd594dd7df6a1fc5a3eea42438ba8f18e8c,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.UnitTest.testObservableTimeoutNoFallbackThreadContext()","CLASS: com.netflix.hystrix.HystrixCommand.UnitTest","com.netflix.hystrix.HystrixCommand.UnitTest","LOW"
325,c9a73cd594dd7df6a1fc5a3eea42438ba8f18e8c,"STATEMENT_UPDATE","ASSIGNMENT: callableWithContextOfParent = concurrencyStrategy.wrapCallable(new HystrixContextCallable<Void>(new Callable<Void>() {
  public @Override Void call() throws Exception {
    try
      {
        RequestBatch<BatchReturnType, ResponseType, RequestArgumentType> currentBatch = batch.get();
        if (((currentBatch != null) && (currentBatch.requests.size() > 0)))
            {
              createNewBatchAndExecutePreviousIfNeeded(currentBatch);
            }
      }
    catch (Throwable t)
      {
        logger.error("Error occurred trying to executeRequestsFromQueue.", t);
      }
    return null;
  }
}));","METHOD: com.netflix.hystrix.collapser.RequestCollapser.CollapsedTask.CollapsedTask()","com.netflix.hystrix.collapser.RequestCollapser.CollapsedTask.CollapsedTask()","LOW"
325,c9a73cd594dd7df6a1fc5a3eea42438ba8f18e8c,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.HystrixPlugins.UnitTest.testRequestContextViaPluginInTimeout()","CLASS: com.netflix.hystrix.strategy.HystrixPlugins.UnitTest","com.netflix.hystrix.strategy.HystrixPlugins.UnitTest","LOW"
325,c9a73cd594dd7df6a1fc5a3eea42438ba8f18e8c,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.strategy.HystrixPlugins.UnitTest.testRequestIdThreadLocal : ThreadLocal<String>","CLASS: com.netflix.hystrix.strategy.HystrixPlugins.UnitTest","com.netflix.hystrix.strategy.HystrixPlugins.UnitTest","LOW"
325,c9a73cd594dd7df6a1fc5a3eea42438ba8f18e8c,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.strategy.HystrixPlugins.UnitTest.DummyCommand","CLASS: com.netflix.hystrix.strategy.HystrixPlugins.UnitTest","com.netflix.hystrix.strategy.HystrixPlugins.UnitTest","LOW"
325,c9a73cd594dd7df6a1fc5a3eea42438ba8f18e8c,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.strategy.HystrixPlugins.UnitTest.RequestIdCallable","CLASS: com.netflix.hystrix.strategy.HystrixPlugins.UnitTest","com.netflix.hystrix.strategy.HystrixPlugins.UnitTest","LOW"
325,c9a73cd594dd7df6a1fc5a3eea42438ba8f18e8c,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextFunc2.HystrixContextFunc2(Func2<? super Scheduler, ? super T, ? extends Subscription>)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextFunc2","com.netflix.hystrix.strategy.concurrency.HystrixContextFunc2","LOW"
325,c9a73cd594dd7df6a1fc5a3eea42438ba8f18e8c,"STATEMENT_INSERT","CONSTRUCTOR_INVOCATION: this(HystrixPlugins.getInstance().getConcurrencyStrategy(), actual);","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable.HystrixContextRunnable(Runnable)","com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable.HystrixContextRunnable(Runnable)","LOW"
325,c9a73cd594dd7df6a1fc5a3eea42438ba8f18e8c,"STATEMENT_DELETE","CONSTRUCTOR_INVOCATION: super();","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable.HystrixContextRunnable(Runnable)","com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable.HystrixContextRunnable(Runnable)","MEDIUM"
325,c9a73cd594dd7df6a1fc5a3eea42438ba8f18e8c,"STATEMENT_DELETE","ASSIGNMENT: this.actual = actual;","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable.HystrixContextRunnable(Runnable)","com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable.HystrixContextRunnable(Runnable)","MEDIUM"
325,c9a73cd594dd7df6a1fc5a3eea42438ba8f18e8c,"STATEMENT_DELETE","ASSIGNMENT: this.parentThreadState = HystrixRequestContext.getContextForCurrentThread();","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable.HystrixContextRunnable(Runnable)","com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable.HystrixContextRunnable(Runnable)","MEDIUM"
325,c9a73cd594dd7df6a1fc5a3eea42438ba8f18e8c,"STATEMENT_INSERT","TRY_STATEMENT: ","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable.run()","com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable.run()","LOW"
325,c9a73cd594dd7df6a1fc5a3eea42438ba8f18e8c,"STATEMENT_INSERT","CATCH_CLAUSE: Exception","CATCH_CLAUSES: ","com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable.run()","LOW"
325,c9a73cd594dd7df6a1fc5a3eea42438ba8f18e8c,"STATEMENT_INSERT","THROW_STATEMENT: new RuntimeException(e);","CATCH_CLAUSE: Exception","com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable.run()","LOW"
325,c9a73cd594dd7df6a1fc5a3eea42438ba8f18e8c,"COMMENT_MOVE","LINE_COMMENT: // set the state of this thread to that of its parent","BODY: ","com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable.run()","NONE"
325,c9a73cd594dd7df6a1fc5a3eea42438ba8f18e8c,"STATEMENT_ORDERING_CHANGE","METHOD_INVOCATION: HystrixRequestContext.setContextOnCurrentThread(parentThreadState);","BODY: ","com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable.run()","LOW"
325,c9a73cd594dd7df6a1fc5a3eea42438ba8f18e8c,"COMMENT_MOVE","LINE_COMMENT: // execute actual Callable with the state of the parent","BODY: ","com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable.run()","NONE"
325,c9a73cd594dd7df6a1fc5a3eea42438ba8f18e8c,"STATEMENT_PARENT_CHANGE","TRY_STATEMENT: ","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable.run()","com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable.run()","MEDIUM"
325,c9a73cd594dd7df6a1fc5a3eea42438ba8f18e8c,"STATEMENT_UPDATE","METHOD_INVOCATION: actual.run();","BODY: ","com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable.run()","LOW"
325,c9a73cd594dd7df6a1fc5a3eea42438ba8f18e8c,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable.HystrixContextRunnable(HystrixConcurrencyStrategy,Runnable)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable","com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable","LOW"
325,c9a73cd594dd7df6a1fc5a3eea42438ba8f18e8c,"ATTRIBUTE_TYPE_CHANGE","SINGLE_TYPE: Runnable","FIELD: com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable.actual : Runnable","com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable.actual : Callable<Void>","HIGH"
325,c9a73cd594dd7df6a1fc5a3eea42438ba8f18e8c,"STATEMENT_INSERT","CONSTRUCTOR_INVOCATION: this(HystrixPlugins.getInstance().getConcurrencyStrategy(), actual);","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextCallable.HystrixContextCallable(Callable<K>)","com.netflix.hystrix.strategy.concurrency.HystrixContextCallable.HystrixContextCallable(Callable<K>)","LOW"
325,c9a73cd594dd7df6a1fc5a3eea42438ba8f18e8c,"STATEMENT_DELETE","CONSTRUCTOR_INVOCATION: super();","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextCallable.HystrixContextCallable(Callable<K>)","com.netflix.hystrix.strategy.concurrency.HystrixContextCallable.HystrixContextCallable(Callable<K>)","MEDIUM"
325,c9a73cd594dd7df6a1fc5a3eea42438ba8f18e8c,"STATEMENT_DELETE","ASSIGNMENT: this.actual = actual;","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextCallable.HystrixContextCallable(Callable<K>)","com.netflix.hystrix.strategy.concurrency.HystrixContextCallable.HystrixContextCallable(Callable<K>)","MEDIUM"
325,c9a73cd594dd7df6a1fc5a3eea42438ba8f18e8c,"STATEMENT_DELETE","ASSIGNMENT: this.parentThreadState = HystrixRequestContext.getContextForCurrentThread();","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextCallable.HystrixContextCallable(Callable<K>)","com.netflix.hystrix.strategy.concurrency.HystrixContextCallable.HystrixContextCallable(Callable<K>)","MEDIUM"
325,c9a73cd594dd7df6a1fc5a3eea42438ba8f18e8c,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextCallable.HystrixContextCallable(HystrixConcurrencyStrategy,Callable<K>)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextCallable","com.netflix.hystrix.strategy.concurrency.HystrixContextCallable","LOW"
325,c9a73cd594dd7df6a1fc5a3eea42438ba8f18e8c,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.HystrixContextScheduler(Scheduler)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","LOW"
329,01ce154468243cfb4c7631ea97f5bf3eab3137db,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextFunc2.HystrixContextFunc2(Func2<? super Scheduler, ? super T, ? extends Subscription>)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextFunc2","com.netflix.hystrix.strategy.concurrency.HystrixContextFunc2","CRUCIAL"
329,01ce154468243cfb4c7631ea97f5bf3eab3137db,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable.HystrixContextRunnable(Runnable)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable","com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable","CRUCIAL"
329,01ce154468243cfb4c7631ea97f5bf3eab3137db,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextCallable.HystrixContextCallable(Callable<K>)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextCallable","com.netflix.hystrix.strategy.concurrency.HystrixContextCallable","CRUCIAL"
329,01ce154468243cfb4c7631ea97f5bf3eab3137db,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.HystrixContextScheduler(Scheduler)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","CRUCIAL"
331,c7aad0209d68d75b577628b5ee4d341314f4f733,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextFunc2.HystrixContextFunc2(Func2<? super Scheduler, ? super T, ? extends Subscription>)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextFunc2","com.netflix.hystrix.strategy.concurrency.HystrixContextFunc2","LOW"
331,c7aad0209d68d75b577628b5ee4d341314f4f733,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable.HystrixContextRunnable(Runnable)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable","com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable","LOW"
331,c7aad0209d68d75b577628b5ee4d341314f4f733,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextCallable.HystrixContextCallable(Callable<K>)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextCallable","com.netflix.hystrix.strategy.concurrency.HystrixContextCallable","LOW"
331,c7aad0209d68d75b577628b5ee4d341314f4f733,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.HystrixContextScheduler(Scheduler)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","LOW"
332,887887adfd9b91100b4cef533ce2826069b87532,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextFunc2.HystrixContextFunc2(Func2<? super Scheduler, ? super T, ? extends Subscription>)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextFunc2","com.netflix.hystrix.strategy.concurrency.HystrixContextFunc2","CRUCIAL"
332,887887adfd9b91100b4cef533ce2826069b87532,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable.HystrixContextRunnable(Runnable)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable","com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable","CRUCIAL"
332,887887adfd9b91100b4cef533ce2826069b87532,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextCallable.HystrixContextCallable(Callable<K>)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextCallable","com.netflix.hystrix.strategy.concurrency.HystrixContextCallable","CRUCIAL"
332,887887adfd9b91100b4cef533ce2826069b87532,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.HystrixContextScheduler(Scheduler)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","CRUCIAL"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_UPDATE","RETURN_STATEMENT: toObservable(Schedulers.threadPoolForComputation());","METHOD: com.netflix.hystrix.HystrixCollapser.toObservable()","com.netflix.hystrix.HystrixCollapser.toObservable()","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCollapser.HystrixCollapser(HystrixCollapserKey,Scope,CollapserTimer,HystrixCollapserProperties.Setter)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCollapser.UnitTests","CLASS: com.netflix.hystrix.HystrixCollapser","com.netflix.hystrix.HystrixCollapser","CRUCIAL"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixTimer.executor : AtomicReference<ScheduledExecutor>","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixTimer.ScheduledExecutor","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixTimer.ScheduledExecutor.executor : ScheduledThreadPoolExecutor","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_CLASS","CLASS: com.netflix.hystrix.util.HystrixTimer.UnitTest","CLASS: com.netflix.hystrix.util.HystrixTimer","com.netflix.hystrix.util.HystrixTimer","CRUCIAL"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.ExceptionThreadingUtility.attachCallingThreadStack(Throwable,StackTraceElement[])","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_CLASS","CLASS: com.netflix.hystrix.util.ExceptionThreadingUtility.UnitTest","CLASS: com.netflix.hystrix.util.ExceptionThreadingUtility","com.netflix.hystrix.util.ExceptionThreadingUtility","CRUCIAL"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"DOC_UPDATE","JAVADOC: /**
 * A number which can be used to track counters (increment) or set values over time.
 * <p>
 * It is "rolling" in the sense that a 'timeInMilliseconds' is given that you want to track (such as 10 seconds) and then that is broken into buckets (defaults to 10) so that the 10 second window
 * doesn't empty out and restart every 10 seconds, but instead every 1 second you have a new bucket added and one dropped so that 9 of the buckets remain and only the newest starts from scratch.
 * <p>
 * This is done so that the statistics are gathered over a rolling 10 second window with data being added/dropped in 1 second intervals (or whatever granularity is defined by the arguments) rather
 * than each 10 second window starting at 0 again.
 * <p>
 * Performance-wise this class is optimized for writes, not reads. This is done because it expects far higher write volume (thousands/second) than reads (a few per second).
 * <p>
 * For example, on each read to getSum/getCount it will iterate buckets to sum the data so that on writes we don't need to maintain the overall sum and pay the synchronization cost at each write to
 * ensure the sum is up-to-date when the read can easily iterate each bucket to get the sum when it needs it.
 * <p>
 * See inner-class UnitTest for usage and expected behavior examples.
 */","CLASS: com.netflix.hystrix.util.HystrixRollingNumber","com.netflix.hystrix.util.HystrixRollingNumber","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingNumber.timeInMilliseconds : HystrixProperty<Integer>","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingNumber.buckets : BucketCircularArray","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingNumber.getCurrentBucket()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingNumber.numberOfBuckets : HystrixProperty<Integer>","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingNumber.HystrixRollingNumber(Time,int,int)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingNumber.getBucketSizeInMilliseconds()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_CLASS","CLASS: com.netflix.hystrix.util.HystrixRollingNumber.UnitTest","CLASS: com.netflix.hystrix.util.HystrixRollingNumber","com.netflix.hystrix.util.HystrixRollingNumber","CRUCIAL"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.buckets : BucketCircularArray","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.PercentileSnapshot","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.PercentileSnapshot.PercentileSnapshot(Bucket[])","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.PercentileSnapshot.getMean()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.PercentileSnapshot.PercentileSnapshot(int...)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.HystrixRollingPercentile(Time,HystrixProperty<Integer>,HystrixProperty<Integer>,HystrixProperty<Integer>,HystrixProperty<Boolean>)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.currentPercentileSnapshot : PercentileSnapshot","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_CLASS","CLASS: com.netflix.hystrix.util.HystrixRollingPercentile.SampleDataHolder1","CLASS: com.netflix.hystrix.util.HystrixRollingPercentile","com.netflix.hystrix.util.HystrixRollingPercentile","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_CLASS","CLASS: com.netflix.hystrix.util.HystrixRollingPercentile.SampleDataHolder2","CLASS: com.netflix.hystrix.util.HystrixRollingPercentile","com.netflix.hystrix.util.HystrixRollingPercentile","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_CLASS","CLASS: com.netflix.hystrix.util.HystrixRollingPercentile.UnitTest","CLASS: com.netflix.hystrix.util.HystrixRollingPercentile","com.netflix.hystrix.util.HystrixRollingPercentile","CRUCIAL"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommandProperties.default_metricsRollingStatisticalWindow : Integer","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommandProperties.default_circuitBreakerForceClosed : Boolean","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommandProperties.Setter.Setter()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommandProperties.Setter.getUnitTestPropertiesSetter()","CLASS: com.netflix.hystrix.HystrixCommandProperties.Setter","com.netflix.hystrix.HystrixCommandProperties.Setter","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommandProperties.Setter.asMock(Setter)","CLASS: com.netflix.hystrix.HystrixCommandProperties.Setter","com.netflix.hystrix.HystrixCommandProperties.Setter","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCommandProperties.UnitTest","CLASS: com.netflix.hystrix.HystrixCommandProperties","com.netflix.hystrix.HystrixCommandProperties","CRUCIAL"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"PARENT_INTERFACE_INSERT","PARAMETERIZED_TYPE: HystrixExecutableInfo<R>","SUPER_INTERFACE_TYPES: ","com.netflix.hystrix.HystrixCommand","CRUCIAL"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"DOC_UPDATE","JAVADOC: /**
 * Used to wrap code that will execute potentially risky functionality (typically meaning a service call over the network)
 * with fault and latency tolerance, statistics and performance metrics capture, circuit breaker and bulkhead functionality.
 * 
 * @param <R>
 *            the return type
 */","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_INSERT","RETURN_STATEMENT: observableCommand.toObservable(observeOn, performAsyncTimeout);","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","BLOCK_COMMENT: /* this is a stateful object so can only be used once */","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","THROW_STATEMENT: new IllegalStateException("This instance can only be executed once. Please instantiate a new instance.");","THEN_STATEMENT: (! started.compareAndSet(false, true))","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","IF_STATEMENT: (! started.compareAndSet(false, true))","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","BLOCK_COMMENT: /* try from cache first */","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","VARIABLE_DECLARATION_STATEMENT: Observable<R> fromCache = requestCache.get(getCacheKey());","THEN_STATEMENT: isRequestCachingEnabled()","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","BLOCK_COMMENT: /* mark that we received this response from cache */","THEN_STATEMENT: (fromCache != null)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","METHOD_INVOCATION: metrics.markResponseFromCache();","THEN_STATEMENT: (fromCache != null)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","RETURN_STATEMENT: new CachedObservableResponse<R>((CachedObservableOriginal<R>) fromCache, this);","THEN_STATEMENT: (fromCache != null)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","IF_STATEMENT: (fromCache != null)","THEN_STATEMENT: isRequestCachingEnabled()","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","IF_STATEMENT: isRequestCachingEnabled()","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","VARIABLE_DECLARATION_STATEMENT: final HystrixCommand<R> _this = this;","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","LINE_COMMENT: // create an Observable that will lazily execute when subscribed to","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","VARIABLE_DECLARATION_STATEMENT: Observable<R> o = Observable.create(new OnSubscribeFunc<R>() {
  public @Override Subscription onSubscribe(Observer<? super R> observer) {
    try
      {
        invocationStartTime = System.currentTimeMillis();
        executionHook.onStart(_this);
        if ((! circuitBreaker.allowRequest()))
            {
              metrics.markShortCircuited();
              try
                {
                  observer.onNext(getFallbackOrThrowException(HystrixEventType.SHORT_CIRCUITED, FailureType.SHORTCIRCUIT, "short-circuited"));
                  observer.onCompleted();
                }
              catch (Exception e)
                {
                  observer.onError(e);
                }
              return Subscriptions.empty();
            }
        else
            {
              try
                {
                  if (properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD))
                      {
                        return subscribeWithThreadIsolation(observer);
                      }
                  else
                      {
                        return subscribeWithSemaphoreIsolation(observer);
                      }
                }
              catch (RuntimeException e)
                {
                  observer.onError(e);
                  return Subscriptions.empty();
                }
            }
      }
    finally
      {
        recordExecutedCommand();
      }
  }
});","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","BLOCK_COMMENT: /* used to track userThreadExecutionTime */","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","LINE_COMMENT: // mark that we're starting execution on the ExecutionHook","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","BLOCK_COMMENT: /* determine if we're allowed to execute */","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","LINE_COMMENT: // record that we are returning a short-circuited fallback","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","LINE_COMMENT: // short-circuit and go directly to fallback (or throw an exception if no fallback implemented)","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","BLOCK_COMMENT: /* not short-circuited so proceed with queuing the execution */","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","LINE_COMMENT: // wrap for timeout support","THEN_STATEMENT: properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","ASSIGNMENT: o = new TimeoutObservable<R>(o, _this, performAsyncTimeout);","THEN_STATEMENT: properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","IF_STATEMENT: properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD)","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","LINE_COMMENT: // error handling","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","ASSIGNMENT: o = o.onErrorResumeNext(new Func1<Throwable, Observable<R>>() {
  public @Override Observable<R> call(Throwable e) {
    metrics.markExceptionThrown();
    return Observable.error(e);
  }
});","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","LINE_COMMENT: // count that we are throwing an exception and re-throw it","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","LINE_COMMENT: // we want to hand off work to a different scheduler so we don't tie up the Hystrix thread","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","LINE_COMMENT: // don't waste overhead if it's the 'immediate' scheduler
            // otherwise we'll 'observeOn' and wrap with the HystrixContextScheduler
            // to copy state across threads (if threads are involved)","THEN_STATEMENT: (! Schedulers.immediate().equals(observeOn))","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","ASSIGNMENT: o = o.observeOn(new HystrixContextScheduler(concurrencyStrategy, observeOn));","THEN_STATEMENT: (! Schedulers.immediate().equals(observeOn))","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","IF_STATEMENT: (! Schedulers.immediate().equals(observeOn))","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","ASSIGNMENT: o = o.finallyDo(new Action0() {
  public @Override void call() {
    Reference<TimerListener> tl = timeoutTimer.get();
    if ((tl != null))
        {
          tl.clear();
        }
  }
});","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","LINE_COMMENT: // put in cache","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","LINE_COMMENT: // wrap it for caching","THEN_STATEMENT: isRequestCachingEnabled()","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","ASSIGNMENT: o = new CachedObservableOriginal<R>(o.cache(), this);","THEN_STATEMENT: isRequestCachingEnabled()","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","VARIABLE_DECLARATION_STATEMENT: Observable<R> fromCache = requestCache.putIfAbsent(getCacheKey(), o);","THEN_STATEMENT: isRequestCachingEnabled()","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","LINE_COMMENT: // another thread beat us so we'll use the cached value instead","THEN_STATEMENT: (fromCache != null)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","ASSIGNMENT: o = new CachedObservableResponse<R>((CachedObservableOriginal<R>) fromCache, this);","THEN_STATEMENT: (fromCache != null)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","IF_STATEMENT: (fromCache != null)","THEN_STATEMENT: isRequestCachingEnabled()","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","LINE_COMMENT: // we just created an ObservableCommand so we cast and return it","THEN_STATEMENT: isRequestCachingEnabled()","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","RETURN_STATEMENT: (ObservableCommand<R>) o;","THEN_STATEMENT: isRequestCachingEnabled()","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","LINE_COMMENT: // no request caching so a simple wrapper just to pass 'this' along with the Observable","ELSE_STATEMENT: isRequestCachingEnabled()","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","RETURN_STATEMENT: new ObservableCommand<R>(o, this);","ELSE_STATEMENT: isRequestCachingEnabled()","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: isRequestCachingEnabled()","IF_STATEMENT: isRequestCachingEnabled()","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","IF_STATEMENT: isRequestCachingEnabled()","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_INSERT","RETURN_STATEMENT: observableCommand.getProperties();","METHOD: com.netflix.hystrix.HystrixCommand.getProperties()","com.netflix.hystrix.HystrixCommand.getProperties()","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","RETURN_STATEMENT: properties;","METHOD: com.netflix.hystrix.HystrixCommand.getProperties()","com.netflix.hystrix.HystrixCommand.getProperties()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"DOC_DELETE","JAVADOC: /**
     * The {@link HystrixCommandProperties} associated with this {@link HystrixCommand} instance.
     * 
     * @return HystrixCommandProperties
     */","METHOD: com.netflix.hystrix.HystrixCommand.getProperties()","com.netflix.hystrix.HystrixCommand.getProperties()","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_INSERT","RETURN_STATEMENT: observableCommand.getCircuitBreaker();","METHOD: com.netflix.hystrix.HystrixCommand.getCircuitBreaker()","com.netflix.hystrix.HystrixCommand.getCircuitBreaker()","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","RETURN_STATEMENT: circuitBreaker;","METHOD: com.netflix.hystrix.HystrixCommand.getCircuitBreaker()","com.netflix.hystrix.HystrixCommand.getCircuitBreaker()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_INSERT","RETURN_STATEMENT: observableCommand.execute();","METHOD: com.netflix.hystrix.HystrixCommand.execute()","com.netflix.hystrix.HystrixCommand.execute()","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","RETURN_STATEMENT: queue().get();","BODY: ","com.netflix.hystrix.HystrixCommand.execute()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","THROW_STATEMENT: decomposeException(e);","CATCH_CLAUSE: Exception","com.netflix.hystrix.HystrixCommand.execute()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","CATCH_CLAUSE: Exception","CATCH_CLAUSES: ","com.netflix.hystrix.HystrixCommand.execute()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","TRY_STATEMENT: ","METHOD: com.netflix.hystrix.HystrixCommand.execute()","com.netflix.hystrix.HystrixCommand.execute()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"DOC_DELETE","JAVADOC: /**
     * Used for synchronous execution of command.
     * 
     * @return R
     *         Result of {@link #run()} execution or a fallback from {@link #getFallback()} if the command fails for any reason.
     * @throws HystrixRuntimeException
     *             if a failure occurs and a fallback cannot be retrieved
     * @throws HystrixBadRequestException
     *             if invalid arguments or state were used representing a user failure, not a system failure
     * @throws IllegalStateException
     *             if invoked more than once
     */","METHOD: com.netflix.hystrix.HystrixCommand.execute()","com.netflix.hystrix.HystrixCommand.execute()","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_INSERT","RETURN_STATEMENT: observableCommand.getThreadPoolKey();","METHOD: com.netflix.hystrix.HystrixCommand.getThreadPoolKey()","com.netflix.hystrix.HystrixCommand.getThreadPoolKey()","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","RETURN_STATEMENT: threadPoolKey;","METHOD: com.netflix.hystrix.HystrixCommand.getThreadPoolKey()","com.netflix.hystrix.HystrixCommand.getThreadPoolKey()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"DOC_DELETE","JAVADOC: /**
     * @return {@link HystrixThreadPoolKey} identifying which thread-pool this command uses (when configured to run on separate threads via
     *         {@link HystrixCommandProperties#executionIsolationStrategy()}).
     */","METHOD: com.netflix.hystrix.HystrixCommand.getThreadPoolKey()","com.netflix.hystrix.HystrixCommand.getThreadPoolKey()","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_INSERT","VARIABLE_DECLARATION_STATEMENT: HystrixCommandKey commandKey = null;","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_INSERT","ASSIGNMENT: this.observableCommand = new HystrixCommandFromObservableCommand<R>(this, group, commandKey, threadPoolKey, circuitBreaker, threadPool, commandPropertiesDefaults, threadPoolPropertiesDefaults, metrics, fallbackSemaphore, executionSemaphore, propertiesStrategy, executionHook);","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_INSERT","LINE_COMMENT: // use the HystrixCommand class rather than this ObservableCommand class if we have it","THEN_STATEMENT: ((key == null) || key.name().trim().equals(""))","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","BLOCK_COMMENT: /*
         * CommandGroup initialization
         */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","THROW_STATEMENT: new IllegalStateException("HystrixCommandGroup can not be NULL");","THEN_STATEMENT: (group == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","ASSIGNMENT: this.commandGroup = group;","ELSE_STATEMENT: (group == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: (group == null)","IF_STATEMENT: (group == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","IF_STATEMENT: (group == null)","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","BLOCK_COMMENT: /*
         * Properties initialization
         */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","ASSIGNMENT: this.properties = HystrixPropertiesFactory.getCommandProperties(this.commandKey, commandPropertiesDefaults);","THEN_STATEMENT: (propertiesStrategy == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","LINE_COMMENT: // used for unit testing","ELSE_STATEMENT: (propertiesStrategy == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","ASSIGNMENT: this.properties = propertiesStrategy.getCommandProperties(this.commandKey, commandPropertiesDefaults);","ELSE_STATEMENT: (propertiesStrategy == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: (propertiesStrategy == null)","IF_STATEMENT: (propertiesStrategy == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","IF_STATEMENT: (propertiesStrategy == null)","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","BLOCK_COMMENT: /*
         * ThreadPoolKey
         * 
         * This defines which thread-pool this command should run on.
         * 
         * It uses the HystrixThreadPoolKey if provided, then defaults to use HystrixCommandGroup.
         * 
         * It can then be overridden by a property if defined so it can be changed at runtime.
         */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","LINE_COMMENT: // we don't have a property overriding the value so use either HystrixThreadPoolKey or HystrixCommandGroup","THEN_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","BLOCK_COMMENT: /* use HystrixCommandGroup if HystrixThreadPoolKey is null */","THEN_STATEMENT: (threadPoolKey == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","ASSIGNMENT: this.threadPoolKey = HystrixThreadPoolKey.Factory.asKey(commandGroup.name());","THEN_STATEMENT: (threadPoolKey == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","ASSIGNMENT: this.threadPoolKey = threadPoolKey;","ELSE_STATEMENT: (threadPoolKey == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: (threadPoolKey == null)","IF_STATEMENT: (threadPoolKey == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","IF_STATEMENT: (threadPoolKey == null)","THEN_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","LINE_COMMENT: // we have a property defining the thread-pool so use it instead","ELSE_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","ASSIGNMENT: this.threadPoolKey = HystrixThreadPoolKey.Factory.asKey(properties.executionIsolationThreadPoolKeyOverride().get());","ELSE_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","IF_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","IF_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","BLOCK_COMMENT: /* strategy: HystrixEventNotifier */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","ASSIGNMENT: this.eventNotifier = HystrixPlugins.getInstance().getEventNotifier();","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","BLOCK_COMMENT: /* strategy: HystrixConcurrentStrategy */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","ASSIGNMENT: this.concurrencyStrategy = HystrixPlugins.getInstance().getConcurrencyStrategy();","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","BLOCK_COMMENT: /*
         * Metrics initialization
         */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","ASSIGNMENT: this.metrics = HystrixCommandMetrics.getInstance(this.commandKey, this.commandGroup, this.properties);","THEN_STATEMENT: (metrics == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","ASSIGNMENT: this.metrics = metrics;","ELSE_STATEMENT: (metrics == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: (metrics == null)","IF_STATEMENT: (metrics == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","IF_STATEMENT: (metrics == null)","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","BLOCK_COMMENT: /*
         * CircuitBreaker initialization
         */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","LINE_COMMENT: // get the default implementation of HystrixCircuitBreaker","THEN_STATEMENT: (circuitBreaker == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","ASSIGNMENT: this.circuitBreaker = HystrixCircuitBreaker.Factory.getInstance(this.commandKey, this.commandGroup, this.properties, this.metrics);","THEN_STATEMENT: (circuitBreaker == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","ASSIGNMENT: this.circuitBreaker = circuitBreaker;","ELSE_STATEMENT: (circuitBreaker == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: (circuitBreaker == null)","IF_STATEMENT: (circuitBreaker == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","IF_STATEMENT: (circuitBreaker == null)","THEN_STATEMENT: this.properties.circuitBreakerEnabled().get()","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","ASSIGNMENT: this.circuitBreaker = new NoOpCircuitBreaker();","ELSE_STATEMENT: this.properties.circuitBreakerEnabled().get()","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: this.properties.circuitBreakerEnabled().get()","IF_STATEMENT: this.properties.circuitBreakerEnabled().get()","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","IF_STATEMENT: this.properties.circuitBreakerEnabled().get()","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","BLOCK_COMMENT: /* strategy: HystrixMetricsPublisherCommand */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","METHOD_INVOCATION: HystrixMetricsPublisherFactory.createOrRetrievePublisherForCommand(this.commandKey, this.commandGroup, this.metrics, this.circuitBreaker, this.properties);","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","BLOCK_COMMENT: /* strategy: HystrixCommandExecutionHook */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","ASSIGNMENT: this.executionHook = HystrixPlugins.getInstance().getCommandExecutionHook();","THEN_STATEMENT: (executionHook == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","LINE_COMMENT: // used for unit testing","ELSE_STATEMENT: (executionHook == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","ASSIGNMENT: this.executionHook = executionHook;","ELSE_STATEMENT: (executionHook == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: (executionHook == null)","IF_STATEMENT: (executionHook == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","IF_STATEMENT: (executionHook == null)","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","BLOCK_COMMENT: /*
         * ThreadPool initialization
         */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","LINE_COMMENT: // get the default implementation of HystrixThreadPool","THEN_STATEMENT: (threadPool == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","ASSIGNMENT: this.threadPool = HystrixThreadPool.Factory.getInstance(this.threadPoolKey, threadPoolPropertiesDefaults);","THEN_STATEMENT: (threadPool == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","ASSIGNMENT: this.threadPool = threadPool;","ELSE_STATEMENT: (threadPool == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: (threadPool == null)","IF_STATEMENT: (threadPool == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","IF_STATEMENT: (threadPool == null)","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","BLOCK_COMMENT: /* fallback semaphore override if applicable */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","ASSIGNMENT: this.fallbackSemaphoreOverride = fallbackSemaphore;","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","BLOCK_COMMENT: /* execution semaphore override if applicable */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","ASSIGNMENT: this.executionSemaphoreOverride = executionSemaphore;","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","BLOCK_COMMENT: /* setup the request cache for this instance */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","ASSIGNMENT: this.requestCache = HystrixRequestCache.getInstance(this.commandKey, this.concurrencyStrategy);","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_UPDATE","VARIABLE_DECLARATION_STATEMENT: final String keyName = getDefaultNameFromClass(getClass());","THEN_STATEMENT: ((key == null) || key.name().trim().equals(""))","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_UPDATE","ASSIGNMENT: this.commandKey = HystrixCommandKey.Factory.asKey(keyName);","THEN_STATEMENT: ((key == null) || key.name().trim().equals(""))","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_UPDATE","ASSIGNMENT: this.commandKey = key;","ELSE_STATEMENT: ((key == null) || key.name().trim().equals(""))","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_INSERT","RETURN_STATEMENT: observableCommand.isResponseShortCircuited();","METHOD: com.netflix.hystrix.HystrixCommand.isResponseShortCircuited()","com.netflix.hystrix.HystrixCommand.isResponseShortCircuited()","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","RETURN_STATEMENT: executionResult.events.contains(HystrixEventType.SHORT_CIRCUITED);","METHOD: com.netflix.hystrix.HystrixCommand.isResponseShortCircuited()","com.netflix.hystrix.HystrixCommand.isResponseShortCircuited()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"DOC_DELETE","JAVADOC: /**
     * Whether the response received was a fallback as result of being
     * short-circuited (meaning <code>isCircuitBreakerOpen() == true</code>) and <code>getFallback()</code> being called.
     * 
     * @return boolean
     */","METHOD: com.netflix.hystrix.HystrixCommand.isResponseShortCircuited()","com.netflix.hystrix.HystrixCommand.isResponseShortCircuited()","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_INSERT","RETURN_STATEMENT: observableCommand.getFailedExecutionException();","METHOD: com.netflix.hystrix.HystrixCommand.getFailedExecutionException()","com.netflix.hystrix.HystrixCommand.getFailedExecutionException()","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","RETURN_STATEMENT: executionResult.exception;","METHOD: com.netflix.hystrix.HystrixCommand.getFailedExecutionException()","com.netflix.hystrix.HystrixCommand.getFailedExecutionException()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"DOC_DELETE","JAVADOC: /**
     * Get the Throwable/Exception thrown that caused the failure.
     * <p>
     * If <code>isFailedExecution() == true</code> then this would represent the Exception thrown by the <code>run()</code> method.
     * <p>
     * If <code>isFailedExecution() == false</code> then this would return null.
     * 
     * @return Throwable or null
     */","METHOD: com.netflix.hystrix.HystrixCommand.getFailedExecutionException()","com.netflix.hystrix.HystrixCommand.getFailedExecutionException()","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_INSERT","RETURN_STATEMENT: observableCommand.isResponseFromCache();","METHOD: com.netflix.hystrix.HystrixCommand.isResponseFromCache()","com.netflix.hystrix.HystrixCommand.isResponseFromCache()","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","RETURN_STATEMENT: executionResult.events.contains(HystrixEventType.RESPONSE_FROM_CACHE);","METHOD: com.netflix.hystrix.HystrixCommand.isResponseFromCache()","com.netflix.hystrix.HystrixCommand.isResponseFromCache()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"DOC_DELETE","JAVADOC: /**
     * Whether the response is from cache and <code>run()</code> was not invoked.
     * 
     * @return boolean
     */","METHOD: com.netflix.hystrix.HystrixCommand.isResponseFromCache()","com.netflix.hystrix.HystrixCommand.isResponseFromCache()","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_UPDATE","RETURN_STATEMENT: isExecutionComplete.get();","METHOD: com.netflix.hystrix.HystrixCommand.isExecutionComplete()","com.netflix.hystrix.HystrixCommand.isExecutionComplete()","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"DOC_DELETE","JAVADOC: /**
     * If this command has completed execution either successfully, via fallback or failure.
     * 
     * @return boolean
     */","METHOD: com.netflix.hystrix.HystrixCommand.isExecutionComplete()","com.netflix.hystrix.HystrixCommand.isExecutionComplete()","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","ASSIGNMENT: executionResult = executionResult.addEvents(HystrixEventType.COLLAPSED);","METHOD: com.netflix.hystrix.HystrixCommand.markAsCollapsedCommand(int)","com.netflix.hystrix.HystrixCommand.markAsCollapsedCommand(int)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_UPDATE","METHOD_INVOCATION: getMetrics().markCollapsed(sizeOfBatch);","METHOD: com.netflix.hystrix.HystrixCommand.markAsCollapsedCommand(int)","com.netflix.hystrix.HystrixCommand.markAsCollapsedCommand(int)","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"DOC_DELETE","JAVADOC: /**
     * Allow the Collapser to mark this command instance as being used for a collapsed request and how many requests were collapsed.
     * 
     * @param sizeOfBatch
     */","METHOD: com.netflix.hystrix.HystrixCommand.markAsCollapsedCommand(int)","com.netflix.hystrix.HystrixCommand.markAsCollapsedCommand(int)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_INSERT","RETURN_STATEMENT: observableCommand.queue();","METHOD: com.netflix.hystrix.HystrixCommand.queue()","com.netflix.hystrix.HystrixCommand.queue()","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","BLOCK_COMMENT: /*
         * --- Schedulers.immediate()
         * 
         * We use the 'immediate' schedule since Future.get() is blocking so we don't want to bother doing the callback to the Future on a separate thread
         * as we don't need to separate the Hystrix thread from user threads since they are already providing it via the Future.get() call.
         * 
         * --- performAsyncTimeout: false
         * 
         * We pass 'false' to tell the Observable we will block on it so it doesn't schedule an async timeout.
         * 
         * This optimizes for using the calling thread to do the timeout rather than scheduling another thread.
         * 
         * In a tight-loop of executing commands this optimization saves a few microseconds per execution.
         * It also just makes no sense to use a separate thread to timeout the command when the calling thread
         * is going to sit waiting on it.
         */","METHOD: com.netflix.hystrix.HystrixCommand.queue()","com.netflix.hystrix.HystrixCommand.queue()","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","VARIABLE_DECLARATION_STATEMENT: final ObservableCommand<R> o = toObservable(Schedulers.immediate(), false);","METHOD: com.netflix.hystrix.HystrixCommand.queue()","com.netflix.hystrix.HystrixCommand.queue()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","VARIABLE_DECLARATION_STATEMENT: final Future<R> f = o.toBlockingObservable().toFuture();","METHOD: com.netflix.hystrix.HystrixCommand.queue()","com.netflix.hystrix.HystrixCommand.queue()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","BLOCK_COMMENT: /* special handling of error states that throw immediately */","METHOD: com.netflix.hystrix.HystrixCommand.queue()","com.netflix.hystrix.HystrixCommand.queue()","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","METHOD_INVOCATION: f.get();","BODY: ","com.netflix.hystrix.HystrixCommand.queue()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","RETURN_STATEMENT: f;","BODY: ","com.netflix.hystrix.HystrixCommand.queue()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","VARIABLE_DECLARATION_STATEMENT: RuntimeException re = decomposeException(e);","CATCH_CLAUSE: Exception","com.netflix.hystrix.HystrixCommand.queue()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","RETURN_STATEMENT: f;","THEN_STATEMENT: (re instanceof HystrixBadRequestException)","com.netflix.hystrix.HystrixCommand.queue()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","VARIABLE_DECLARATION_STATEMENT: HystrixRuntimeException hre = (HystrixRuntimeException) re;","THEN_STATEMENT: (re instanceof HystrixRuntimeException)","com.netflix.hystrix.HystrixCommand.queue()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","LINE_COMMENT: // we don't throw these types from queue() only from queue().get() as they are execution errors","THEN_STATEMENT: ((hre.getFailureType() == FailureType.COMMAND_EXCEPTION) || (hre.getFailureType() == FailureType.TIMEOUT))","com.netflix.hystrix.HystrixCommand.queue()","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","RETURN_STATEMENT: f;","THEN_STATEMENT: ((hre.getFailureType() == FailureType.COMMAND_EXCEPTION) || (hre.getFailureType() == FailureType.TIMEOUT))","com.netflix.hystrix.HystrixCommand.queue()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","LINE_COMMENT: // these are errors we throw from queue() as they as rejection type errors","ELSE_STATEMENT: ((hre.getFailureType() == FailureType.COMMAND_EXCEPTION) || (hre.getFailureType() == FailureType.TIMEOUT))","com.netflix.hystrix.HystrixCommand.queue()","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","THROW_STATEMENT: hre;","ELSE_STATEMENT: ((hre.getFailureType() == FailureType.COMMAND_EXCEPTION) || (hre.getFailureType() == FailureType.TIMEOUT))","com.netflix.hystrix.HystrixCommand.queue()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: ((hre.getFailureType() == FailureType.COMMAND_EXCEPTION) || (hre.getFailureType() == FailureType.TIMEOUT))","IF_STATEMENT: ((hre.getFailureType() == FailureType.COMMAND_EXCEPTION) || (hre.getFailureType() == FailureType.TIMEOUT))","com.netflix.hystrix.HystrixCommand.queue()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","IF_STATEMENT: ((hre.getFailureType() == FailureType.COMMAND_EXCEPTION) || (hre.getFailureType() == FailureType.TIMEOUT))","THEN_STATEMENT: (re instanceof HystrixRuntimeException)","com.netflix.hystrix.HystrixCommand.queue()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","THROW_STATEMENT: re;","ELSE_STATEMENT: (re instanceof HystrixRuntimeException)","com.netflix.hystrix.HystrixCommand.queue()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: (re instanceof HystrixRuntimeException)","IF_STATEMENT: (re instanceof HystrixRuntimeException)","com.netflix.hystrix.HystrixCommand.queue()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","IF_STATEMENT: (re instanceof HystrixRuntimeException)","ELSE_STATEMENT: (re instanceof HystrixBadRequestException)","com.netflix.hystrix.HystrixCommand.queue()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: (re instanceof HystrixBadRequestException)","IF_STATEMENT: (re instanceof HystrixBadRequestException)","com.netflix.hystrix.HystrixCommand.queue()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","IF_STATEMENT: (re instanceof HystrixBadRequestException)","CATCH_CLAUSE: Exception","com.netflix.hystrix.HystrixCommand.queue()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","CATCH_CLAUSE: Exception","CATCH_CLAUSES: ","com.netflix.hystrix.HystrixCommand.queue()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","TRY_STATEMENT: ","THEN_STATEMENT: f.isDone()","com.netflix.hystrix.HystrixCommand.queue()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","IF_STATEMENT: f.isDone()","METHOD: com.netflix.hystrix.HystrixCommand.queue()","com.netflix.hystrix.HystrixCommand.queue()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","RETURN_STATEMENT: new Future<R>() {
  public @Override boolean cancel(boolean mayInterruptIfRunning) {
    return f.cancel(mayInterruptIfRunning);
  }
  public @Override boolean isCancelled() {
    return f.isCancelled();
  }
  public @Override boolean isDone() {
    return f.isDone();
  }
  public @Override R get() throws InterruptedException, ExecutionException {
    return performBlockingGetWithTimeout(o, f);
  }
  /**
     * @param   o
     * @param   f
     * @throws   InterruptedException
     * @throws   ExecutionException
   */
  protected R performBlockingGetWithTimeout(final ObservableCommand<R> o, final Future<R> f) throws InterruptedException, ExecutionException {
    if (f.isDone())
        {
          return f.get();
        }
    HystrixCommand<R> originalCommand = o.getCommand();
    if ((originalCommand != null))
        {
          Reference<TimerListener> timer = originalCommand.timeoutTimer.getAndSet(null);
          if ((timer != null))
              {
                TimerListener l = timer.get();
                timer.clear();
                long timeout = originalCommand.properties.executionIsolationThreadTimeoutInMilliseconds().get();
                long timeRemaining = timeout;
                long currTime = System.currentTimeMillis();
                if ((originalCommand.invocationStartTime != (- 1)))
                    {
                      timeRemaining = ((originalCommand.invocationStartTime + originalCommand.properties.executionIsolationThreadTimeoutInMilliseconds().get()) - currTime);
                    }
                if ((timeRemaining > 0))
                    {
                      try
                        {
                          return f.get(timeRemaining, TimeUnit.MILLISECONDS);
                        }
                      catch (TimeoutException e)
                        {
                          if ((l != null))
                              {
                                l.tick();
                              }
                        }
                    }
                else
                    {
                      if ((! f.isDone()))
                          {
                            if ((l != null))
                                {
                                  l.tick();
                                }
                          }
                    }
              }
        }
    return f.get();
  }
  public @Override R get(long timeout, TimeUnit unit) throws InterruptedException, ExecutionException, TimeoutException {
    return get();
  }
};","METHOD: com.netflix.hystrix.HystrixCommand.queue()","com.netflix.hystrix.HystrixCommand.queue()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"DOC_DELETE","JAVADOC: /**
     * Used for asynchronous execution of command.
     * <p>
     * This will queue up the command on the thread pool and return an {@link Future} to get the result once it completes.
     * <p>
     * NOTE: If configured to not run in a separate thread, this will have the same effect as {@link #execute()} and will block.
     * <p>
     * We don't throw an exception but just flip to synchronous execution so code doesn't need to change in order to switch a command from running on a separate thread to the calling thread.
     * 
     * @return {@code Future<R>} Result of {@link #run()} execution or a fallback from {@link #getFallback()} if the command fails for any reason.
     * @throws HystrixRuntimeException
     *             if a fallback does not exist
     *             <p>
     *             <ul>
     *             <li>via {@code Future.get()} in {@link ExecutionException#getCause()} if a failure occurs</li>
     *             <li>or immediately if the command can not be queued (such as short-circuited, thread-pool/semaphore rejected)</li>
     *             </ul>
     * @throws HystrixBadRequestException
     *             via {@code Future.get()} in {@link ExecutionException#getCause()} if invalid arguments or state were used representing a user failure, not a system failure
     * @throws IllegalStateException
     *             if invoked more than once
     */","METHOD: com.netflix.hystrix.HystrixCommand.queue()","com.netflix.hystrix.HystrixCommand.queue()","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_INSERT","RETURN_STATEMENT: observableCommand.isSuccessfulExecution();","METHOD: com.netflix.hystrix.HystrixCommand.isSuccessfulExecution()","com.netflix.hystrix.HystrixCommand.isSuccessfulExecution()","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","RETURN_STATEMENT: executionResult.events.contains(HystrixEventType.SUCCESS);","METHOD: com.netflix.hystrix.HystrixCommand.isSuccessfulExecution()","com.netflix.hystrix.HystrixCommand.isSuccessfulExecution()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"DOC_DELETE","JAVADOC: /**
     * Whether the response was returned successfully either by executing <code>run()</code> or from cache.
     * 
     * @return boolean
     */","METHOD: com.netflix.hystrix.HystrixCommand.isSuccessfulExecution()","com.netflix.hystrix.HystrixCommand.isSuccessfulExecution()","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_INSERT","RETURN_STATEMENT: observableCommand.getExecutionTimeInMilliseconds();","METHOD: com.netflix.hystrix.HystrixCommand.getExecutionTimeInMilliseconds()","com.netflix.hystrix.HystrixCommand.getExecutionTimeInMilliseconds()","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","RETURN_STATEMENT: executionResult.executionTime;","METHOD: com.netflix.hystrix.HystrixCommand.getExecutionTimeInMilliseconds()","com.netflix.hystrix.HystrixCommand.getExecutionTimeInMilliseconds()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"DOC_DELETE","JAVADOC: /**
     * The execution time of this command instance in milliseconds, or -1 if not executed.
     * 
     * @return int
     */","METHOD: com.netflix.hystrix.HystrixCommand.getExecutionTimeInMilliseconds()","com.netflix.hystrix.HystrixCommand.getExecutionTimeInMilliseconds()","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_INSERT","RETURN_STATEMENT: observableCommand.observe();","METHOD: com.netflix.hystrix.HystrixCommand.observe()","com.netflix.hystrix.HystrixCommand.observe()","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","LINE_COMMENT: // us a ReplaySubject to buffer the eagerly subscribed-to Observable","METHOD: com.netflix.hystrix.HystrixCommand.observe()","com.netflix.hystrix.HystrixCommand.observe()","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","VARIABLE_DECLARATION_STATEMENT: ReplaySubject<R> subject = ReplaySubject.create();","METHOD: com.netflix.hystrix.HystrixCommand.observe()","com.netflix.hystrix.HystrixCommand.observe()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","LINE_COMMENT: // eagerly kick off subscription","METHOD: com.netflix.hystrix.HystrixCommand.observe()","com.netflix.hystrix.HystrixCommand.observe()","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","METHOD_INVOCATION: toObservable().subscribe(subject);","METHOD: com.netflix.hystrix.HystrixCommand.observe()","com.netflix.hystrix.HystrixCommand.observe()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","LINE_COMMENT: // return the subject that can be subscribed to later while the execution has already started","METHOD: com.netflix.hystrix.HystrixCommand.observe()","com.netflix.hystrix.HystrixCommand.observe()","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","RETURN_STATEMENT: subject;","METHOD: com.netflix.hystrix.HystrixCommand.observe()","com.netflix.hystrix.HystrixCommand.observe()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"DOC_DELETE","JAVADOC: /**
     * Used for asynchronous execution of command with a callback by subscribing to the {@link Observable}.
     * <p>
     * This eagerly starts execution of the command the same as {@link #queue()} and {@link #execute()}.
     * A lazy {@link Observable} can be obtained from {@link #toObservable()}.
     * <p>
     * <b>Callback Scheduling</b>
     * <p>
     * <ul>
     * <li>When using {@link ExecutionIsolationStrategy#THREAD} this defaults to using {@link Schedulers#threadPoolForComputation()} for callbacks.</li>
     * <li>When using {@link ExecutionIsolationStrategy#SEMAPHORE} this defaults to using {@link Schedulers#immediate()} for callbacks.</li>
     * </ul>
     * Use {@link #toObservable(rx.Scheduler)} to schedule the callback differently.
     * <p>
     * See https://github.com/Netflix/RxJava/wiki for more information.
     * 
     * @return {@code Observable<R>} that executes and calls back with the result of {@link #run()} execution or a fallback from {@link #getFallback()} if the command fails for any reason.
     * @throws HystrixRuntimeException
     *             if a fallback does not exist
     *             <p>
     *             <ul>
     *             <li>via {@code Observer#onError} if a failure occurs</li>
     *             <li>or immediately if the command can not be queued (such as short-circuited, thread-pool/semaphore rejected)</li>
     *             </ul>
     * @throws HystrixBadRequestException
     *             via {@code Observer#onError} if invalid arguments or state were used representing a user failure, not a system failure
     * @throws IllegalStateException
     *             if invoked more than once
     */","METHOD: com.netflix.hystrix.HystrixCommand.observe()","com.netflix.hystrix.HystrixCommand.observe()","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_UPDATE","RETURN_STATEMENT: circuitBreaker.isOpen();","METHOD: com.netflix.hystrix.HystrixCommand.isCircuitBreakerOpen()","com.netflix.hystrix.HystrixCommand.isCircuitBreakerOpen()","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"DOC_DELETE","JAVADOC: /**
     * Whether the 'circuit-breaker' is open meaning that <code>execute()</code> will immediately return
     * the <code>getFallback()</code> response and not attempt a HystrixCommand execution.
     * 
     * @return boolean
     */","METHOD: com.netflix.hystrix.HystrixCommand.isCircuitBreakerOpen()","com.netflix.hystrix.HystrixCommand.isCircuitBreakerOpen()","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_INSERT","RETURN_STATEMENT: observableCommand.getCommandKey();","METHOD: com.netflix.hystrix.HystrixCommand.getCommandKey()","com.netflix.hystrix.HystrixCommand.getCommandKey()","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","RETURN_STATEMENT: commandKey;","METHOD: com.netflix.hystrix.HystrixCommand.getCommandKey()","com.netflix.hystrix.HystrixCommand.getCommandKey()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"DOC_DELETE","JAVADOC: /**
     * @return {@link HystrixCommandKey} identifying this command instance for statistics, circuit-breaker, properties, etc.
     */","METHOD: com.netflix.hystrix.HystrixCommand.getCommandKey()","com.netflix.hystrix.HystrixCommand.getCommandKey()","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_INSERT","RETURN_STATEMENT: observableCommand.isResponseRejected();","METHOD: com.netflix.hystrix.HystrixCommand.isResponseRejected()","com.netflix.hystrix.HystrixCommand.isResponseRejected()","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","RETURN_STATEMENT: (executionResult.events.contains(HystrixEventType.THREAD_POOL_REJECTED) || executionResult.events.contains(HystrixEventType.SEMAPHORE_REJECTED));","METHOD: com.netflix.hystrix.HystrixCommand.isResponseRejected()","com.netflix.hystrix.HystrixCommand.isResponseRejected()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"DOC_DELETE","JAVADOC: /**
     * Whether the response received was a fallback as result of being
     * rejected (from thread-pool or semaphore) and <code>getFallback()</code> being called.
     * 
     * @return boolean
     */","METHOD: com.netflix.hystrix.HystrixCommand.isResponseRejected()","com.netflix.hystrix.HystrixCommand.isResponseRejected()","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"DOC_UPDATE","JAVADOC: /**
     * Fluent interface for arguments to the {@link HystrixCommand} constructor.
     * <p>
     * The required arguments are set via the 'with' factory method and optional arguments via the 'and' chained methods.
     * <p>
     * Example:
     * <pre> {@code
     *  Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey("GroupName"))
                .andCommandKey(HystrixCommandKey.Factory.asKey("CommandName"))
                .andEventNotifier(notifier);
     * } </pre>
     */","CLASS: com.netflix.hystrix.HystrixCommand.Setter","com.netflix.hystrix.HystrixCommand.Setter","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.Setter.threadPoolKey : HystrixThreadPoolKey","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.Setter.threadPoolPropertiesDefaults : HystrixThreadPoolProperties.Setter","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"DOC_UPDATE","JAVADOC: /**
         * Setter factory method with required values.
         * <p>
         * All optional arguments can be set via the chained methods.
         * 
         * @param groupKey
         *            {@link HystrixCommandGroupKey} used to group together multiple {@link HystrixCommand} objects.
         *            <p>
         *            The {@link HystrixCommandGroupKey} is used to represent a common relationship between commands. For example, a library or team name, the system all related commands interace
         *            with,
         *            common business purpose etc.
         */","METHOD: com.netflix.hystrix.HystrixCommand.Setter.withGroupKey(HystrixCommandGroupKey)","com.netflix.hystrix.HystrixCommand.Setter.withGroupKey(HystrixCommandGroupKey)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.Setter.Setter(HystrixCommandGroupKey)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"DOC_UPDATE","JAVADOC: /**
         * Setter factory method containing required values.
         * <p>
         * All optional arguments can be set via the chained methods.
         * 
         * @param groupKey
         *            {@link HystrixCommandGroupKey} used to group together multiple {@link HystrixCommand} objects.
         *            <p>
         *            The {@link HystrixCommandGroupKey} is used to represent a common relationship between commands. For example, a library or team name, the system all related commands interace
         *            with,
         *            common business purpose etc.
         */","METHOD: com.netflix.hystrix.HystrixCommand.Setter.Setter(HystrixCommandGroupKey)","com.netflix.hystrix.HystrixCommand.Setter.Setter(HystrixCommandGroupKey)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.Setter.commandPropertiesDefaults : HystrixCommandProperties.Setter","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"DOC_UPDATE","JAVADOC: /**
         * @param commandKey
         *            {@link HystrixCommandKey} used to identify a {@link HystrixCommand} instance for statistics, circuit-breaker, properties, etc.
         *            <p>
         *            By default this will be derived from the instance class name.
         *            <p>
         *            NOTE: Every unique {@link HystrixCommandKey} will result in new instances of {@link HystrixCircuitBreaker}, {@link HystrixCommandMetrics} and {@link HystrixCommandProperties}.
         *            Thus,
         *            the number of variants should be kept to a finite and reasonable number to avoid high-memory usage or memory leacks.
         *            <p>
         *            Hundreds of keys is fine, tens of thousands is probably not.
         * @return Setter for fluent interface via method chaining
         */","METHOD: com.netflix.hystrix.HystrixCommand.Setter.andCommandKey(HystrixCommandKey)","com.netflix.hystrix.HystrixCommand.Setter.andCommandKey(HystrixCommandKey)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.Setter.commandKey : HystrixCommandKey","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"DOC_UPDATE","JAVADOC: /**
         * Optional
         * 
         * @param commandPropertiesDefaults
         *            {@link HystrixCommandProperties.Setter} with property overrides for this specific instance of {@link HystrixCommand}.
         *            <p>
         *            See the {@link HystrixPropertiesStrategy} JavaDocs for more information on properties and order of precedence.
         * @return Setter for fluent interface via method chaining
         */","METHOD: com.netflix.hystrix.HystrixCommand.Setter.andCommandPropertiesDefaults(HystrixCommandProperties.Setter)","com.netflix.hystrix.HystrixCommand.Setter.andCommandPropertiesDefaults(HystrixCommandProperties.Setter)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"DOC_UPDATE","JAVADOC: /**
         * Optional
         * 
         * @param threadPoolPropertiesDefaults
         *            {@link HystrixThreadPoolProperties.Setter} with property overrides for the {@link HystrixThreadPool} used by this specific instance of {@link HystrixCommand}.
         *            <p>
         *            See the {@link HystrixPropertiesStrategy} JavaDocs for more information on properties and order of precedence.
         * @return Setter for fluent interface via method chaining
         */","METHOD: com.netflix.hystrix.HystrixCommand.Setter.andThreadPoolPropertiesDefaults(HystrixThreadPoolProperties.Setter)","com.netflix.hystrix.HystrixCommand.Setter.andThreadPoolPropertiesDefaults(HystrixThreadPoolProperties.Setter)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.Setter.groupKey : HystrixCommandGroupKey","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_INSERT","RETURN_STATEMENT: observableCommand.getExecutionEvents();","METHOD: com.netflix.hystrix.HystrixCommand.getExecutionEvents()","com.netflix.hystrix.HystrixCommand.getExecutionEvents()","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","RETURN_STATEMENT: executionResult.events;","METHOD: com.netflix.hystrix.HystrixCommand.getExecutionEvents()","com.netflix.hystrix.HystrixCommand.getExecutionEvents()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"DOC_DELETE","JAVADOC: /**
     * List of HystrixCommandEventType enums representing events that occurred during execution.
     * <p>
     * Examples of events are SUCCESS, FAILURE, TIMEOUT, and SHORT_CIRCUITED
     * 
     * @return {@code List<HystrixEventType>}
     */","METHOD: com.netflix.hystrix.HystrixCommand.getExecutionEvents()","com.netflix.hystrix.HystrixCommand.getExecutionEvents()","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"CONDITION_EXPRESSION_CHANGE","IF_STATEMENT: properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD)","METHOD: com.netflix.hystrix.HystrixCommand.toObservable()","com.netflix.hystrix.HystrixCommand.toObservable()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_UPDATE","RETURN_STATEMENT: toObservable(Schedulers.threadPoolForComputation());","THEN_STATEMENT: properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD)","com.netflix.hystrix.HystrixCommand.toObservable()","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_INSERT","RETURN_STATEMENT: observableCommand.isFailedExecution();","METHOD: com.netflix.hystrix.HystrixCommand.isFailedExecution()","com.netflix.hystrix.HystrixCommand.isFailedExecution()","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","RETURN_STATEMENT: executionResult.events.contains(HystrixEventType.FAILURE);","METHOD: com.netflix.hystrix.HystrixCommand.isFailedExecution()","com.netflix.hystrix.HystrixCommand.isFailedExecution()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"DOC_DELETE","JAVADOC: /**
     * Whether the <code>run()</code> resulted in a failure (exception).
     * 
     * @return boolean
     */","METHOD: com.netflix.hystrix.HystrixCommand.isFailedExecution()","com.netflix.hystrix.HystrixCommand.isFailedExecution()","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_UPDATE","RETURN_STATEMENT: isExecutedInThread.get();","METHOD: com.netflix.hystrix.HystrixCommand.isExecutedInThread()","com.netflix.hystrix.HystrixCommand.isExecutedInThread()","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"DOC_DELETE","JAVADOC: /**
     * Whether the execution occurred in a separate thread.
     * <p>
     * This should be called only once execute()/queue()/fireOrForget() are called otherwise it will always return false.
     * <p>
     * This specifies if a thread execution actually occurred, not just if it is configured to be executed in a thread.
     * 
     * @return boolean
     */","METHOD: com.netflix.hystrix.HystrixCommand.isExecutedInThread()","com.netflix.hystrix.HystrixCommand.isExecutedInThread()","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_INSERT","RETURN_STATEMENT: observableCommand.getMetrics();","METHOD: com.netflix.hystrix.HystrixCommand.getMetrics()","com.netflix.hystrix.HystrixCommand.getMetrics()","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","RETURN_STATEMENT: metrics;","METHOD: com.netflix.hystrix.HystrixCommand.getMetrics()","com.netflix.hystrix.HystrixCommand.getMetrics()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"DOC_DELETE","JAVADOC: /**
     * The {@link HystrixCommandMetrics} associated with this {@link HystrixCommand} instance.
     * 
     * @return HystrixCommandMetrics
     */","METHOD: com.netflix.hystrix.HystrixCommand.getMetrics()","com.netflix.hystrix.HystrixCommand.getMetrics()","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_INSERT","RETURN_STATEMENT: observableCommand.getCommandGroup();","METHOD: com.netflix.hystrix.HystrixCommand.getCommandGroup()","com.netflix.hystrix.HystrixCommand.getCommandGroup()","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","RETURN_STATEMENT: commandGroup;","METHOD: com.netflix.hystrix.HystrixCommand.getCommandGroup()","com.netflix.hystrix.HystrixCommand.getCommandGroup()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"DOC_DELETE","JAVADOC: /**
     * @return {@link HystrixCommandGroupKey} used to group together multiple {@link HystrixCommand} objects.
     *         <p>
     *         The {@link HystrixCommandGroupKey} is used to represent a common relationship between commands. For example, a library or team name, the system all related commands interace with,
     *         common business purpose etc.
     */","METHOD: com.netflix.hystrix.HystrixCommand.getCommandGroup()","com.netflix.hystrix.HystrixCommand.getCommandGroup()","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_INSERT","RETURN_STATEMENT: observableCommand.isResponseFromFallback();","METHOD: com.netflix.hystrix.HystrixCommand.isResponseFromFallback()","com.netflix.hystrix.HystrixCommand.isResponseFromFallback()","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","RETURN_STATEMENT: executionResult.events.contains(HystrixEventType.FALLBACK_SUCCESS);","METHOD: com.netflix.hystrix.HystrixCommand.isResponseFromFallback()","com.netflix.hystrix.HystrixCommand.isResponseFromFallback()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"DOC_DELETE","JAVADOC: /**
     * Whether the response received from was the result of some type of failure
     * and <code>getFallback()</code> being called.
     * 
     * @return boolean
     */","METHOD: com.netflix.hystrix.HystrixCommand.isResponseFromFallback()","com.netflix.hystrix.HystrixCommand.isResponseFromFallback()","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_INSERT","RETURN_STATEMENT: observableCommand.isResponseTimedOut();","METHOD: com.netflix.hystrix.HystrixCommand.isResponseTimedOut()","com.netflix.hystrix.HystrixCommand.isResponseTimedOut()","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","RETURN_STATEMENT: executionResult.events.contains(HystrixEventType.TIMEOUT);","METHOD: com.netflix.hystrix.HystrixCommand.isResponseTimedOut()","com.netflix.hystrix.HystrixCommand.isResponseTimedOut()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"DOC_DELETE","JAVADOC: /**
     * Whether the response received was the result of a timeout
     * and <code>getFallback()</code> being called.
     * 
     * @return boolean
     */","METHOD: com.netflix.hystrix.HystrixCommand.isResponseTimedOut()","com.netflix.hystrix.HystrixCommand.isResponseTimedOut()","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.subscribeWithThreadIsolation(Observer<? super R>)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.subscribeWithSemaphoreIsolation(Observer<? super R>)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getExecutionSemaphore()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getFallbackOrThrowException(HystrixEventType,FailureType,String,Exception)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.recordExecutedCommand()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getFallbackSemaphore()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getDefaultNameFromClass(Class<? extends HystrixCommand>)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.decomposeException(Exception)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getFallbackOrThrowException(HystrixEventType,FailureType,String)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getLogMessagePrefix()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.executeCommand()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isRequestCachingEnabled()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.recordTotalExecutionTime(long)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getFallbackWithProtection()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.observableCommand : HystrixCommandFromObservableCommand<R>","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.isExecutedInThread : AtomicBoolean","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.executionSemaphorePerCircuit : ConcurrentHashMap<String, TryableSemaphore>","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.started : AtomicBoolean","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.executionSemaphoreOverride : TryableSemaphore","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.executionResult : ExecutionResult","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.fallbackSemaphorePerCircuit : ConcurrentHashMap<String, TryableSemaphore>","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.timeoutTimer : AtomicReference<Reference<TimerListener>>","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.threadPoolKey : HystrixThreadPoolKey","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.properties : HystrixCommandProperties","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.isExecutionComplete : AtomicBoolean","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.fallbackSemaphoreOverride : TryableSemaphore","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.metrics : HystrixCommandMetrics","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.commandKey : HystrixCommandKey","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.concurrencyStrategy : HystrixConcurrencyStrategy","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.commandGroup : HystrixCommandGroupKey","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.isCommandTimedOut : AtomicReference<TimedOutStatus>","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.circuitBreaker : HystrixCircuitBreaker","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.requestCache : HystrixRequestCache","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.logger : Logger","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.defaultNameCache : ConcurrentHashMap<Class<? extends HystrixCommand>, String>","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.invocationStartTime : long","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.executionHook : HystrixCommandExecutionHook","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.threadPool : HystrixThreadPool","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.eventNotifier : HystrixEventNotifier","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.HystrixCommandFromObservableCommand","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.TimeoutObservable","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.ExecutionResult","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.UnitTest","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.TryableSemaphore","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.ObservableCommand","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.CachedObservableOriginal","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.CachedObservableResponse","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"PARENT_INTERFACE_CHANGE","PARAMETERIZED_TYPE: OnSubscribeFunc<T>","SUPER_INTERFACE_TYPES: ","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction","CRUCIAL"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_ORDERING_CHANGE","IF_STATEMENT: subscription.isUnsubscribed()","WHILE_STATEMENT: true","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.setException(Exception)","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_ORDERING_CHANGE","IF_STATEMENT: subscription.isUnsubscribed()","WHILE_STATEMENT: true","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.setResponse(T)","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"METHOD_RENAMING","METHOD: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.onSubscribe(Observer<? super T>)","METHOD: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.onSubscribe(Observer<? super T>)","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.call(Subscriber<? super T>)","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"RETURN_TYPE_DELETE","SINGLE_TYPE: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.call(Subscriber<? super T>): Subscription","METHOD: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.onSubscribe(Observer<? super T>)","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.call(Subscriber<? super T>)","CRUCIAL"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: observer: Observer<? super T>","PARAMETER: observer","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.call(Subscriber<? super T>)","CRUCIAL"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_INSERT","METHOD_INVOCATION: observer.add(subscription);","METHOD: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.onSubscribe(Observer<? super T>)","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.call(Subscriber<? super T>)","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","LINE_COMMENT: // we'll retry","METHOD: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.onSubscribe(Observer<? super T>)","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.call(Subscriber<? super T>)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","RETURN_STATEMENT: subscription;","METHOD: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.onSubscribe(Observer<? super T>)","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.call(Subscriber<? super T>)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_CLASS","CLASS: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.UnitTest","CLASS: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction","CRUCIAL"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixRequestCache.UnitTest","CLASS: com.netflix.hystrix.HystrixRequestCache","com.netflix.hystrix.HystrixRequestCache","CRUCIAL"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCircuitBreaker.TestCircuitBreaker","CLASS: com.netflix.hystrix.HystrixCircuitBreaker","com.netflix.hystrix.HystrixCircuitBreaker","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCircuitBreaker.UnitTest","CLASS: com.netflix.hystrix.HystrixCircuitBreaker","com.netflix.hystrix.HystrixCircuitBreaker","CRUCIAL"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_INSERT","VARIABLE_DECLARATION_STATEMENT: final LinkedList<HystrixCommandKey> list = currentCommand.get();","METHOD: com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_INSERT","RETURN_STATEMENT: new Action0() {
  public @Override void call() {
    endCurrentThreadExecutingCommand(list);
  }
};","METHOD: com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_INSERT","METHOD_INVOCATION: list.push(key);","BODY: ","com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","METHOD_INVOCATION: currentCommand.get().push(key);","BODY: ","com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"DOC_INSERT","JAVADOC: /**
     * 
     * @return Action0 to perform the same work as `endCurrentThreadExecutingCommand()` but can be done from any thread
     */","METHOD: com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"RETURN_TYPE_INSERT","SINGLE_TYPE: com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey): Action0","METHOD: com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","IF_STATEMENT: (! currentCommand.get().isEmpty())","BODY: ","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","LINE_COMMENT: // this shouldn't be possible since we check for empty above and this is thread-isolated","CATCH_CLAUSE: NoSuchElementException","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","METHOD_INVOCATION: logger.debug("No command found to end.", e);","CATCH_CLAUSE: NoSuchElementException","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","CATCH_CLAUSE: NoSuchElementException","CATCH_CLAUSES: ","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","METHOD_INVOCATION: logger.warn("Unable to end command.", e);","CATCH_CLAUSE: Exception","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","CATCH_CLAUSE: Exception","CATCH_CLAUSES: ","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","TRY_STATEMENT: ","METHOD: com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_PARENT_CHANGE","METHOD_INVOCATION: currentCommand.get().pop();","THEN_STATEMENT: (! currentCommand.get().isEmpty())","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_UPDATE","METHOD_INVOCATION: currentCommand.get().pop();","METHOD: com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand(LinkedList<HystrixCommandKey>)","CLASS: com.netflix.hystrix.Hystrix","com.netflix.hystrix.Hystrix","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_CLASS","CLASS: com.netflix.hystrix.Hystrix.UnitTest","CLASS: com.netflix.hystrix.Hystrix","com.netflix.hystrix.Hystrix","CRUCIAL"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"CONDITION_EXPRESSION_CHANGE","FOREACH_STATEMENT: HystrixCommand<?> command:executedCommands","BODY: ","com.netflix.hystrix.HystrixRequestLog.getExecutedCommandsAsString()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixRequestLog.MAX_STORAGE : int","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: command: HystrixCommand<?>","PARAMETER: command","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixExecutableInfo<?>)","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_INSERT","LINE_COMMENT: // TODO remove this when deprecation completed","METHOD: com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixCommand<?>)","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixExecutableInfo<?>)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_INSERT","IF_STATEMENT: (command instanceof HystrixCommand.HystrixCommandFromObservableCommand)","METHOD: com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixCommand<?>)","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixExecutableInfo<?>)","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_INSERT","VARIABLE_DECLARATION_STATEMENT: @SuppressWarnings("rawtypes") HystrixCommand<?> _c = (HystrixCommand.HystrixCommandFromObservableCommand) command.getOriginal();","THEN_STATEMENT: (command instanceof HystrixCommand.HystrixCommandFromObservableCommand)","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixExecutableInfo<?>)","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_INSERT","IF_STATEMENT: (! executedCommands.offer(_c))","THEN_STATEMENT: (command instanceof HystrixCommand.HystrixCommandFromObservableCommand)","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixExecutableInfo<?>)","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_INSERT","LINE_COMMENT: // see RequestLog: Reduce Chance of Memory Leak https://github.com/Netflix/Hystrix/issues/53","THEN_STATEMENT: (! executedCommands.offer(_c))","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixExecutableInfo<?>)","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_INSERT","METHOD_INVOCATION: logger.warn((("RequestLog ignoring command after reaching limit of " + MAX_STORAGE) + ". See https://github.com/Netflix/Hystrix/issues/53 for more information."));","THEN_STATEMENT: (! executedCommands.offer(_c))","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixExecutableInfo<?>)","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"CONDITION_EXPRESSION_CHANGE","IF_STATEMENT: (! executedCommands.offer(command))","METHOD: com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixCommand<?>)","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixExecutableInfo<?>)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixRequestLog.getAllExecutedCommands()","CLASS: com.netflix.hystrix.HystrixRequestLog","com.netflix.hystrix.HystrixRequestLog","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixRequestLog.allExecutedCommands : LinkedBlockingQueue<HystrixExecutableInfo<?>>","CLASS: com.netflix.hystrix.HystrixRequestLog","com.netflix.hystrix.HystrixRequestLog","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixRequestLog.TestCommand","CLASS: com.netflix.hystrix.HystrixRequestLog","com.netflix.hystrix.HystrixRequestLog","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixRequestLog.UnitTest","CLASS: com.netflix.hystrix.HystrixRequestLog","com.netflix.hystrix.HystrixRequestLog","CRUCIAL"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVING_ATTRIBUTE_MODIFIABILITY","MODIFIER: final","MODIFIERS: ","com.netflix.hystrix.HystrixThreadPool.Factory.threadPools : ConcurrentHashMap<String, HystrixThreadPool>","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixThreadPool.Factory.threadPools : ConcurrentHashMap<String, HystrixThreadPool>","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_INSERT","ASSIGNMENT: this.scheduler = new HystrixContextScheduler(concurrencyStrategy, this);","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.HystrixThreadPoolDefault(HystrixThreadPoolKey,HystrixThreadPoolProperties.Setter)","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.HystrixThreadPoolDefault(HystrixThreadPoolKey,HystrixThreadPoolProperties.Setter)","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_INSERT","METHOD_INVOCATION: touchConfig();","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","LINE_COMMENT: // allow us to change things via fast-properties by setting it each time","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","METHOD_INVOCATION: threadPool.setCorePoolSize(properties.coreSize().get());","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","METHOD_INVOCATION: threadPool.setMaximumPoolSize(properties.coreSize().get());","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","LINE_COMMENT: // we always want maxSize the same as coreSize, we are not using a dynamically resizing pool","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_DELETE","METHOD_INVOCATION: threadPool.setKeepAliveTime(properties.keepAliveTimeMinutes().get(), TimeUnit.MINUTES);","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"COMMENT_DELETE","LINE_COMMENT: // this doesn't really matter since we're not resizing","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getScheduler()","CLASS: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.touchConfig()","CLASS: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.scheduler : Scheduler","CLASS: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixThreadPool.getScheduler()","CLASS: com.netflix.hystrix.HystrixThreadPool","com.netflix.hystrix.HystrixThreadPool","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixThreadPool.UnitTest","CLASS: com.netflix.hystrix.HystrixThreadPool","com.netflix.hystrix.HystrixThreadPool","CRUCIAL"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"RETURN_TYPE_CHANGE","PARAMETERIZED_TYPE: com.netflix.hystrix.exception.HystrixRuntimeException.getImplementingClass(): Class<? extends HystrixCommand>","METHOD: com.netflix.hystrix.exception.HystrixRuntimeException.getImplementingClass()","com.netflix.hystrix.exception.HystrixRuntimeException.getImplementingClass()","CRUCIAL"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: commandClass: Class<? extends HystrixCommand>","PARAMETER: commandClass","com.netflix.hystrix.exception.HystrixRuntimeException.HystrixRuntimeException(FailureType,Class<? extends HystrixExecutable>,String,Exception,Throwable)","CRUCIAL"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: commandClass: Class<? extends HystrixCommand>","PARAMETER: commandClass","com.netflix.hystrix.exception.HystrixRuntimeException.HystrixRuntimeException(FailureType,Class<? extends HystrixExecutable>,String,Throwable,Throwable)","CRUCIAL"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"ATTRIBUTE_TYPE_CHANGE","PARAMETERIZED_TYPE: Class<? extends HystrixCommand>","FIELD: com.netflix.hystrix.exception.HystrixRuntimeException.commandClass : Class<? extends HystrixCommand>","com.netflix.hystrix.exception.HystrixRuntimeException.commandClass : Class<? extends HystrixExecutable>","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCommandMetrics.UnitTest","CLASS: com.netflix.hystrix.HystrixCommandMetrics","com.netflix.hystrix.HystrixCommandMetrics","CRUCIAL"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory.getPublisherForThreadPool(HystrixThreadPoolKey,HystrixThreadPoolMetrics,HystrixThreadPoolProperties)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory.getPublisherForCommand(HystrixCommandKey,HystrixCommandGroupKey,HystrixCommandMetrics,HystrixCircuitBreaker,HystrixCommandProperties)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory.HystrixMetricsPublisherFactory(HystrixMetricsPublisher)","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_CLASS","CLASS: com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory.TestHystrixMetricsPublisher","CLASS: com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory","com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory","HIGH"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_CLASS","CLASS: com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory.UnitTest","CLASS: com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory","com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory","CRUCIAL"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.HystrixPlugins.concurrencyStrategy : AtomicReference<HystrixConcurrencyStrategy>","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.HystrixPlugins.commandExecutionHook : AtomicReference<HystrixCommandExecutionHook>","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.HystrixPlugins.metricsPublisher : AtomicReference<HystrixMetricsPublisher>","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.HystrixPlugins.notifier : AtomicReference<HystrixEventNotifier>","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.HystrixPlugins.propertiesFactory : AtomicReference<HystrixPropertiesStrategy>","MEDIUM"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_CLASS","CLASS: com.netflix.hystrix.strategy.HystrixPlugins.UnitTest","CLASS: com.netflix.hystrix.strategy.HystrixPlugins","com.netflix.hystrix.strategy.HystrixPlugins","CRUCIAL"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"DOC_UPDATE","JAVADOC: /**
 * Wrap a {@link Scheduler} so that scheduled actions are wrapped with {@link HystrixContextFunc2} so that
 * the {@link HystrixRequestContext} is properly copied across threads (if they are used by the {@link Scheduler}).
 */","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","NONE"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"STATEMENT_INSERT","ASSIGNMENT: this.threadPool = null;","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.HystrixContextScheduler(HystrixConcurrencyStrategy,Scheduler)","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.HystrixContextScheduler(HystrixConcurrencyStrategy,Scheduler)","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.schedule(Action1<Inner>,long,TimeUnit)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.schedule(Action1<Inner>)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.HystrixContextScheduler(Scheduler)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.HystrixContextScheduler(HystrixConcurrencyStrategy,HystrixThreadPool)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.schedule(T,Func2<? super Scheduler, ? super T, ? extends Subscription>)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","CRUCIAL"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.schedule(T,Func2<? super Scheduler, ? super T, ? extends Subscription>,long,TimeUnit)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","CRUCIAL"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.threadPool : HystrixThreadPool","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.HystrixContextInnerScheduler","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.InnerHystrixContextScheduler","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_CLASS","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixConcurrencyStrategy.UnitTest","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixConcurrencyStrategy","com.netflix.hystrix.strategy.concurrency.HystrixConcurrencyStrategy","CRUCIAL"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_CLASS","CLASS: com.netflix.hystrix.strategy.properties.HystrixPropertiesChainedArchaiusProperty.UnitTest","CLASS: com.netflix.hystrix.strategy.properties.HystrixPropertiesChainedArchaiusProperty","com.netflix.hystrix.strategy.properties.HystrixPropertiesChainedArchaiusProperty","CRUCIAL"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"REMOVED_CLASS","CLASS: com.netflix.hystrix.strategy.properties.HystrixProperty.UnitTest","CLASS: com.netflix.hystrix.strategy.properties.HystrixProperty","com.netflix.hystrix.strategy.properties.HystrixProperty","CRUCIAL"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onRunError(HystrixExecutable<T>,Exception)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onStart(HystrixExecutable<T>)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onThreadStart(HystrixExecutable<T>)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onError(HystrixExecutable<T>,FailureType,Exception)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onFallbackSuccess(HystrixExecutable<T>,T)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onFallbackStart(HystrixExecutable<T>)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onRunStart(HystrixExecutable<T>)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onFallbackError(HystrixExecutable<T>,Exception)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onThreadComplete(HystrixExecutable<T>)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onComplete(HystrixExecutable<T>,T)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","LOW"
338,4d28ae6f384f4422e9748bc6a7a92a37fa1dcb35,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onRunSuccess(HystrixExecutable<T>,T)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_UPDATE","RETURN_STATEMENT: toObservable(Schedulers.computation());","METHOD: com.netflix.hystrix.HystrixCollapser.toObservable()","com.netflix.hystrix.HystrixCollapser.toObservable()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCollapser.HystrixCollapser(HystrixCollapserKey,Scope,CollapserTimer,HystrixCollapserProperties.Setter)","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixCollapser.UnitTests","CLASS: com.netflix.hystrix.HystrixCollapser","com.netflix.hystrix.HystrixCollapser","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixTimer.executor : AtomicReference<ScheduledExecutor>","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixTimer.ScheduledExecutor","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixTimer.ScheduledExecutor.executor : ScheduledThreadPoolExecutor","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.util.HystrixTimer.UnitTest","CLASS: com.netflix.hystrix.util.HystrixTimer","com.netflix.hystrix.util.HystrixTimer","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.ExceptionThreadingUtility.attachCallingThreadStack(Throwable,StackTraceElement[])","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.util.ExceptionThreadingUtility.UnitTest","CLASS: com.netflix.hystrix.util.ExceptionThreadingUtility","com.netflix.hystrix.util.ExceptionThreadingUtility","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DOC_UPDATE","JAVADOC: /**
 * A number which can be used to track counters (increment) or set values over time.
 * <p>
 * It is "rolling" in the sense that a 'timeInMilliseconds' is given that you want to track (such as 10 seconds) and then that is broken into buckets (defaults to 10) so that the 10 second window
 * doesn't empty out and restart every 10 seconds, but instead every 1 second you have a new bucket added and one dropped so that 9 of the buckets remain and only the newest starts from scratch.
 * <p>
 * This is done so that the statistics are gathered over a rolling 10 second window with data being added/dropped in 1 second intervals (or whatever granularity is defined by the arguments) rather
 * than each 10 second window starting at 0 again.
 * <p>
 * Performance-wise this class is optimized for writes, not reads. This is done because it expects far higher write volume (thousands/second) than reads (a few per second).
 * <p>
 * For example, on each read to getSum/getCount it will iterate buckets to sum the data so that on writes we don't need to maintain the overall sum and pay the synchronization cost at each write to
 * ensure the sum is up-to-date when the read can easily iterate each bucket to get the sum when it needs it.
 * <p>
 * See UnitTest for usage and expected behavior examples.
 */","CLASS: com.netflix.hystrix.util.HystrixRollingNumber","com.netflix.hystrix.util.HystrixRollingNumber","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingNumber.timeInMilliseconds : HystrixProperty<Integer>","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingNumber.buckets : BucketCircularArray","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingNumber.getCurrentBucket()","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingNumber.numberOfBuckets : HystrixProperty<Integer>","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingNumber.HystrixRollingNumber(Time,int,int)","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingNumber.getBucketSizeInMilliseconds()","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.util.HystrixRollingNumber.UnitTest","CLASS: com.netflix.hystrix.util.HystrixRollingNumber","com.netflix.hystrix.util.HystrixRollingNumber","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.buckets : BucketCircularArray","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.PercentileSnapshot","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.PercentileSnapshot.PercentileSnapshot(Bucket[])","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.PercentileSnapshot.getMean()","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.PercentileSnapshot.PercentileSnapshot(int...)","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.HystrixRollingPercentile(Time,HystrixProperty<Integer>,HystrixProperty<Integer>,HystrixProperty<Integer>,HystrixProperty<Boolean>)","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.currentPercentileSnapshot : PercentileSnapshot","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.util.HystrixRollingPercentile.SampleDataHolder1","CLASS: com.netflix.hystrix.util.HystrixRollingPercentile","com.netflix.hystrix.util.HystrixRollingPercentile","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.util.HystrixRollingPercentile.SampleDataHolder2","CLASS: com.netflix.hystrix.util.HystrixRollingPercentile","com.netflix.hystrix.util.HystrixRollingPercentile","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.util.HystrixRollingPercentile.UnitTest","CLASS: com.netflix.hystrix.util.HystrixRollingPercentile","com.netflix.hystrix.util.HystrixRollingPercentile","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommandProperties.default_metricsRollingStatisticalWindow : Integer","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommandProperties.default_circuitBreakerForceClosed : Boolean","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommandProperties.Setter.Setter()","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommandProperties.Setter.getUnitTestPropertiesSetter()","CLASS: com.netflix.hystrix.HystrixCommandProperties.Setter","com.netflix.hystrix.HystrixCommandProperties.Setter","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommandProperties.Setter.asMock(Setter)","CLASS: com.netflix.hystrix.HystrixCommandProperties.Setter","com.netflix.hystrix.HystrixCommandProperties.Setter","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixCommandProperties.UnitTest","CLASS: com.netflix.hystrix.HystrixCommandProperties","com.netflix.hystrix.HystrixCommandProperties","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"PARENT_INTERFACE_DELETE","PARAMETERIZED_TYPE: HystrixExecutableInfo<R>","SUPER_INTERFACE_TYPES: ","com.netflix.hystrix.HystrixCommand","CRUCIAL"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DOC_UPDATE","JAVADOC: /**
 * Used to wrap code that will execute potentially risky functionality (typically meaning a service call over the network)
 * with fault and latency tolerance, statistics and performance metrics capture, circuit breaker and bulkhead functionality.
 * This command is essentially a blocking command but provides an Observable facade if used with observe()
 * 
 * @param <R>
 *            the return type
 */","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","BLOCK_COMMENT: /* this is a stateful object so can only be used once */","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","IF_STATEMENT: (! started.compareAndSet(false, true))","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","BLOCK_COMMENT: /* try from cache first */","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","IF_STATEMENT: isRequestCachingEnabled()","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","VARIABLE_DECLARATION_STATEMENT: final HystrixCommand<R> _this = this;","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","LINE_COMMENT: // create an Observable that will lazily execute when subscribed to","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","VARIABLE_DECLARATION_STATEMENT: Observable<R> o = Observable.create(new OnSubscribeFunc<R>() {
  public @Override Subscription onSubscribe(Observer<? super R> observer) {
    try
      {
        invocationStartTime = System.currentTimeMillis();
        executionHook.onStart(_this);
        if ((! circuitBreaker.allowRequest()))
            {
              metrics.markShortCircuited();
              try
                {
                  observer.onNext(getFallbackOrThrowException(HystrixEventType.SHORT_CIRCUITED, FailureType.SHORTCIRCUIT, "short-circuited"));
                  observer.onCompleted();
                }
              catch (Exception e)
                {
                  observer.onError(e);
                }
              return Subscriptions.empty();
            }
        else
            {
              try
                {
                  if (properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD))
                      {
                        return subscribeWithThreadIsolation(observer);
                      }
                  else
                      {
                        return subscribeWithSemaphoreIsolation(observer);
                      }
                }
              catch (RuntimeException e)
                {
                  observer.onError(e);
                  return Subscriptions.empty();
                }
            }
      }
    finally
      {
        recordExecutedCommand();
      }
  }
});","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","BLOCK_COMMENT: /* used to track userThreadExecutionTime */","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","LINE_COMMENT: // mark that we're starting execution on the ExecutionHook","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","BLOCK_COMMENT: /* determine if we're allowed to execute */","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","LINE_COMMENT: // record that we are returning a short-circuited fallback","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","LINE_COMMENT: // short-circuit and go directly to fallback (or throw an exception if no fallback implemented)","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","BLOCK_COMMENT: /* not short-circuited so proceed with queuing the execution */","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","IF_STATEMENT: properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD)","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","LINE_COMMENT: // error handling","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","ASSIGNMENT: o = o.onErrorResumeNext(new Func1<Throwable, Observable<R>>() {
  public @Override Observable<R> call(Throwable e) {
    metrics.markExceptionThrown();
    return Observable.error(e);
  }
});","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","LINE_COMMENT: // count that we are throwing an exception and re-throw it","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","LINE_COMMENT: // we want to hand off work to a different scheduler so we don't tie up the Hystrix thread","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","IF_STATEMENT: (! Schedulers.immediate().equals(observeOn))","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","ASSIGNMENT: o = o.finallyDo(new Action0() {
  public @Override void call() {
    Reference<TimerListener> tl = timeoutTimer.get();
    if ((tl != null))
        {
          tl.clear();
        }
  }
});","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","LINE_COMMENT: // put in cache","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","IF_STATEMENT: isRequestCachingEnabled()","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ALTERNATIVE_PART_INSERT","ELSE_STATEMENT: isRequestCachingEnabled()","IF_STATEMENT: isRequestCachingEnabled()","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","THROW_STATEMENT: new IllegalStateException("This instance can only be executed once. Please instantiate a new instance.");","THEN_STATEMENT: (! started.compareAndSet(false, true))","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","VARIABLE_DECLARATION_STATEMENT: Observable<R> fromCache = requestCache.get(getCacheKey());","THEN_STATEMENT: isRequestCachingEnabled()","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","IF_STATEMENT: (fromCache != null)","THEN_STATEMENT: isRequestCachingEnabled()","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","LINE_COMMENT: // wrap for timeout support","THEN_STATEMENT: properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","ASSIGNMENT: o = new TimeoutObservable<R>(o, _this, performAsyncTimeout);","THEN_STATEMENT: properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","LINE_COMMENT: // don't waste overhead if it's the 'immediate' scheduler
            // otherwise we'll 'observeOn' and wrap with the HystrixContextScheduler
            // to copy state across threads (if threads are involved)","THEN_STATEMENT: (! Schedulers.immediate().equals(observeOn))","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","ASSIGNMENT: o = o.observeOn(new HystrixContextScheduler(concurrencyStrategy, observeOn));","THEN_STATEMENT: (! Schedulers.immediate().equals(observeOn))","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","LINE_COMMENT: // wrap it for caching","THEN_STATEMENT: isRequestCachingEnabled()","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","ASSIGNMENT: o = new CachedObservableOriginal<R>(o.cache(), this);","THEN_STATEMENT: isRequestCachingEnabled()","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","VARIABLE_DECLARATION_STATEMENT: Observable<R> fromCache = requestCache.putIfAbsent(getCacheKey(), o);","THEN_STATEMENT: isRequestCachingEnabled()","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","IF_STATEMENT: (fromCache != null)","THEN_STATEMENT: isRequestCachingEnabled()","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","LINE_COMMENT: // we just created an ObservableCommand so we cast and return it","THEN_STATEMENT: isRequestCachingEnabled()","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","RETURN_STATEMENT: (ObservableCommand<R>) o;","THEN_STATEMENT: isRequestCachingEnabled()","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","LINE_COMMENT: // no request caching so a simple wrapper just to pass 'this' along with the Observable","ELSE_STATEMENT: isRequestCachingEnabled()","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","RETURN_STATEMENT: new ObservableCommand<R>(o, this);","ELSE_STATEMENT: isRequestCachingEnabled()","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","BLOCK_COMMENT: /* mark that we received this response from cache */","THEN_STATEMENT: (fromCache != null)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","METHOD_INVOCATION: metrics.markResponseFromCache();","THEN_STATEMENT: (fromCache != null)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","RETURN_STATEMENT: new CachedObservableResponse<R>((CachedObservableOriginal<R>) fromCache, this);","THEN_STATEMENT: (fromCache != null)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","LINE_COMMENT: // another thread beat us so we'll use the cached value instead","THEN_STATEMENT: (fromCache != null)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","ASSIGNMENT: o = new CachedObservableResponse<R>((CachedObservableOriginal<R>) fromCache, this);","THEN_STATEMENT: (fromCache != null)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_DELETE","RETURN_STATEMENT: observableCommand.toObservable(observeOn, performAsyncTimeout);","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","RETURN_STATEMENT: properties;","METHOD: com.netflix.hystrix.HystrixCommand.getProperties()","com.netflix.hystrix.HystrixCommand.getProperties()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_DELETE","RETURN_STATEMENT: observableCommand.getProperties();","METHOD: com.netflix.hystrix.HystrixCommand.getProperties()","com.netflix.hystrix.HystrixCommand.getProperties()","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DOC_INSERT","JAVADOC: /**
     * The {@link HystrixCommandProperties} associated with this {@link HystrixCommand} instance.
     * 
     * @return HystrixCommandProperties
     */","METHOD: com.netflix.hystrix.HystrixCommand.getProperties()","com.netflix.hystrix.HystrixCommand.getProperties()","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","TRY_STATEMENT: ","METHOD: com.netflix.hystrix.HystrixCommand.execute()","com.netflix.hystrix.HystrixCommand.execute()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","RETURN_STATEMENT: queue().get();","BODY: ","com.netflix.hystrix.HystrixCommand.execute()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","CATCH_CLAUSE: Exception","CATCH_CLAUSES: ","com.netflix.hystrix.HystrixCommand.execute()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","THROW_STATEMENT: decomposeException(e);","CATCH_CLAUSE: Exception","com.netflix.hystrix.HystrixCommand.execute()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_DELETE","RETURN_STATEMENT: observableCommand.execute();","METHOD: com.netflix.hystrix.HystrixCommand.execute()","com.netflix.hystrix.HystrixCommand.execute()","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DOC_INSERT","JAVADOC: /**
     * Used for synchronous execution of command.
     * 
     * @return R
     *         Result of {@link #run()} execution or a fallback from {@link #getFallback()} if the command fails for any reason.
     * @throws HystrixRuntimeException
     *             if a failure occurs and a fallback cannot be retrieved
     * @throws HystrixBadRequestException
     *             if invalid arguments or state were used representing a user failure, not a system failure
     * @throws IllegalStateException
     *             if invoked more than once
     */","METHOD: com.netflix.hystrix.HystrixCommand.execute()","com.netflix.hystrix.HystrixCommand.execute()","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","RETURN_STATEMENT: circuitBreaker;","METHOD: com.netflix.hystrix.HystrixCommand.getCircuitBreaker()","com.netflix.hystrix.HystrixCommand.getCircuitBreaker()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_DELETE","RETURN_STATEMENT: observableCommand.getCircuitBreaker();","METHOD: com.netflix.hystrix.HystrixCommand.getCircuitBreaker()","com.netflix.hystrix.HystrixCommand.getCircuitBreaker()","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","RETURN_STATEMENT: threadPoolKey;","METHOD: com.netflix.hystrix.HystrixCommand.getThreadPoolKey()","com.netflix.hystrix.HystrixCommand.getThreadPoolKey()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_DELETE","RETURN_STATEMENT: observableCommand.getThreadPoolKey();","METHOD: com.netflix.hystrix.HystrixCommand.getThreadPoolKey()","com.netflix.hystrix.HystrixCommand.getThreadPoolKey()","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DOC_INSERT","JAVADOC: /**
     * @return {@link HystrixThreadPoolKey} identifying which thread-pool this command uses (when configured to run on separate threads via
     *         {@link HystrixCommandProperties#executionIsolationStrategy()}).
     */","METHOD: com.netflix.hystrix.HystrixCommand.getThreadPoolKey()","com.netflix.hystrix.HystrixCommand.getThreadPoolKey()","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","BLOCK_COMMENT: /*
         * CommandGroup initialization
         */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","IF_STATEMENT: (group == null)","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","BLOCK_COMMENT: /*
         * Properties initialization
         */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","IF_STATEMENT: (propertiesStrategy == null)","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","BLOCK_COMMENT: /*
         * ThreadPoolKey
         * 
         * This defines which thread-pool this command should run on.
         * 
         * It uses the HystrixThreadPoolKey if provided, then defaults to use HystrixCommandGroup.
         * 
         * It can then be overridden by a property if defined so it can be changed at runtime.
         */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","IF_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","BLOCK_COMMENT: /* strategy: HystrixEventNotifier */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","ASSIGNMENT: this.eventNotifier = HystrixPlugins.getInstance().getEventNotifier();","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","BLOCK_COMMENT: /* strategy: HystrixConcurrentStrategy */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","ASSIGNMENT: this.concurrencyStrategy = HystrixPlugins.getInstance().getConcurrencyStrategy();","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","BLOCK_COMMENT: /*
         * Metrics initialization
         */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","IF_STATEMENT: (metrics == null)","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","BLOCK_COMMENT: /*
         * CircuitBreaker initialization
         */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","IF_STATEMENT: this.properties.circuitBreakerEnabled().get()","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","BLOCK_COMMENT: /* strategy: HystrixMetricsPublisherCommand */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","METHOD_INVOCATION: HystrixMetricsPublisherFactory.createOrRetrievePublisherForCommand(this.commandKey, this.commandGroup, this.metrics, this.circuitBreaker, this.properties);","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","BLOCK_COMMENT: /* strategy: HystrixCommandExecutionHook */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","IF_STATEMENT: (executionHook == null)","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","BLOCK_COMMENT: /*
         * ThreadPool initialization
         */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","IF_STATEMENT: (threadPool == null)","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","BLOCK_COMMENT: /* fallback semaphore override if applicable */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","ASSIGNMENT: this.fallbackSemaphoreOverride = fallbackSemaphore;","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","BLOCK_COMMENT: /* execution semaphore override if applicable */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","ASSIGNMENT: this.executionSemaphoreOverride = executionSemaphore;","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","BLOCK_COMMENT: /* setup the request cache for this instance */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","ASSIGNMENT: this.requestCache = HystrixRequestCache.getInstance(this.commandKey, this.concurrencyStrategy);","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ALTERNATIVE_PART_INSERT","ELSE_STATEMENT: (group == null)","IF_STATEMENT: (group == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ALTERNATIVE_PART_INSERT","ELSE_STATEMENT: (propertiesStrategy == null)","IF_STATEMENT: (propertiesStrategy == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ALTERNATIVE_PART_INSERT","ELSE_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","IF_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ALTERNATIVE_PART_INSERT","ELSE_STATEMENT: (metrics == null)","IF_STATEMENT: (metrics == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ALTERNATIVE_PART_INSERT","ELSE_STATEMENT: this.properties.circuitBreakerEnabled().get()","IF_STATEMENT: this.properties.circuitBreakerEnabled().get()","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ALTERNATIVE_PART_INSERT","ELSE_STATEMENT: (executionHook == null)","IF_STATEMENT: (executionHook == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ALTERNATIVE_PART_INSERT","ELSE_STATEMENT: (threadPool == null)","IF_STATEMENT: (threadPool == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","THROW_STATEMENT: new IllegalStateException("HystrixCommandGroup can not be NULL");","THEN_STATEMENT: (group == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","ASSIGNMENT: this.commandGroup = group;","ELSE_STATEMENT: (group == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","ASSIGNMENT: this.properties = HystrixPropertiesFactory.getCommandProperties(this.commandKey, commandPropertiesDefaults);","THEN_STATEMENT: (propertiesStrategy == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","LINE_COMMENT: // used for unit testing","ELSE_STATEMENT: (propertiesStrategy == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","ASSIGNMENT: this.properties = propertiesStrategy.getCommandProperties(this.commandKey, commandPropertiesDefaults);","ELSE_STATEMENT: (propertiesStrategy == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","LINE_COMMENT: // we don't have a property overriding the value so use either HystrixThreadPoolKey or HystrixCommandGroup","THEN_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","IF_STATEMENT: (threadPoolKey == null)","THEN_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","LINE_COMMENT: // we have a property defining the thread-pool so use it instead","ELSE_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","ASSIGNMENT: this.threadPoolKey = HystrixThreadPoolKey.Factory.asKey(properties.executionIsolationThreadPoolKeyOverride().get());","ELSE_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","ASSIGNMENT: this.metrics = HystrixCommandMetrics.getInstance(this.commandKey, this.commandGroup, this.properties);","THEN_STATEMENT: (metrics == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","ASSIGNMENT: this.metrics = metrics;","ELSE_STATEMENT: (metrics == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","IF_STATEMENT: (circuitBreaker == null)","THEN_STATEMENT: this.properties.circuitBreakerEnabled().get()","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","ASSIGNMENT: this.circuitBreaker = new NoOpCircuitBreaker();","ELSE_STATEMENT: this.properties.circuitBreakerEnabled().get()","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","ASSIGNMENT: this.executionHook = HystrixPlugins.getInstance().getCommandExecutionHook();","THEN_STATEMENT: (executionHook == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","LINE_COMMENT: // used for unit testing","ELSE_STATEMENT: (executionHook == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","ASSIGNMENT: this.executionHook = executionHook;","ELSE_STATEMENT: (executionHook == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","LINE_COMMENT: // get the default implementation of HystrixThreadPool","THEN_STATEMENT: (threadPool == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","ASSIGNMENT: this.threadPool = HystrixThreadPool.Factory.getInstance(this.threadPoolKey, threadPoolPropertiesDefaults);","THEN_STATEMENT: (threadPool == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","ASSIGNMENT: this.threadPool = threadPool;","ELSE_STATEMENT: (threadPool == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ALTERNATIVE_PART_INSERT","ELSE_STATEMENT: (threadPoolKey == null)","IF_STATEMENT: (threadPoolKey == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ALTERNATIVE_PART_INSERT","ELSE_STATEMENT: (circuitBreaker == null)","IF_STATEMENT: (circuitBreaker == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","BLOCK_COMMENT: /* use HystrixCommandGroup if HystrixThreadPoolKey is null */","THEN_STATEMENT: (threadPoolKey == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","ASSIGNMENT: this.threadPoolKey = HystrixThreadPoolKey.Factory.asKey(commandGroup.name());","THEN_STATEMENT: (threadPoolKey == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","ASSIGNMENT: this.threadPoolKey = threadPoolKey;","ELSE_STATEMENT: (threadPoolKey == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","LINE_COMMENT: // get the default implementation of HystrixCircuitBreaker","THEN_STATEMENT: (circuitBreaker == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","ASSIGNMENT: this.circuitBreaker = HystrixCircuitBreaker.Factory.getInstance(this.commandKey, this.commandGroup, this.properties, this.metrics);","THEN_STATEMENT: (circuitBreaker == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","ASSIGNMENT: this.circuitBreaker = circuitBreaker;","ELSE_STATEMENT: (circuitBreaker == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_DELETE","VARIABLE_DECLARATION_STATEMENT: HystrixCommandKey commandKey = null;","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_DELETE","LINE_COMMENT: // use the HystrixCommand class rather than this ObservableCommand class if we have it","THEN_STATEMENT: ((key == null) || key.name().trim().equals(""))","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_DELETE","ASSIGNMENT: this.observableCommand = new HystrixCommandFromObservableCommand<R>(this, group, commandKey, threadPoolKey, circuitBreaker, threadPool, commandPropertiesDefaults, threadPoolPropertiesDefaults, metrics, fallbackSemaphore, executionSemaphore, propertiesStrategy, executionHook);","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_UPDATE","VARIABLE_DECLARATION_STATEMENT: final String keyName = HystrixExecutableBase.getDefaultNameFromClass(getClass());","THEN_STATEMENT: ((key == null) || key.name().trim().equals(""))","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_UPDATE","ASSIGNMENT: commandKey = HystrixCommandKey.Factory.asKey(keyName);","THEN_STATEMENT: ((key == null) || key.name().trim().equals(""))","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_UPDATE","ASSIGNMENT: commandKey = key;","ELSE_STATEMENT: ((key == null) || key.name().trim().equals(""))","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","RETURN_STATEMENT: executionResult.events.contains(HystrixEventType.SHORT_CIRCUITED);","METHOD: com.netflix.hystrix.HystrixCommand.isResponseShortCircuited()","com.netflix.hystrix.HystrixCommand.isResponseShortCircuited()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_DELETE","RETURN_STATEMENT: observableCommand.isResponseShortCircuited();","METHOD: com.netflix.hystrix.HystrixCommand.isResponseShortCircuited()","com.netflix.hystrix.HystrixCommand.isResponseShortCircuited()","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DOC_INSERT","JAVADOC: /**
     * Whether the response received was a fallback as result of being
     * short-circuited (meaning <code>isCircuitBreakerOpen() == true</code>) and <code>getFallback()</code> being called.
     * 
     * @return boolean
     */","METHOD: com.netflix.hystrix.HystrixCommand.isResponseShortCircuited()","com.netflix.hystrix.HystrixCommand.isResponseShortCircuited()","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","RETURN_STATEMENT: executionResult.exception;","METHOD: com.netflix.hystrix.HystrixCommand.getFailedExecutionException()","com.netflix.hystrix.HystrixCommand.getFailedExecutionException()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_DELETE","RETURN_STATEMENT: observableCommand.getFailedExecutionException();","METHOD: com.netflix.hystrix.HystrixCommand.getFailedExecutionException()","com.netflix.hystrix.HystrixCommand.getFailedExecutionException()","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DOC_INSERT","JAVADOC: /**
     * Get the Throwable/Exception thrown that caused the failure.
     * <p>
     * If <code>isFailedExecution() == true</code> then this would represent the Exception thrown by the <code>run()</code> method.
     * <p>
     * If <code>isFailedExecution() == false</code> then this would return null.
     * 
     * @return Throwable or null
     */","METHOD: com.netflix.hystrix.HystrixCommand.getFailedExecutionException()","com.netflix.hystrix.HystrixCommand.getFailedExecutionException()","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","RETURN_STATEMENT: executionResult.events.contains(HystrixEventType.RESPONSE_FROM_CACHE);","METHOD: com.netflix.hystrix.HystrixCommand.isResponseFromCache()","com.netflix.hystrix.HystrixCommand.isResponseFromCache()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_DELETE","RETURN_STATEMENT: observableCommand.isResponseFromCache();","METHOD: com.netflix.hystrix.HystrixCommand.isResponseFromCache()","com.netflix.hystrix.HystrixCommand.isResponseFromCache()","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DOC_INSERT","JAVADOC: /**
     * Whether the response is from cache and <code>run()</code> was not invoked.
     * 
     * @return boolean
     */","METHOD: com.netflix.hystrix.HystrixCommand.isResponseFromCache()","com.netflix.hystrix.HystrixCommand.isResponseFromCache()","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_UPDATE","RETURN_STATEMENT: observableCommand.isExecutionComplete();","METHOD: com.netflix.hystrix.HystrixCommand.isExecutionComplete()","com.netflix.hystrix.HystrixCommand.isExecutionComplete()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DOC_INSERT","JAVADOC: /**
     * If this command has completed execution either successfully, via fallback or failure.
     * 
     * @return boolean
     */","METHOD: com.netflix.hystrix.HystrixCommand.isExecutionComplete()","com.netflix.hystrix.HystrixCommand.isExecutionComplete()","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","ASSIGNMENT: executionResult = executionResult.addEvents(HystrixEventType.COLLAPSED);","METHOD: com.netflix.hystrix.HystrixCommand.markAsCollapsedCommand(int)","com.netflix.hystrix.HystrixCommand.markAsCollapsedCommand(int)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_UPDATE","METHOD_INVOCATION: observableCommand.markAsCollapsedCommand(sizeOfBatch);","METHOD: com.netflix.hystrix.HystrixCommand.markAsCollapsedCommand(int)","com.netflix.hystrix.HystrixCommand.markAsCollapsedCommand(int)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DOC_INSERT","JAVADOC: /**
     * Allow the Collapser to mark this command instance as being used for a collapsed request and how many requests were collapsed.
     * 
     * @param sizeOfBatch
     */","METHOD: com.netflix.hystrix.HystrixCommand.markAsCollapsedCommand(int)","com.netflix.hystrix.HystrixCommand.markAsCollapsedCommand(int)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","BLOCK_COMMENT: /*
         * --- Schedulers.immediate()
         * 
         * We use the 'immediate' schedule since Future.get() is blocking so we don't want to bother doing the callback to the Future on a separate thread
         * as we don't need to separate the Hystrix thread from user threads since they are already providing it via the Future.get() call.
         * 
         * --- performAsyncTimeout: false
         * 
         * We pass 'false' to tell the Observable we will block on it so it doesn't schedule an async timeout.
         * 
         * This optimizes for using the calling thread to do the timeout rather than scheduling another thread.
         * 
         * In a tight-loop of executing commands this optimization saves a few microseconds per execution.
         * It also just makes no sense to use a separate thread to timeout the command when the calling thread
         * is going to sit waiting on it.
         */","METHOD: com.netflix.hystrix.HystrixCommand.queue()","com.netflix.hystrix.HystrixCommand.queue()","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","VARIABLE_DECLARATION_STATEMENT: final ObservableCommand<R> o = toObservable(Schedulers.immediate(), false);","METHOD: com.netflix.hystrix.HystrixCommand.queue()","com.netflix.hystrix.HystrixCommand.queue()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","VARIABLE_DECLARATION_STATEMENT: final Future<R> f = o.toBlockingObservable().toFuture();","METHOD: com.netflix.hystrix.HystrixCommand.queue()","com.netflix.hystrix.HystrixCommand.queue()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","BLOCK_COMMENT: /* special handling of error states that throw immediately */","METHOD: com.netflix.hystrix.HystrixCommand.queue()","com.netflix.hystrix.HystrixCommand.queue()","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","IF_STATEMENT: f.isDone()","METHOD: com.netflix.hystrix.HystrixCommand.queue()","com.netflix.hystrix.HystrixCommand.queue()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","RETURN_STATEMENT: new Future<R>() {
  public @Override boolean cancel(boolean mayInterruptIfRunning) {
    return f.cancel(mayInterruptIfRunning);
  }
  public @Override boolean isCancelled() {
    return f.isCancelled();
  }
  public @Override boolean isDone() {
    return f.isDone();
  }
  public @Override R get() throws InterruptedException, ExecutionException {
    return performBlockingGetWithTimeout(o, f);
  }
  /**
     * @param   o
     * @param   f
     * @throws   InterruptedException
     * @throws   ExecutionException
   */
  protected R performBlockingGetWithTimeout(final ObservableCommand<R> o, final Future<R> f) throws InterruptedException, ExecutionException {
    if (f.isDone())
        {
          return f.get();
        }
    HystrixCommand<R> originalCommand = o.getCommand();
    if ((originalCommand != null))
        {
          Reference<TimerListener> timer = originalCommand.timeoutTimer.getAndSet(null);
          if ((timer != null))
              {
                TimerListener l = timer.get();
                timer.clear();
                long timeout = originalCommand.properties.executionIsolationThreadTimeoutInMilliseconds().get();
                long timeRemaining = timeout;
                long currTime = System.currentTimeMillis();
                if ((originalCommand.invocationStartTime != (- 1)))
                    {
                      timeRemaining = ((originalCommand.invocationStartTime + originalCommand.properties.executionIsolationThreadTimeoutInMilliseconds().get()) - currTime);
                    }
                if ((timeRemaining > 0))
                    {
                      try
                        {
                          return f.get(timeRemaining, TimeUnit.MILLISECONDS);
                        }
                      catch (TimeoutException e)
                        {
                          if ((l != null))
                              {
                                l.tick();
                              }
                        }
                    }
                else
                    {
                      if ((! f.isDone()))
                          {
                            if ((l != null))
                                {
                                  l.tick();
                                }
                          }
                    }
              }
        }
    return f.get();
  }
  public @Override R get(long timeout, TimeUnit unit) throws InterruptedException, ExecutionException, TimeoutException {
    return get();
  }
};","METHOD: com.netflix.hystrix.HystrixCommand.queue()","com.netflix.hystrix.HystrixCommand.queue()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","TRY_STATEMENT: ","THEN_STATEMENT: f.isDone()","com.netflix.hystrix.HystrixCommand.queue()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","METHOD_INVOCATION: f.get();","BODY: ","com.netflix.hystrix.HystrixCommand.queue()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","RETURN_STATEMENT: f;","BODY: ","com.netflix.hystrix.HystrixCommand.queue()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","CATCH_CLAUSE: Exception","CATCH_CLAUSES: ","com.netflix.hystrix.HystrixCommand.queue()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","VARIABLE_DECLARATION_STATEMENT: RuntimeException re = decomposeException(e);","CATCH_CLAUSE: Exception","com.netflix.hystrix.HystrixCommand.queue()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","IF_STATEMENT: (re instanceof HystrixBadRequestException)","CATCH_CLAUSE: Exception","com.netflix.hystrix.HystrixCommand.queue()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ALTERNATIVE_PART_INSERT","ELSE_STATEMENT: (re instanceof HystrixBadRequestException)","IF_STATEMENT: (re instanceof HystrixBadRequestException)","com.netflix.hystrix.HystrixCommand.queue()","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","RETURN_STATEMENT: f;","THEN_STATEMENT: (re instanceof HystrixBadRequestException)","com.netflix.hystrix.HystrixCommand.queue()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","IF_STATEMENT: (re instanceof HystrixRuntimeException)","ELSE_STATEMENT: (re instanceof HystrixBadRequestException)","com.netflix.hystrix.HystrixCommand.queue()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ALTERNATIVE_PART_INSERT","ELSE_STATEMENT: (re instanceof HystrixRuntimeException)","IF_STATEMENT: (re instanceof HystrixRuntimeException)","com.netflix.hystrix.HystrixCommand.queue()","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","VARIABLE_DECLARATION_STATEMENT: HystrixRuntimeException hre = (HystrixRuntimeException) re;","THEN_STATEMENT: (re instanceof HystrixRuntimeException)","com.netflix.hystrix.HystrixCommand.queue()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","IF_STATEMENT: ((hre.getFailureType() == FailureType.COMMAND_EXCEPTION) || (hre.getFailureType() == FailureType.TIMEOUT))","THEN_STATEMENT: (re instanceof HystrixRuntimeException)","com.netflix.hystrix.HystrixCommand.queue()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","THROW_STATEMENT: re;","ELSE_STATEMENT: (re instanceof HystrixRuntimeException)","com.netflix.hystrix.HystrixCommand.queue()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ALTERNATIVE_PART_INSERT","ELSE_STATEMENT: ((hre.getFailureType() == FailureType.COMMAND_EXCEPTION) || (hre.getFailureType() == FailureType.TIMEOUT))","IF_STATEMENT: ((hre.getFailureType() == FailureType.COMMAND_EXCEPTION) || (hre.getFailureType() == FailureType.TIMEOUT))","com.netflix.hystrix.HystrixCommand.queue()","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","LINE_COMMENT: // we don't throw these types from queue() only from queue().get() as they are execution errors","THEN_STATEMENT: ((hre.getFailureType() == FailureType.COMMAND_EXCEPTION) || (hre.getFailureType() == FailureType.TIMEOUT))","com.netflix.hystrix.HystrixCommand.queue()","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","RETURN_STATEMENT: f;","THEN_STATEMENT: ((hre.getFailureType() == FailureType.COMMAND_EXCEPTION) || (hre.getFailureType() == FailureType.TIMEOUT))","com.netflix.hystrix.HystrixCommand.queue()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","LINE_COMMENT: // these are errors we throw from queue() as they as rejection type errors","ELSE_STATEMENT: ((hre.getFailureType() == FailureType.COMMAND_EXCEPTION) || (hre.getFailureType() == FailureType.TIMEOUT))","com.netflix.hystrix.HystrixCommand.queue()","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","THROW_STATEMENT: hre;","ELSE_STATEMENT: ((hre.getFailureType() == FailureType.COMMAND_EXCEPTION) || (hre.getFailureType() == FailureType.TIMEOUT))","com.netflix.hystrix.HystrixCommand.queue()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_DELETE","RETURN_STATEMENT: observableCommand.queue();","METHOD: com.netflix.hystrix.HystrixCommand.queue()","com.netflix.hystrix.HystrixCommand.queue()","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DOC_INSERT","JAVADOC: /**
     * Used for asynchronous execution of command.
     * <p>
     * This will queue up the command on the thread pool and return an {@link Future} to get the result once it completes.
     * <p>
     * NOTE: If configured to not run in a separate thread, this will have the same effect as {@link #execute()} and will block.
     * <p>
     * We don't throw an exception but just flip to synchronous execution so code doesn't need to change in order to switch a command from running on a separate thread to the calling thread.
     * 
     * @return {@code Future<R>} Result of {@link #run()} execution or a fallback from {@link #getFallback()} if the command fails for any reason.
     * @throws HystrixRuntimeException
     *             if a fallback does not exist
     *             <p>
     *             <ul>
     *             <li>via {@code Future.get()} in {@link ExecutionException#getCause()} if a failure occurs</li>
     *             <li>or immediately if the command can not be queued (such as short-circuited, thread-pool/semaphore rejected)</li>
     *             </ul>
     * @throws HystrixBadRequestException
     *             via {@code Future.get()} in {@link ExecutionException#getCause()} if invalid arguments or state were used representing a user failure, not a system failure
     * @throws IllegalStateException
     *             if invoked more than once
     */","METHOD: com.netflix.hystrix.HystrixCommand.queue()","com.netflix.hystrix.HystrixCommand.queue()","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","RETURN_STATEMENT: executionResult.events.contains(HystrixEventType.SUCCESS);","METHOD: com.netflix.hystrix.HystrixCommand.isSuccessfulExecution()","com.netflix.hystrix.HystrixCommand.isSuccessfulExecution()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_DELETE","RETURN_STATEMENT: observableCommand.isSuccessfulExecution();","METHOD: com.netflix.hystrix.HystrixCommand.isSuccessfulExecution()","com.netflix.hystrix.HystrixCommand.isSuccessfulExecution()","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DOC_INSERT","JAVADOC: /**
     * Whether the response was returned successfully either by executing <code>run()</code> or from cache.
     * 
     * @return boolean
     */","METHOD: com.netflix.hystrix.HystrixCommand.isSuccessfulExecution()","com.netflix.hystrix.HystrixCommand.isSuccessfulExecution()","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","RETURN_STATEMENT: executionResult.executionTime;","METHOD: com.netflix.hystrix.HystrixCommand.getExecutionTimeInMilliseconds()","com.netflix.hystrix.HystrixCommand.getExecutionTimeInMilliseconds()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_DELETE","RETURN_STATEMENT: observableCommand.getExecutionTimeInMilliseconds();","METHOD: com.netflix.hystrix.HystrixCommand.getExecutionTimeInMilliseconds()","com.netflix.hystrix.HystrixCommand.getExecutionTimeInMilliseconds()","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DOC_INSERT","JAVADOC: /**
     * The execution time of this command instance in milliseconds, or -1 if not executed.
     * 
     * @return int
     */","METHOD: com.netflix.hystrix.HystrixCommand.getExecutionTimeInMilliseconds()","com.netflix.hystrix.HystrixCommand.getExecutionTimeInMilliseconds()","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","LINE_COMMENT: // us a ReplaySubject to buffer the eagerly subscribed-to Observable","METHOD: com.netflix.hystrix.HystrixCommand.observe()","com.netflix.hystrix.HystrixCommand.observe()","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","VARIABLE_DECLARATION_STATEMENT: ReplaySubject<R> subject = ReplaySubject.create();","METHOD: com.netflix.hystrix.HystrixCommand.observe()","com.netflix.hystrix.HystrixCommand.observe()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","LINE_COMMENT: // eagerly kick off subscription","METHOD: com.netflix.hystrix.HystrixCommand.observe()","com.netflix.hystrix.HystrixCommand.observe()","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","METHOD_INVOCATION: toObservable().subscribe(subject);","METHOD: com.netflix.hystrix.HystrixCommand.observe()","com.netflix.hystrix.HystrixCommand.observe()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","LINE_COMMENT: // return the subject that can be subscribed to later while the execution has already started","METHOD: com.netflix.hystrix.HystrixCommand.observe()","com.netflix.hystrix.HystrixCommand.observe()","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","RETURN_STATEMENT: subject;","METHOD: com.netflix.hystrix.HystrixCommand.observe()","com.netflix.hystrix.HystrixCommand.observe()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_DELETE","RETURN_STATEMENT: observableCommand.observe();","METHOD: com.netflix.hystrix.HystrixCommand.observe()","com.netflix.hystrix.HystrixCommand.observe()","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DOC_INSERT","JAVADOC: /**
     * Used for asynchronous execution of command with a callback by subscribing to the {@link Observable}.
     * <p>
     * This eagerly starts execution of the command the same as {@link #queue()} and {@link #execute()}.
     * A lazy {@link Observable} can be obtained from {@link #toObservable()}.
     * <p>
     * <b>Callback Scheduling</b>
     * <p>
     * <ul>
     * <li>When using {@link ExecutionIsolationStrategy#THREAD} this defaults to using {@link Schedulers#threadPoolForComputation()} for callbacks.</li>
     * <li>When using {@link ExecutionIsolationStrategy#SEMAPHORE} this defaults to using {@link Schedulers#immediate()} for callbacks.</li>
     * </ul>
     * Use {@link #toObservable(rx.Scheduler)} to schedule the callback differently.
     * <p>
     * See https://github.com/Netflix/RxJava/wiki for more information.
     * 
     * @return {@code Observable<R>} that executes and calls back with the result of {@link #run()} execution or a fallback from {@link #getFallback()} if the command fails for any reason.
     * @throws HystrixRuntimeException
     *             if a fallback does not exist
     *             <p>
     *             <ul>
     *             <li>via {@code Observer#onError} if a failure occurs</li>
     *             <li>or immediately if the command can not be queued (such as short-circuited, thread-pool/semaphore rejected)</li>
     *             </ul>
     * @throws HystrixBadRequestException
     *             via {@code Observer#onError} if invalid arguments or state were used representing a user failure, not a system failure
     * @throws IllegalStateException
     *             if invoked more than once
     */","METHOD: com.netflix.hystrix.HystrixCommand.observe()","com.netflix.hystrix.HystrixCommand.observe()","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_UPDATE","RETURN_STATEMENT: observableCommand.isCircuitBreakerOpen();","METHOD: com.netflix.hystrix.HystrixCommand.isCircuitBreakerOpen()","com.netflix.hystrix.HystrixCommand.isCircuitBreakerOpen()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DOC_INSERT","JAVADOC: /**
     * Whether the 'circuit-breaker' is open meaning that <code>execute()</code> will immediately return
     * the <code>getFallback()</code> response and not attempt a HystrixCommand execution.
     * 
     * @return boolean
     */","METHOD: com.netflix.hystrix.HystrixCommand.isCircuitBreakerOpen()","com.netflix.hystrix.HystrixCommand.isCircuitBreakerOpen()","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","RETURN_STATEMENT: commandKey;","METHOD: com.netflix.hystrix.HystrixCommand.getCommandKey()","com.netflix.hystrix.HystrixCommand.getCommandKey()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_DELETE","RETURN_STATEMENT: observableCommand.getCommandKey();","METHOD: com.netflix.hystrix.HystrixCommand.getCommandKey()","com.netflix.hystrix.HystrixCommand.getCommandKey()","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DOC_INSERT","JAVADOC: /**
     * @return {@link HystrixCommandKey} identifying this command instance for statistics, circuit-breaker, properties, etc.
     */","METHOD: com.netflix.hystrix.HystrixCommand.getCommandKey()","com.netflix.hystrix.HystrixCommand.getCommandKey()","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","RETURN_STATEMENT: (executionResult.events.contains(HystrixEventType.THREAD_POOL_REJECTED) || executionResult.events.contains(HystrixEventType.SEMAPHORE_REJECTED));","METHOD: com.netflix.hystrix.HystrixCommand.isResponseRejected()","com.netflix.hystrix.HystrixCommand.isResponseRejected()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_DELETE","RETURN_STATEMENT: observableCommand.isResponseRejected();","METHOD: com.netflix.hystrix.HystrixCommand.isResponseRejected()","com.netflix.hystrix.HystrixCommand.isResponseRejected()","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DOC_INSERT","JAVADOC: /**
     * Whether the response received was a fallback as result of being
     * rejected (from thread-pool or semaphore) and <code>getFallback()</code> being called.
     * 
     * @return boolean
     */","METHOD: com.netflix.hystrix.HystrixCommand.isResponseRejected()","com.netflix.hystrix.HystrixCommand.isResponseRejected()","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DOC_UPDATE","JAVADOC: /**
     * Fluent interface for arguments to the {@link HystrixObservableCommand} constructor.
     * <p>
     * The required arguments are set via the 'with' factory method and optional arguments via the 'and' chained methods.
     * <p>
     * Example:
     * <pre> {@code
     *  Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey("GroupName"))
                .andCommandKey(HystrixCommandKey.Factory.asKey("CommandName"))
                .andEventNotifier(notifier);
     * } </pre>
     */","CLASS: com.netflix.hystrix.HystrixCommand.Setter","com.netflix.hystrix.HystrixCommand.Setter","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: protected","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.Setter.threadPoolKey : HystrixThreadPoolKey","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: protected","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.Setter.threadPoolPropertiesDefaults : HystrixThreadPoolProperties.Setter","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DOC_UPDATE","JAVADOC: /**
         * Setter factory method with required values.
         * <p>
         * All optional arguments can be set via the chained methods.
         * 
         * @param groupKey
         *            {@link HystrixCommandGroupKey} used to group together multiple {@link HystrixObservableCommand} objects.
         *            <p>
         *            The {@link HystrixCommandGroupKey} is used to represent a common relationship between commands. For example, a library or team name, the system all related commands interace
         *            with,
         *            common business purpose etc.
         */","METHOD: com.netflix.hystrix.HystrixCommand.Setter.withGroupKey(HystrixCommandGroupKey)","com.netflix.hystrix.HystrixCommand.Setter.withGroupKey(HystrixCommandGroupKey)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: protected","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.Setter.Setter(HystrixCommandGroupKey)","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DOC_UPDATE","JAVADOC: /**
         * Setter factory method containing required values.
         * <p>
         * All optional arguments can be set via the chained methods.
         * 
         * @param groupKey
         *            {@link HystrixCommandGroupKey} used to group together multiple {@link HystrixObservableCommand} objects.
         *            <p>
         *            The {@link HystrixCommandGroupKey} is used to represent a common relationship between commands. For example, a library or team name, the system all related commands interace
         *            with,
         *            common business purpose etc.
         */","METHOD: com.netflix.hystrix.HystrixCommand.Setter.Setter(HystrixCommandGroupKey)","com.netflix.hystrix.HystrixCommand.Setter.Setter(HystrixCommandGroupKey)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: protected","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.Setter.commandPropertiesDefaults : HystrixCommandProperties.Setter","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DOC_UPDATE","JAVADOC: /**
         * @param commandKey
         *            {@link HystrixCommandKey} used to identify a {@link HystrixObservableCommand} instance for statistics, circuit-breaker, properties, etc.
         *            <p>
         *            By default this will be derived from the instance class name.
         *            <p>
         *            NOTE: Every unique {@link HystrixCommandKey} will result in new instances of {@link HystrixCircuitBreaker}, {@link HystrixCommandMetrics} and {@link HystrixCommandProperties}.
         *            Thus,
         *            the number of variants should be kept to a finite and reasonable number to avoid high-memory usage or memory leacks.
         *            <p>
         *            Hundreds of keys is fine, tens of thousands is probably not.
         * @return Setter for fluent interface via method chaining
         */","METHOD: com.netflix.hystrix.HystrixCommand.Setter.andCommandKey(HystrixCommandKey)","com.netflix.hystrix.HystrixCommand.Setter.andCommandKey(HystrixCommandKey)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: protected","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.Setter.commandKey : HystrixCommandKey","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DOC_UPDATE","JAVADOC: /**
         * Optional
         * 
         * @param commandPropertiesDefaults
         *            {@link HystrixCommandProperties.Setter} with property overrides for this specific instance of {@link HystrixObservableCommand}.
         *            <p>
         *            See the {@link HystrixPropertiesStrategy} JavaDocs for more information on properties and order of precedence.
         * @return Setter for fluent interface via method chaining
         */","METHOD: com.netflix.hystrix.HystrixCommand.Setter.andCommandPropertiesDefaults(HystrixCommandProperties.Setter)","com.netflix.hystrix.HystrixCommand.Setter.andCommandPropertiesDefaults(HystrixCommandProperties.Setter)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DOC_UPDATE","JAVADOC: /**
         * Optional
         * 
         * @param threadPoolPropertiesDefaults
         *            {@link HystrixThreadPoolProperties.Setter} with property overrides for the {@link HystrixThreadPool} used by this specific instance of {@link HystrixObservableCommand}.
         *            <p>
         *            See the {@link HystrixPropertiesStrategy} JavaDocs for more information on properties and order of precedence.
         * @return Setter for fluent interface via method chaining
         */","METHOD: com.netflix.hystrix.HystrixCommand.Setter.andThreadPoolPropertiesDefaults(HystrixThreadPoolProperties.Setter)","com.netflix.hystrix.HystrixCommand.Setter.andThreadPoolPropertiesDefaults(HystrixThreadPoolProperties.Setter)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: protected","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.Setter.groupKey : HystrixCommandGroupKey","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","RETURN_STATEMENT: executionResult.events;","METHOD: com.netflix.hystrix.HystrixCommand.getExecutionEvents()","com.netflix.hystrix.HystrixCommand.getExecutionEvents()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_DELETE","RETURN_STATEMENT: observableCommand.getExecutionEvents();","METHOD: com.netflix.hystrix.HystrixCommand.getExecutionEvents()","com.netflix.hystrix.HystrixCommand.getExecutionEvents()","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DOC_INSERT","JAVADOC: /**
     * List of HystrixCommandEventType enums representing events that occurred during execution.
     * <p>
     * Examples of events are SUCCESS, FAILURE, TIMEOUT, and SHORT_CIRCUITED
     * 
     * @return {@code List<HystrixEventType>}
     */","METHOD: com.netflix.hystrix.HystrixCommand.getExecutionEvents()","com.netflix.hystrix.HystrixCommand.getExecutionEvents()","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"CONDITION_EXPRESSION_CHANGE","IF_STATEMENT: observableCommand.properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD)","METHOD: com.netflix.hystrix.HystrixCommand.toObservable()","com.netflix.hystrix.HystrixCommand.toObservable()","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_UPDATE","RETURN_STATEMENT: toObservable(Schedulers.computation());","THEN_STATEMENT: observableCommand.properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD)","com.netflix.hystrix.HystrixCommand.toObservable()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","RETURN_STATEMENT: executionResult.events.contains(HystrixEventType.FAILURE);","METHOD: com.netflix.hystrix.HystrixCommand.isFailedExecution()","com.netflix.hystrix.HystrixCommand.isFailedExecution()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_DELETE","RETURN_STATEMENT: observableCommand.isFailedExecution();","METHOD: com.netflix.hystrix.HystrixCommand.isFailedExecution()","com.netflix.hystrix.HystrixCommand.isFailedExecution()","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DOC_INSERT","JAVADOC: /**
     * Whether the <code>run()</code> resulted in a failure (exception).
     * 
     * @return boolean
     */","METHOD: com.netflix.hystrix.HystrixCommand.isFailedExecution()","com.netflix.hystrix.HystrixCommand.isFailedExecution()","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_UPDATE","RETURN_STATEMENT: observableCommand.isExecutedInThread();","METHOD: com.netflix.hystrix.HystrixCommand.isExecutedInThread()","com.netflix.hystrix.HystrixCommand.isExecutedInThread()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DOC_INSERT","JAVADOC: /**
     * Whether the execution occurred in a separate thread.
     * <p>
     * This should be called only once execute()/queue()/fireOrForget() are called otherwise it will always return false.
     * <p>
     * This specifies if a thread execution actually occurred, not just if it is configured to be executed in a thread.
     * 
     * @return boolean
     */","METHOD: com.netflix.hystrix.HystrixCommand.isExecutedInThread()","com.netflix.hystrix.HystrixCommand.isExecutedInThread()","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","RETURN_STATEMENT: metrics;","METHOD: com.netflix.hystrix.HystrixCommand.getMetrics()","com.netflix.hystrix.HystrixCommand.getMetrics()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_DELETE","RETURN_STATEMENT: observableCommand.getMetrics();","METHOD: com.netflix.hystrix.HystrixCommand.getMetrics()","com.netflix.hystrix.HystrixCommand.getMetrics()","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DOC_INSERT","JAVADOC: /**
     * The {@link HystrixCommandMetrics} associated with this {@link HystrixCommand} instance.
     * 
     * @return HystrixCommandMetrics
     */","METHOD: com.netflix.hystrix.HystrixCommand.getMetrics()","com.netflix.hystrix.HystrixCommand.getMetrics()","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","RETURN_STATEMENT: commandGroup;","METHOD: com.netflix.hystrix.HystrixCommand.getCommandGroup()","com.netflix.hystrix.HystrixCommand.getCommandGroup()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_DELETE","RETURN_STATEMENT: observableCommand.getCommandGroup();","METHOD: com.netflix.hystrix.HystrixCommand.getCommandGroup()","com.netflix.hystrix.HystrixCommand.getCommandGroup()","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DOC_INSERT","JAVADOC: /**
     * @return {@link HystrixCommandGroupKey} used to group together multiple {@link HystrixCommand} objects.
     *         <p>
     *         The {@link HystrixCommandGroupKey} is used to represent a common relationship between commands. For example, a library or team name, the system all related commands interace with,
     *         common business purpose etc.
     */","METHOD: com.netflix.hystrix.HystrixCommand.getCommandGroup()","com.netflix.hystrix.HystrixCommand.getCommandGroup()","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","RETURN_STATEMENT: executionResult.events.contains(HystrixEventType.FALLBACK_SUCCESS);","METHOD: com.netflix.hystrix.HystrixCommand.isResponseFromFallback()","com.netflix.hystrix.HystrixCommand.isResponseFromFallback()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_DELETE","RETURN_STATEMENT: observableCommand.isResponseFromFallback();","METHOD: com.netflix.hystrix.HystrixCommand.isResponseFromFallback()","com.netflix.hystrix.HystrixCommand.isResponseFromFallback()","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DOC_INSERT","JAVADOC: /**
     * Whether the response received from was the result of some type of failure
     * and <code>getFallback()</code> being called.
     * 
     * @return boolean
     */","METHOD: com.netflix.hystrix.HystrixCommand.isResponseFromFallback()","com.netflix.hystrix.HystrixCommand.isResponseFromFallback()","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","RETURN_STATEMENT: executionResult.events.contains(HystrixEventType.TIMEOUT);","METHOD: com.netflix.hystrix.HystrixCommand.isResponseTimedOut()","com.netflix.hystrix.HystrixCommand.isResponseTimedOut()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_DELETE","RETURN_STATEMENT: observableCommand.isResponseTimedOut();","METHOD: com.netflix.hystrix.HystrixCommand.isResponseTimedOut()","com.netflix.hystrix.HystrixCommand.isResponseTimedOut()","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DOC_INSERT","JAVADOC: /**
     * Whether the response received was the result of a timeout
     * and <code>getFallback()</code> being called.
     * 
     * @return boolean
     */","METHOD: com.netflix.hystrix.HystrixCommand.isResponseTimedOut()","com.netflix.hystrix.HystrixCommand.isResponseTimedOut()","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.subscribeWithThreadIsolation(Observer<? super R>)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.subscribeWithSemaphoreIsolation(Observer<? super R>)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getExecutionSemaphore()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getFallbackOrThrowException(HystrixEventType,FailureType,String,Exception)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.recordExecutedCommand()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getFallbackSemaphore()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getDefaultNameFromClass(Class<? extends HystrixCommand>)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.decomposeException(Exception)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getFallbackOrThrowException(HystrixEventType,FailureType,String)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getLogMessagePrefix()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.executeCommand()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isRequestCachingEnabled()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.recordTotalExecutionTime(long)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getFallbackWithProtection()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.isExecutedInThread : AtomicBoolean","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.executionSemaphorePerCircuit : ConcurrentHashMap<String, TryableSemaphore>","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.started : AtomicBoolean","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.executionSemaphoreOverride : TryableSemaphore","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.executionResult : ExecutionResult","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.fallbackSemaphorePerCircuit : ConcurrentHashMap<String, TryableSemaphore>","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.timeoutTimer : AtomicReference<Reference<TimerListener>>","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.threadPoolKey : HystrixThreadPoolKey","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.properties : HystrixCommandProperties","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.isExecutionComplete : AtomicBoolean","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.fallbackSemaphoreOverride : TryableSemaphore","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.metrics : HystrixCommandMetrics","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.commandKey : HystrixCommandKey","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.concurrencyStrategy : HystrixConcurrencyStrategy","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.commandGroup : HystrixCommandGroupKey","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.isCommandTimedOut : AtomicReference<TimedOutStatus>","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.circuitBreaker : HystrixCircuitBreaker","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.requestCache : HystrixRequestCache","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.logger : Logger","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.defaultNameCache : ConcurrentHashMap<Class<? extends HystrixCommand>, String>","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.invocationStartTime : long","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.executionHook : HystrixCommandExecutionHook","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.threadPool : HystrixThreadPool","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.eventNotifier : HystrixEventNotifier","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.observableCommand : HystrixCommandFromObservableCommand<R>","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.TimeoutObservable","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.ExecutionResult","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.UnitTest","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.TryableSemaphore","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.ObservableCommand","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.CachedObservableOriginal","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.CachedObservableResponse","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.HystrixCommandFromObservableCommand","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"PARENT_INTERFACE_CHANGE","PARAMETERIZED_TYPE: OnSubscribe<T>","SUPER_INTERFACE_TYPES: ","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction","CRUCIAL"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_ORDERING_CHANGE","IF_STATEMENT: subscription.isUnsubscribed()","WHILE_STATEMENT: true","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.setException(Exception)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_ORDERING_CHANGE","IF_STATEMENT: subscription.isUnsubscribed()","WHILE_STATEMENT: true","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.setResponse(T)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"METHOD_RENAMING","METHOD: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.call(Subscriber<? super T>)","METHOD: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.call(Subscriber<? super T>)","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.onSubscribe(Observer<? super T>)","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"RETURN_TYPE_INSERT","SINGLE_TYPE: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.onSubscribe(Observer<? super T>): Subscription","METHOD: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.call(Subscriber<? super T>)","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.onSubscribe(Observer<? super T>)","CRUCIAL"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: observer: Subscriber<? super T>","PARAMETER: observer","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.onSubscribe(Observer<? super T>)","CRUCIAL"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","LINE_COMMENT: // we'll retry","METHOD: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.call(Subscriber<? super T>)","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.onSubscribe(Observer<? super T>)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","RETURN_STATEMENT: subscription;","METHOD: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.call(Subscriber<? super T>)","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.onSubscribe(Observer<? super T>)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_DELETE","METHOD_INVOCATION: observer.add(subscription);","METHOD: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.call(Subscriber<? super T>)","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.onSubscribe(Observer<? super T>)","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.UnitTest","CLASS: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixRequestCache.UnitTest","CLASS: com.netflix.hystrix.HystrixRequestCache","com.netflix.hystrix.HystrixRequestCache","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixCircuitBreaker.TestCircuitBreaker","CLASS: com.netflix.hystrix.HystrixCircuitBreaker","com.netflix.hystrix.HystrixCircuitBreaker","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixCircuitBreaker.UnitTest","CLASS: com.netflix.hystrix.HystrixCircuitBreaker","com.netflix.hystrix.HystrixCircuitBreaker","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","METHOD_INVOCATION: currentCommand.get().push(key);","BODY: ","com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_DELETE","VARIABLE_DECLARATION_STATEMENT: final LinkedList<HystrixCommandKey> list = currentCommand.get();","METHOD: com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_DELETE","METHOD_INVOCATION: list.push(key);","BODY: ","com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_DELETE","RETURN_STATEMENT: new Action0() {
  public @Override void call() {
    endCurrentThreadExecutingCommand(list);
  }
};","METHOD: com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DOC_DELETE","JAVADOC: /**
     * 
     * @return Action0 to perform the same work as `endCurrentThreadExecutingCommand()` but can be done from any thread
     */","METHOD: com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"RETURN_TYPE_DELETE","SINGLE_TYPE: com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey): Action0","METHOD: com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","TRY_STATEMENT: ","METHOD: com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","IF_STATEMENT: (! currentCommand.get().isEmpty())","BODY: ","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","CATCH_CLAUSE: NoSuchElementException","CATCH_CLAUSES: ","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","CATCH_CLAUSE: Exception","CATCH_CLAUSES: ","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","LINE_COMMENT: // this shouldn't be possible since we check for empty above and this is thread-isolated","CATCH_CLAUSE: NoSuchElementException","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","METHOD_INVOCATION: logger.debug("No command found to end.", e);","CATCH_CLAUSE: NoSuchElementException","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","METHOD_INVOCATION: logger.warn("Unable to end command.", e);","CATCH_CLAUSE: Exception","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_PARENT_CHANGE","METHOD_INVOCATION: endCurrentThreadExecutingCommand(currentCommand.get());","METHOD: com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_UPDATE","METHOD_INVOCATION: endCurrentThreadExecutingCommand(currentCommand.get());","THEN_STATEMENT: (! currentCommand.get().isEmpty())","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand(LinkedList<HystrixCommandKey>)","CLASS: com.netflix.hystrix.Hystrix","com.netflix.hystrix.Hystrix","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.Hystrix.UnitTest","CLASS: com.netflix.hystrix.Hystrix","com.netflix.hystrix.Hystrix","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"CONDITION_EXPRESSION_CHANGE","FOREACH_STATEMENT: HystrixExecutableInfo<?> command:allExecutedCommands","BODY: ","com.netflix.hystrix.HystrixRequestLog.getExecutedCommandsAsString()","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixRequestLog.MAX_STORAGE : int","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: command: HystrixExecutableInfo<?>","PARAMETER: command","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixCommand<?>)","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_DELETE","LINE_COMMENT: // TODO remove this when deprecation completed","METHOD: com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixExecutableInfo<?>)","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixCommand<?>)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_DELETE","VARIABLE_DECLARATION_STATEMENT: @SuppressWarnings("rawtypes") HystrixCommand<?> _c = (HystrixCommand.HystrixCommandFromObservableCommand) command.getOriginal();","THEN_STATEMENT: (command instanceof HystrixCommand.HystrixCommandFromObservableCommand)","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixCommand<?>)","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_DELETE","LINE_COMMENT: // see RequestLog: Reduce Chance of Memory Leak https://github.com/Netflix/Hystrix/issues/53","THEN_STATEMENT: (! executedCommands.offer(_c))","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixCommand<?>)","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_DELETE","METHOD_INVOCATION: logger.warn((("RequestLog ignoring command after reaching limit of " + MAX_STORAGE) + ". See https://github.com/Netflix/Hystrix/issues/53 for more information."));","THEN_STATEMENT: (! executedCommands.offer(_c))","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixCommand<?>)","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_DELETE","IF_STATEMENT: (! executedCommands.offer(_c))","THEN_STATEMENT: (command instanceof HystrixCommand.HystrixCommandFromObservableCommand)","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixCommand<?>)","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_DELETE","IF_STATEMENT: (command instanceof HystrixCommand.HystrixCommandFromObservableCommand)","METHOD: com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixExecutableInfo<?>)","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixCommand<?>)","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"CONDITION_EXPRESSION_CHANGE","IF_STATEMENT: (! allExecutedCommands.offer(command))","METHOD: com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixExecutableInfo<?>)","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixCommand<?>)","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixRequestLog.getAllExecutedCommands()","CLASS: com.netflix.hystrix.HystrixRequestLog","com.netflix.hystrix.HystrixRequestLog","CRUCIAL"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixRequestLog.allExecutedCommands : LinkedBlockingQueue<HystrixExecutableInfo<?>>","CLASS: com.netflix.hystrix.HystrixRequestLog","com.netflix.hystrix.HystrixRequestLog","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixRequestLog.TestCommand","CLASS: com.netflix.hystrix.HystrixRequestLog","com.netflix.hystrix.HystrixRequestLog","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixRequestLog.UnitTest","CLASS: com.netflix.hystrix.HystrixRequestLog","com.netflix.hystrix.HystrixRequestLog","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixThreadPool.Factory.threadPools : ConcurrentHashMap<String, HystrixThreadPool>","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDING_ATTRIBUTE_MODIFIABILITY","MODIFIER: final","MODIFIERS: ","com.netflix.hystrix.HystrixThreadPool.Factory.threadPools : ConcurrentHashMap<String, HystrixThreadPool>","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_DELETE","ASSIGNMENT: this.scheduler = new HystrixContextScheduler(concurrencyStrategy, this);","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.HystrixThreadPoolDefault(HystrixThreadPoolKey,HystrixThreadPoolProperties.Setter)","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.HystrixThreadPoolDefault(HystrixThreadPoolKey,HystrixThreadPoolProperties.Setter)","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","LINE_COMMENT: // allow us to change things via fast-properties by setting it each time","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","METHOD_INVOCATION: threadPool.setCorePoolSize(properties.coreSize().get());","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","METHOD_INVOCATION: threadPool.setMaximumPoolSize(properties.coreSize().get());","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","LINE_COMMENT: // we always want maxSize the same as coreSize, we are not using a dynamically resizing pool","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_INSERT","METHOD_INVOCATION: threadPool.setKeepAliveTime(properties.keepAliveTimeMinutes().get(), TimeUnit.MINUTES);","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"COMMENT_INSERT","LINE_COMMENT: // this doesn't really matter since we're not resizing","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_DELETE","METHOD_INVOCATION: touchConfig();","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getScheduler()","CLASS: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault","CRUCIAL"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.touchConfig()","CLASS: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.scheduler : Scheduler","CLASS: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixThreadPool.getScheduler()","CLASS: com.netflix.hystrix.HystrixThreadPool","com.netflix.hystrix.HystrixThreadPool","CRUCIAL"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixThreadPool.UnitTest","CLASS: com.netflix.hystrix.HystrixThreadPool","com.netflix.hystrix.HystrixThreadPool","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"RETURN_TYPE_CHANGE","PARAMETERIZED_TYPE: com.netflix.hystrix.exception.HystrixRuntimeException.getImplementingClass(): Class<? extends HystrixExecutable>","METHOD: com.netflix.hystrix.exception.HystrixRuntimeException.getImplementingClass()","com.netflix.hystrix.exception.HystrixRuntimeException.getImplementingClass()","CRUCIAL"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: commandClass: Class<? extends HystrixExecutable>","PARAMETER: commandClass","com.netflix.hystrix.exception.HystrixRuntimeException.HystrixRuntimeException(FailureType,Class<? extends HystrixCommand>,String,Exception,Throwable)","CRUCIAL"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: commandClass: Class<? extends HystrixExecutable>","PARAMETER: commandClass","com.netflix.hystrix.exception.HystrixRuntimeException.HystrixRuntimeException(FailureType,Class<? extends HystrixCommand>,String,Throwable,Throwable)","CRUCIAL"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ATTRIBUTE_TYPE_CHANGE","PARAMETERIZED_TYPE: Class<? extends HystrixExecutable>","FIELD: com.netflix.hystrix.exception.HystrixRuntimeException.commandClass : Class<? extends HystrixExecutable>","com.netflix.hystrix.exception.HystrixRuntimeException.commandClass : Class<? extends HystrixCommand>","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixCommandMetrics.UnitTest","CLASS: com.netflix.hystrix.HystrixCommandMetrics","com.netflix.hystrix.HystrixCommandMetrics","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory.getPublisherForThreadPool(HystrixThreadPoolKey,HystrixThreadPoolMetrics,HystrixThreadPoolProperties)","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory.getPublisherForCommand(HystrixCommandKey,HystrixCommandGroupKey,HystrixCommandMetrics,HystrixCircuitBreaker,HystrixCommandProperties)","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory.HystrixMetricsPublisherFactory(HystrixMetricsPublisher)","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory.TestHystrixMetricsPublisher","CLASS: com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory","com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory.UnitTest","CLASS: com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory","com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.HystrixPlugins.concurrencyStrategy : AtomicReference<HystrixConcurrencyStrategy>","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.HystrixPlugins.commandExecutionHook : AtomicReference<HystrixCommandExecutionHook>","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.HystrixPlugins.metricsPublisher : AtomicReference<HystrixMetricsPublisher>","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.HystrixPlugins.notifier : AtomicReference<HystrixEventNotifier>","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.HystrixPlugins.propertiesFactory : AtomicReference<HystrixPropertiesStrategy>","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.strategy.HystrixPlugins.UnitTest","CLASS: com.netflix.hystrix.strategy.HystrixPlugins","com.netflix.hystrix.strategy.HystrixPlugins","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"DOC_UPDATE","JAVADOC: /**
 * Wrap a {@link Scheduler} so that scheduled actions are wrapped with {@link HystrixContexSchedulerAction} so that
 * the {@link HystrixRequestContext} is properly copied across threads (if they are used by the {@link Scheduler}).
 */","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","NONE"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"STATEMENT_DELETE","ASSIGNMENT: this.threadPool = null;","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.HystrixContextScheduler(HystrixConcurrencyStrategy,Scheduler)","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.HystrixContextScheduler(HystrixConcurrencyStrategy,Scheduler)","MEDIUM"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.schedule(T,Func2<? super Scheduler, ? super T, ? extends Subscription>)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.schedule(T,Func2<? super Scheduler, ? super T, ? extends Subscription>,long,TimeUnit)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.schedule(Action1<Inner>,long,TimeUnit)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","CRUCIAL"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.schedule(Action1<Inner>)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","CRUCIAL"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.HystrixContextScheduler(Scheduler)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","CRUCIAL"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.HystrixContextScheduler(HystrixConcurrencyStrategy,HystrixThreadPool)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","CRUCIAL"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.threadPool : HystrixThreadPool","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"REMOVED_CLASS","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.HystrixContextInnerScheduler","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","CRUCIAL"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"REMOVED_CLASS","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.InnerHystrixContextScheduler","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","HIGH"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixConcurrencyStrategy.UnitTest","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixConcurrencyStrategy","com.netflix.hystrix.strategy.concurrency.HystrixConcurrencyStrategy","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.strategy.properties.HystrixPropertiesChainedArchaiusProperty.UnitTest","CLASS: com.netflix.hystrix.strategy.properties.HystrixPropertiesChainedArchaiusProperty","com.netflix.hystrix.strategy.properties.HystrixPropertiesChainedArchaiusProperty","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.strategy.properties.HystrixProperty.UnitTest","CLASS: com.netflix.hystrix.strategy.properties.HystrixProperty","com.netflix.hystrix.strategy.properties.HystrixProperty","LOW"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onRunError(HystrixExecutable<T>,Exception)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","CRUCIAL"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onStart(HystrixExecutable<T>)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","CRUCIAL"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onThreadStart(HystrixExecutable<T>)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","CRUCIAL"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onError(HystrixExecutable<T>,FailureType,Exception)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","CRUCIAL"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onFallbackSuccess(HystrixExecutable<T>,T)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","CRUCIAL"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onFallbackStart(HystrixExecutable<T>)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","CRUCIAL"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onRunStart(HystrixExecutable<T>)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","CRUCIAL"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onFallbackError(HystrixExecutable<T>,Exception)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","CRUCIAL"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onThreadComplete(HystrixExecutable<T>)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","CRUCIAL"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onComplete(HystrixExecutable<T>,T)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","CRUCIAL"
339,fc99fcefdc388f09f918b92b97daf371d94044e2,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onRunSuccess(HystrixExecutable<T>,T)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","CRUCIAL"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_UPDATE","RETURN_STATEMENT: toObservable(Schedulers.threadPoolForComputation());","METHOD: com.netflix.hystrix.HystrixCollapser.toObservable()","com.netflix.hystrix.HystrixCollapser.toObservable()","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCollapser.HystrixCollapser(HystrixCollapserKey,Scope,CollapserTimer,HystrixCollapserProperties.Setter)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCollapser.UnitTests","CLASS: com.netflix.hystrix.HystrixCollapser","com.netflix.hystrix.HystrixCollapser","CRUCIAL"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixTimer.executor : AtomicReference<ScheduledExecutor>","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixTimer.ScheduledExecutor","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixTimer.ScheduledExecutor.executor : ScheduledThreadPoolExecutor","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_CLASS","CLASS: com.netflix.hystrix.util.HystrixTimer.UnitTest","CLASS: com.netflix.hystrix.util.HystrixTimer","com.netflix.hystrix.util.HystrixTimer","CRUCIAL"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.ExceptionThreadingUtility.attachCallingThreadStack(Throwable,StackTraceElement[])","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_CLASS","CLASS: com.netflix.hystrix.util.ExceptionThreadingUtility.UnitTest","CLASS: com.netflix.hystrix.util.ExceptionThreadingUtility","com.netflix.hystrix.util.ExceptionThreadingUtility","CRUCIAL"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"DOC_UPDATE","JAVADOC: /**
 * A number which can be used to track counters (increment) or set values over time.
 * <p>
 * It is "rolling" in the sense that a 'timeInMilliseconds' is given that you want to track (such as 10 seconds) and then that is broken into buckets (defaults to 10) so that the 10 second window
 * doesn't empty out and restart every 10 seconds, but instead every 1 second you have a new bucket added and one dropped so that 9 of the buckets remain and only the newest starts from scratch.
 * <p>
 * This is done so that the statistics are gathered over a rolling 10 second window with data being added/dropped in 1 second intervals (or whatever granularity is defined by the arguments) rather
 * than each 10 second window starting at 0 again.
 * <p>
 * Performance-wise this class is optimized for writes, not reads. This is done because it expects far higher write volume (thousands/second) than reads (a few per second).
 * <p>
 * For example, on each read to getSum/getCount it will iterate buckets to sum the data so that on writes we don't need to maintain the overall sum and pay the synchronization cost at each write to
 * ensure the sum is up-to-date when the read can easily iterate each bucket to get the sum when it needs it.
 * <p>
 * See inner-class UnitTest for usage and expected behavior examples.
 */","CLASS: com.netflix.hystrix.util.HystrixRollingNumber","com.netflix.hystrix.util.HystrixRollingNumber","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingNumber.timeInMilliseconds : HystrixProperty<Integer>","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingNumber.buckets : BucketCircularArray","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingNumber.getCurrentBucket()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingNumber.numberOfBuckets : HystrixProperty<Integer>","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingNumber.HystrixRollingNumber(Time,int,int)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingNumber.getBucketSizeInMilliseconds()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_CLASS","CLASS: com.netflix.hystrix.util.HystrixRollingNumber.UnitTest","CLASS: com.netflix.hystrix.util.HystrixRollingNumber","com.netflix.hystrix.util.HystrixRollingNumber","CRUCIAL"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.buckets : BucketCircularArray","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.PercentileSnapshot","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.PercentileSnapshot.PercentileSnapshot(Bucket[])","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.PercentileSnapshot.getMean()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.PercentileSnapshot.PercentileSnapshot(int...)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.HystrixRollingPercentile(Time,HystrixProperty<Integer>,HystrixProperty<Integer>,HystrixProperty<Integer>,HystrixProperty<Boolean>)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.currentPercentileSnapshot : PercentileSnapshot","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_CLASS","CLASS: com.netflix.hystrix.util.HystrixRollingPercentile.SampleDataHolder1","CLASS: com.netflix.hystrix.util.HystrixRollingPercentile","com.netflix.hystrix.util.HystrixRollingPercentile","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_CLASS","CLASS: com.netflix.hystrix.util.HystrixRollingPercentile.SampleDataHolder2","CLASS: com.netflix.hystrix.util.HystrixRollingPercentile","com.netflix.hystrix.util.HystrixRollingPercentile","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_CLASS","CLASS: com.netflix.hystrix.util.HystrixRollingPercentile.UnitTest","CLASS: com.netflix.hystrix.util.HystrixRollingPercentile","com.netflix.hystrix.util.HystrixRollingPercentile","CRUCIAL"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommandProperties.default_metricsRollingStatisticalWindow : Integer","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommandProperties.default_circuitBreakerForceClosed : Boolean","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommandProperties.Setter.Setter()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommandProperties.Setter.getUnitTestPropertiesSetter()","CLASS: com.netflix.hystrix.HystrixCommandProperties.Setter","com.netflix.hystrix.HystrixCommandProperties.Setter","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommandProperties.Setter.asMock(Setter)","CLASS: com.netflix.hystrix.HystrixCommandProperties.Setter","com.netflix.hystrix.HystrixCommandProperties.Setter","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCommandProperties.UnitTest","CLASS: com.netflix.hystrix.HystrixCommandProperties","com.netflix.hystrix.HystrixCommandProperties","CRUCIAL"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"PARENT_INTERFACE_INSERT","PARAMETERIZED_TYPE: HystrixExecutableInfo<R>","SUPER_INTERFACE_TYPES: ","com.netflix.hystrix.HystrixCommand","CRUCIAL"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"DOC_UPDATE","JAVADOC: /**
 * Used to wrap code that will execute potentially risky functionality (typically meaning a service call over the network)
 * with fault and latency tolerance, statistics and performance metrics capture, circuit breaker and bulkhead functionality.
 * 
 * @param <R>
 *            the return type
 */","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_INSERT","RETURN_STATEMENT: observableCommand.toObservable(observeOn, performAsyncTimeout);","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","BLOCK_COMMENT: /* this is a stateful object so can only be used once */","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","THROW_STATEMENT: new IllegalStateException("This instance can only be executed once. Please instantiate a new instance.");","THEN_STATEMENT: (! started.compareAndSet(false, true))","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","IF_STATEMENT: (! started.compareAndSet(false, true))","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","BLOCK_COMMENT: /* try from cache first */","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","VARIABLE_DECLARATION_STATEMENT: Observable<R> fromCache = requestCache.get(getCacheKey());","THEN_STATEMENT: isRequestCachingEnabled()","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","BLOCK_COMMENT: /* mark that we received this response from cache */","THEN_STATEMENT: (fromCache != null)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","METHOD_INVOCATION: metrics.markResponseFromCache();","THEN_STATEMENT: (fromCache != null)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","RETURN_STATEMENT: new CachedObservableResponse<R>((CachedObservableOriginal<R>) fromCache, this);","THEN_STATEMENT: (fromCache != null)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","IF_STATEMENT: (fromCache != null)","THEN_STATEMENT: isRequestCachingEnabled()","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","IF_STATEMENT: isRequestCachingEnabled()","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","VARIABLE_DECLARATION_STATEMENT: final HystrixCommand<R> _this = this;","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","LINE_COMMENT: // create an Observable that will lazily execute when subscribed to","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","VARIABLE_DECLARATION_STATEMENT: Observable<R> o = Observable.create(new OnSubscribeFunc<R>() {
  public @Override Subscription onSubscribe(Observer<? super R> observer) {
    try
      {
        invocationStartTime = System.currentTimeMillis();
        executionHook.onStart(_this);
        if ((! circuitBreaker.allowRequest()))
            {
              metrics.markShortCircuited();
              try
                {
                  observer.onNext(getFallbackOrThrowException(HystrixEventType.SHORT_CIRCUITED, FailureType.SHORTCIRCUIT, "short-circuited"));
                  observer.onCompleted();
                }
              catch (Exception e)
                {
                  observer.onError(e);
                }
              return Subscriptions.empty();
            }
        else
            {
              try
                {
                  if (properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD))
                      {
                        return subscribeWithThreadIsolation(observer);
                      }
                  else
                      {
                        return subscribeWithSemaphoreIsolation(observer);
                      }
                }
              catch (RuntimeException e)
                {
                  observer.onError(e);
                  return Subscriptions.empty();
                }
            }
      }
    finally
      {
        recordExecutedCommand();
      }
  }
});","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","BLOCK_COMMENT: /* used to track userThreadExecutionTime */","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","LINE_COMMENT: // mark that we're starting execution on the ExecutionHook","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","BLOCK_COMMENT: /* determine if we're allowed to execute */","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","LINE_COMMENT: // record that we are returning a short-circuited fallback","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","LINE_COMMENT: // short-circuit and go directly to fallback (or throw an exception if no fallback implemented)","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","BLOCK_COMMENT: /* not short-circuited so proceed with queuing the execution */","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","LINE_COMMENT: // wrap for timeout support","THEN_STATEMENT: properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","ASSIGNMENT: o = new TimeoutObservable<R>(o, _this, performAsyncTimeout);","THEN_STATEMENT: properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","IF_STATEMENT: properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD)","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","LINE_COMMENT: // error handling","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","ASSIGNMENT: o = o.onErrorResumeNext(new Func1<Throwable, Observable<R>>() {
  public @Override Observable<R> call(Throwable e) {
    metrics.markExceptionThrown();
    return Observable.error(e);
  }
});","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","LINE_COMMENT: // count that we are throwing an exception and re-throw it","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","LINE_COMMENT: // we want to hand off work to a different scheduler so we don't tie up the Hystrix thread","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","LINE_COMMENT: // don't waste overhead if it's the 'immediate' scheduler
            // otherwise we'll 'observeOn' and wrap with the HystrixContextScheduler
            // to copy state across threads (if threads are involved)","THEN_STATEMENT: (! Schedulers.immediate().equals(observeOn))","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","ASSIGNMENT: o = o.observeOn(new HystrixContextScheduler(concurrencyStrategy, observeOn));","THEN_STATEMENT: (! Schedulers.immediate().equals(observeOn))","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","IF_STATEMENT: (! Schedulers.immediate().equals(observeOn))","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","ASSIGNMENT: o = o.finallyDo(new Action0() {
  public @Override void call() {
    Reference<TimerListener> tl = timeoutTimer.get();
    if ((tl != null))
        {
          tl.clear();
        }
  }
});","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","LINE_COMMENT: // put in cache","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","LINE_COMMENT: // wrap it for caching","THEN_STATEMENT: isRequestCachingEnabled()","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","ASSIGNMENT: o = new CachedObservableOriginal<R>(o.cache(), this);","THEN_STATEMENT: isRequestCachingEnabled()","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","VARIABLE_DECLARATION_STATEMENT: Observable<R> fromCache = requestCache.putIfAbsent(getCacheKey(), o);","THEN_STATEMENT: isRequestCachingEnabled()","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","LINE_COMMENT: // another thread beat us so we'll use the cached value instead","THEN_STATEMENT: (fromCache != null)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","ASSIGNMENT: o = new CachedObservableResponse<R>((CachedObservableOriginal<R>) fromCache, this);","THEN_STATEMENT: (fromCache != null)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","IF_STATEMENT: (fromCache != null)","THEN_STATEMENT: isRequestCachingEnabled()","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","LINE_COMMENT: // we just created an ObservableCommand so we cast and return it","THEN_STATEMENT: isRequestCachingEnabled()","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","RETURN_STATEMENT: (ObservableCommand<R>) o;","THEN_STATEMENT: isRequestCachingEnabled()","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","LINE_COMMENT: // no request caching so a simple wrapper just to pass 'this' along with the Observable","ELSE_STATEMENT: isRequestCachingEnabled()","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","RETURN_STATEMENT: new ObservableCommand<R>(o, this);","ELSE_STATEMENT: isRequestCachingEnabled()","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: isRequestCachingEnabled()","IF_STATEMENT: isRequestCachingEnabled()","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","IF_STATEMENT: isRequestCachingEnabled()","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_INSERT","RETURN_STATEMENT: observableCommand.getProperties();","METHOD: com.netflix.hystrix.HystrixCommand.getProperties()","com.netflix.hystrix.HystrixCommand.getProperties()","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","RETURN_STATEMENT: properties;","METHOD: com.netflix.hystrix.HystrixCommand.getProperties()","com.netflix.hystrix.HystrixCommand.getProperties()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"DOC_DELETE","JAVADOC: /**
     * The {@link HystrixCommandProperties} associated with this {@link HystrixCommand} instance.
     * 
     * @return HystrixCommandProperties
     */","METHOD: com.netflix.hystrix.HystrixCommand.getProperties()","com.netflix.hystrix.HystrixCommand.getProperties()","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_INSERT","RETURN_STATEMENT: observableCommand.getCircuitBreaker();","METHOD: com.netflix.hystrix.HystrixCommand.getCircuitBreaker()","com.netflix.hystrix.HystrixCommand.getCircuitBreaker()","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","RETURN_STATEMENT: circuitBreaker;","METHOD: com.netflix.hystrix.HystrixCommand.getCircuitBreaker()","com.netflix.hystrix.HystrixCommand.getCircuitBreaker()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_INSERT","RETURN_STATEMENT: observableCommand.execute();","METHOD: com.netflix.hystrix.HystrixCommand.execute()","com.netflix.hystrix.HystrixCommand.execute()","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","RETURN_STATEMENT: queue().get();","BODY: ","com.netflix.hystrix.HystrixCommand.execute()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","THROW_STATEMENT: decomposeException(e);","CATCH_CLAUSE: Exception","com.netflix.hystrix.HystrixCommand.execute()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","CATCH_CLAUSE: Exception","CATCH_CLAUSES: ","com.netflix.hystrix.HystrixCommand.execute()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","TRY_STATEMENT: ","METHOD: com.netflix.hystrix.HystrixCommand.execute()","com.netflix.hystrix.HystrixCommand.execute()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"DOC_DELETE","JAVADOC: /**
     * Used for synchronous execution of command.
     * 
     * @return R
     *         Result of {@link #run()} execution or a fallback from {@link #getFallback()} if the command fails for any reason.
     * @throws HystrixRuntimeException
     *             if a failure occurs and a fallback cannot be retrieved
     * @throws HystrixBadRequestException
     *             if invalid arguments or state were used representing a user failure, not a system failure
     * @throws IllegalStateException
     *             if invoked more than once
     */","METHOD: com.netflix.hystrix.HystrixCommand.execute()","com.netflix.hystrix.HystrixCommand.execute()","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_INSERT","RETURN_STATEMENT: observableCommand.getThreadPoolKey();","METHOD: com.netflix.hystrix.HystrixCommand.getThreadPoolKey()","com.netflix.hystrix.HystrixCommand.getThreadPoolKey()","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","RETURN_STATEMENT: threadPoolKey;","METHOD: com.netflix.hystrix.HystrixCommand.getThreadPoolKey()","com.netflix.hystrix.HystrixCommand.getThreadPoolKey()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"DOC_DELETE","JAVADOC: /**
     * @return {@link HystrixThreadPoolKey} identifying which thread-pool this command uses (when configured to run on separate threads via
     *         {@link HystrixCommandProperties#executionIsolationStrategy()}).
     */","METHOD: com.netflix.hystrix.HystrixCommand.getThreadPoolKey()","com.netflix.hystrix.HystrixCommand.getThreadPoolKey()","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_INSERT","VARIABLE_DECLARATION_STATEMENT: HystrixCommandKey commandKey = null;","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_INSERT","ASSIGNMENT: this.observableCommand = new HystrixCommandFromObservableCommand<R>(this, group, commandKey, threadPoolKey, circuitBreaker, threadPool, commandPropertiesDefaults, threadPoolPropertiesDefaults, metrics, fallbackSemaphore, executionSemaphore, propertiesStrategy, executionHook);","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_INSERT","LINE_COMMENT: // use the HystrixCommand class rather than this ObservableCommand class if we have it","THEN_STATEMENT: ((key == null) || key.name().trim().equals(""))","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","BLOCK_COMMENT: /*
         * CommandGroup initialization
         */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","THROW_STATEMENT: new IllegalStateException("HystrixCommandGroup can not be NULL");","THEN_STATEMENT: (group == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","ASSIGNMENT: this.commandGroup = group;","ELSE_STATEMENT: (group == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: (group == null)","IF_STATEMENT: (group == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","IF_STATEMENT: (group == null)","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","BLOCK_COMMENT: /*
         * Properties initialization
         */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","ASSIGNMENT: this.properties = HystrixPropertiesFactory.getCommandProperties(this.commandKey, commandPropertiesDefaults);","THEN_STATEMENT: (propertiesStrategy == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","LINE_COMMENT: // used for unit testing","ELSE_STATEMENT: (propertiesStrategy == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","ASSIGNMENT: this.properties = propertiesStrategy.getCommandProperties(this.commandKey, commandPropertiesDefaults);","ELSE_STATEMENT: (propertiesStrategy == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: (propertiesStrategy == null)","IF_STATEMENT: (propertiesStrategy == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","IF_STATEMENT: (propertiesStrategy == null)","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","BLOCK_COMMENT: /*
         * ThreadPoolKey
         * 
         * This defines which thread-pool this command should run on.
         * 
         * It uses the HystrixThreadPoolKey if provided, then defaults to use HystrixCommandGroup.
         * 
         * It can then be overridden by a property if defined so it can be changed at runtime.
         */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","LINE_COMMENT: // we don't have a property overriding the value so use either HystrixThreadPoolKey or HystrixCommandGroup","THEN_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","BLOCK_COMMENT: /* use HystrixCommandGroup if HystrixThreadPoolKey is null */","THEN_STATEMENT: (threadPoolKey == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","ASSIGNMENT: this.threadPoolKey = HystrixThreadPoolKey.Factory.asKey(commandGroup.name());","THEN_STATEMENT: (threadPoolKey == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","ASSIGNMENT: this.threadPoolKey = threadPoolKey;","ELSE_STATEMENT: (threadPoolKey == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: (threadPoolKey == null)","IF_STATEMENT: (threadPoolKey == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","IF_STATEMENT: (threadPoolKey == null)","THEN_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","LINE_COMMENT: // we have a property defining the thread-pool so use it instead","ELSE_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","ASSIGNMENT: this.threadPoolKey = HystrixThreadPoolKey.Factory.asKey(properties.executionIsolationThreadPoolKeyOverride().get());","ELSE_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","IF_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","IF_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","BLOCK_COMMENT: /* strategy: HystrixEventNotifier */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","ASSIGNMENT: this.eventNotifier = HystrixPlugins.getInstance().getEventNotifier();","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","BLOCK_COMMENT: /* strategy: HystrixConcurrentStrategy */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","ASSIGNMENT: this.concurrencyStrategy = HystrixPlugins.getInstance().getConcurrencyStrategy();","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","BLOCK_COMMENT: /*
         * Metrics initialization
         */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","ASSIGNMENT: this.metrics = HystrixCommandMetrics.getInstance(this.commandKey, this.commandGroup, this.properties);","THEN_STATEMENT: (metrics == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","ASSIGNMENT: this.metrics = metrics;","ELSE_STATEMENT: (metrics == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: (metrics == null)","IF_STATEMENT: (metrics == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","IF_STATEMENT: (metrics == null)","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","BLOCK_COMMENT: /*
         * CircuitBreaker initialization
         */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","LINE_COMMENT: // get the default implementation of HystrixCircuitBreaker","THEN_STATEMENT: (circuitBreaker == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","ASSIGNMENT: this.circuitBreaker = HystrixCircuitBreaker.Factory.getInstance(this.commandKey, this.commandGroup, this.properties, this.metrics);","THEN_STATEMENT: (circuitBreaker == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","ASSIGNMENT: this.circuitBreaker = circuitBreaker;","ELSE_STATEMENT: (circuitBreaker == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: (circuitBreaker == null)","IF_STATEMENT: (circuitBreaker == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","IF_STATEMENT: (circuitBreaker == null)","THEN_STATEMENT: this.properties.circuitBreakerEnabled().get()","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","ASSIGNMENT: this.circuitBreaker = new NoOpCircuitBreaker();","ELSE_STATEMENT: this.properties.circuitBreakerEnabled().get()","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: this.properties.circuitBreakerEnabled().get()","IF_STATEMENT: this.properties.circuitBreakerEnabled().get()","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","IF_STATEMENT: this.properties.circuitBreakerEnabled().get()","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","BLOCK_COMMENT: /* strategy: HystrixMetricsPublisherCommand */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","METHOD_INVOCATION: HystrixMetricsPublisherFactory.createOrRetrievePublisherForCommand(this.commandKey, this.commandGroup, this.metrics, this.circuitBreaker, this.properties);","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","BLOCK_COMMENT: /* strategy: HystrixCommandExecutionHook */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","ASSIGNMENT: this.executionHook = HystrixPlugins.getInstance().getCommandExecutionHook();","THEN_STATEMENT: (executionHook == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","LINE_COMMENT: // used for unit testing","ELSE_STATEMENT: (executionHook == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","ASSIGNMENT: this.executionHook = executionHook;","ELSE_STATEMENT: (executionHook == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: (executionHook == null)","IF_STATEMENT: (executionHook == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","IF_STATEMENT: (executionHook == null)","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","BLOCK_COMMENT: /*
         * ThreadPool initialization
         */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","LINE_COMMENT: // get the default implementation of HystrixThreadPool","THEN_STATEMENT: (threadPool == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","ASSIGNMENT: this.threadPool = HystrixThreadPool.Factory.getInstance(this.threadPoolKey, threadPoolPropertiesDefaults);","THEN_STATEMENT: (threadPool == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","ASSIGNMENT: this.threadPool = threadPool;","ELSE_STATEMENT: (threadPool == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: (threadPool == null)","IF_STATEMENT: (threadPool == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","IF_STATEMENT: (threadPool == null)","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","BLOCK_COMMENT: /* fallback semaphore override if applicable */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","ASSIGNMENT: this.fallbackSemaphoreOverride = fallbackSemaphore;","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","BLOCK_COMMENT: /* execution semaphore override if applicable */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","ASSIGNMENT: this.executionSemaphoreOverride = executionSemaphore;","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","BLOCK_COMMENT: /* setup the request cache for this instance */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","ASSIGNMENT: this.requestCache = HystrixRequestCache.getInstance(this.commandKey, this.concurrencyStrategy);","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_UPDATE","VARIABLE_DECLARATION_STATEMENT: final String keyName = getDefaultNameFromClass(getClass());","THEN_STATEMENT: ((key == null) || key.name().trim().equals(""))","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_UPDATE","ASSIGNMENT: this.commandKey = HystrixCommandKey.Factory.asKey(keyName);","THEN_STATEMENT: ((key == null) || key.name().trim().equals(""))","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_UPDATE","ASSIGNMENT: this.commandKey = key;","ELSE_STATEMENT: ((key == null) || key.name().trim().equals(""))","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_INSERT","RETURN_STATEMENT: observableCommand.isResponseShortCircuited();","METHOD: com.netflix.hystrix.HystrixCommand.isResponseShortCircuited()","com.netflix.hystrix.HystrixCommand.isResponseShortCircuited()","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","RETURN_STATEMENT: executionResult.events.contains(HystrixEventType.SHORT_CIRCUITED);","METHOD: com.netflix.hystrix.HystrixCommand.isResponseShortCircuited()","com.netflix.hystrix.HystrixCommand.isResponseShortCircuited()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"DOC_DELETE","JAVADOC: /**
     * Whether the response received was a fallback as result of being
     * short-circuited (meaning <code>isCircuitBreakerOpen() == true</code>) and <code>getFallback()</code> being called.
     * 
     * @return boolean
     */","METHOD: com.netflix.hystrix.HystrixCommand.isResponseShortCircuited()","com.netflix.hystrix.HystrixCommand.isResponseShortCircuited()","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_INSERT","RETURN_STATEMENT: observableCommand.getFailedExecutionException();","METHOD: com.netflix.hystrix.HystrixCommand.getFailedExecutionException()","com.netflix.hystrix.HystrixCommand.getFailedExecutionException()","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","RETURN_STATEMENT: executionResult.exception;","METHOD: com.netflix.hystrix.HystrixCommand.getFailedExecutionException()","com.netflix.hystrix.HystrixCommand.getFailedExecutionException()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"DOC_DELETE","JAVADOC: /**
     * Get the Throwable/Exception thrown that caused the failure.
     * <p>
     * If <code>isFailedExecution() == true</code> then this would represent the Exception thrown by the <code>run()</code> method.
     * <p>
     * If <code>isFailedExecution() == false</code> then this would return null.
     * 
     * @return Throwable or null
     */","METHOD: com.netflix.hystrix.HystrixCommand.getFailedExecutionException()","com.netflix.hystrix.HystrixCommand.getFailedExecutionException()","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_INSERT","RETURN_STATEMENT: observableCommand.isResponseFromCache();","METHOD: com.netflix.hystrix.HystrixCommand.isResponseFromCache()","com.netflix.hystrix.HystrixCommand.isResponseFromCache()","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","RETURN_STATEMENT: executionResult.events.contains(HystrixEventType.RESPONSE_FROM_CACHE);","METHOD: com.netflix.hystrix.HystrixCommand.isResponseFromCache()","com.netflix.hystrix.HystrixCommand.isResponseFromCache()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"DOC_DELETE","JAVADOC: /**
     * Whether the response is from cache and <code>run()</code> was not invoked.
     * 
     * @return boolean
     */","METHOD: com.netflix.hystrix.HystrixCommand.isResponseFromCache()","com.netflix.hystrix.HystrixCommand.isResponseFromCache()","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_UPDATE","RETURN_STATEMENT: isExecutionComplete.get();","METHOD: com.netflix.hystrix.HystrixCommand.isExecutionComplete()","com.netflix.hystrix.HystrixCommand.isExecutionComplete()","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"DOC_DELETE","JAVADOC: /**
     * If this command has completed execution either successfully, via fallback or failure.
     * 
     * @return boolean
     */","METHOD: com.netflix.hystrix.HystrixCommand.isExecutionComplete()","com.netflix.hystrix.HystrixCommand.isExecutionComplete()","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","ASSIGNMENT: executionResult = executionResult.addEvents(HystrixEventType.COLLAPSED);","METHOD: com.netflix.hystrix.HystrixCommand.markAsCollapsedCommand(int)","com.netflix.hystrix.HystrixCommand.markAsCollapsedCommand(int)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_UPDATE","METHOD_INVOCATION: getMetrics().markCollapsed(sizeOfBatch);","METHOD: com.netflix.hystrix.HystrixCommand.markAsCollapsedCommand(int)","com.netflix.hystrix.HystrixCommand.markAsCollapsedCommand(int)","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"DOC_DELETE","JAVADOC: /**
     * Allow the Collapser to mark this command instance as being used for a collapsed request and how many requests were collapsed.
     * 
     * @param sizeOfBatch
     */","METHOD: com.netflix.hystrix.HystrixCommand.markAsCollapsedCommand(int)","com.netflix.hystrix.HystrixCommand.markAsCollapsedCommand(int)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_INSERT","RETURN_STATEMENT: observableCommand.queue();","METHOD: com.netflix.hystrix.HystrixCommand.queue()","com.netflix.hystrix.HystrixCommand.queue()","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","BLOCK_COMMENT: /*
         * --- Schedulers.immediate()
         * 
         * We use the 'immediate' schedule since Future.get() is blocking so we don't want to bother doing the callback to the Future on a separate thread
         * as we don't need to separate the Hystrix thread from user threads since they are already providing it via the Future.get() call.
         * 
         * --- performAsyncTimeout: false
         * 
         * We pass 'false' to tell the Observable we will block on it so it doesn't schedule an async timeout.
         * 
         * This optimizes for using the calling thread to do the timeout rather than scheduling another thread.
         * 
         * In a tight-loop of executing commands this optimization saves a few microseconds per execution.
         * It also just makes no sense to use a separate thread to timeout the command when the calling thread
         * is going to sit waiting on it.
         */","METHOD: com.netflix.hystrix.HystrixCommand.queue()","com.netflix.hystrix.HystrixCommand.queue()","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","VARIABLE_DECLARATION_STATEMENT: final ObservableCommand<R> o = toObservable(Schedulers.immediate(), false);","METHOD: com.netflix.hystrix.HystrixCommand.queue()","com.netflix.hystrix.HystrixCommand.queue()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","VARIABLE_DECLARATION_STATEMENT: final Future<R> f = o.toBlockingObservable().toFuture();","METHOD: com.netflix.hystrix.HystrixCommand.queue()","com.netflix.hystrix.HystrixCommand.queue()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","BLOCK_COMMENT: /* special handling of error states that throw immediately */","METHOD: com.netflix.hystrix.HystrixCommand.queue()","com.netflix.hystrix.HystrixCommand.queue()","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","METHOD_INVOCATION: f.get();","BODY: ","com.netflix.hystrix.HystrixCommand.queue()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","RETURN_STATEMENT: f;","BODY: ","com.netflix.hystrix.HystrixCommand.queue()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","VARIABLE_DECLARATION_STATEMENT: RuntimeException re = decomposeException(e);","CATCH_CLAUSE: Exception","com.netflix.hystrix.HystrixCommand.queue()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","RETURN_STATEMENT: f;","THEN_STATEMENT: (re instanceof HystrixBadRequestException)","com.netflix.hystrix.HystrixCommand.queue()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","VARIABLE_DECLARATION_STATEMENT: HystrixRuntimeException hre = (HystrixRuntimeException) re;","THEN_STATEMENT: (re instanceof HystrixRuntimeException)","com.netflix.hystrix.HystrixCommand.queue()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","LINE_COMMENT: // we don't throw these types from queue() only from queue().get() as they are execution errors","THEN_STATEMENT: ((hre.getFailureType() == FailureType.COMMAND_EXCEPTION) || (hre.getFailureType() == FailureType.TIMEOUT))","com.netflix.hystrix.HystrixCommand.queue()","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","RETURN_STATEMENT: f;","THEN_STATEMENT: ((hre.getFailureType() == FailureType.COMMAND_EXCEPTION) || (hre.getFailureType() == FailureType.TIMEOUT))","com.netflix.hystrix.HystrixCommand.queue()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","LINE_COMMENT: // these are errors we throw from queue() as they as rejection type errors","ELSE_STATEMENT: ((hre.getFailureType() == FailureType.COMMAND_EXCEPTION) || (hre.getFailureType() == FailureType.TIMEOUT))","com.netflix.hystrix.HystrixCommand.queue()","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","THROW_STATEMENT: hre;","ELSE_STATEMENT: ((hre.getFailureType() == FailureType.COMMAND_EXCEPTION) || (hre.getFailureType() == FailureType.TIMEOUT))","com.netflix.hystrix.HystrixCommand.queue()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: ((hre.getFailureType() == FailureType.COMMAND_EXCEPTION) || (hre.getFailureType() == FailureType.TIMEOUT))","IF_STATEMENT: ((hre.getFailureType() == FailureType.COMMAND_EXCEPTION) || (hre.getFailureType() == FailureType.TIMEOUT))","com.netflix.hystrix.HystrixCommand.queue()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","IF_STATEMENT: ((hre.getFailureType() == FailureType.COMMAND_EXCEPTION) || (hre.getFailureType() == FailureType.TIMEOUT))","THEN_STATEMENT: (re instanceof HystrixRuntimeException)","com.netflix.hystrix.HystrixCommand.queue()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","THROW_STATEMENT: re;","ELSE_STATEMENT: (re instanceof HystrixRuntimeException)","com.netflix.hystrix.HystrixCommand.queue()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: (re instanceof HystrixRuntimeException)","IF_STATEMENT: (re instanceof HystrixRuntimeException)","com.netflix.hystrix.HystrixCommand.queue()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","IF_STATEMENT: (re instanceof HystrixRuntimeException)","ELSE_STATEMENT: (re instanceof HystrixBadRequestException)","com.netflix.hystrix.HystrixCommand.queue()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: (re instanceof HystrixBadRequestException)","IF_STATEMENT: (re instanceof HystrixBadRequestException)","com.netflix.hystrix.HystrixCommand.queue()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","IF_STATEMENT: (re instanceof HystrixBadRequestException)","CATCH_CLAUSE: Exception","com.netflix.hystrix.HystrixCommand.queue()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","CATCH_CLAUSE: Exception","CATCH_CLAUSES: ","com.netflix.hystrix.HystrixCommand.queue()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","TRY_STATEMENT: ","THEN_STATEMENT: f.isDone()","com.netflix.hystrix.HystrixCommand.queue()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","IF_STATEMENT: f.isDone()","METHOD: com.netflix.hystrix.HystrixCommand.queue()","com.netflix.hystrix.HystrixCommand.queue()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","RETURN_STATEMENT: new Future<R>() {
  public @Override boolean cancel(boolean mayInterruptIfRunning) {
    return f.cancel(mayInterruptIfRunning);
  }
  public @Override boolean isCancelled() {
    return f.isCancelled();
  }
  public @Override boolean isDone() {
    return f.isDone();
  }
  public @Override R get() throws InterruptedException, ExecutionException {
    return performBlockingGetWithTimeout(o, f);
  }
  /**
     * @param   o
     * @param   f
     * @throws   InterruptedException
     * @throws   ExecutionException
   */
  protected R performBlockingGetWithTimeout(final ObservableCommand<R> o, final Future<R> f) throws InterruptedException, ExecutionException {
    if (f.isDone())
        {
          return f.get();
        }
    HystrixCommand<R> originalCommand = o.getCommand();
    if ((originalCommand != null))
        {
          Reference<TimerListener> timer = originalCommand.timeoutTimer.getAndSet(null);
          if ((timer != null))
              {
                TimerListener l = timer.get();
                timer.clear();
                long timeout = originalCommand.properties.executionIsolationThreadTimeoutInMilliseconds().get();
                long timeRemaining = timeout;
                long currTime = System.currentTimeMillis();
                if ((originalCommand.invocationStartTime != (- 1)))
                    {
                      timeRemaining = ((originalCommand.invocationStartTime + originalCommand.properties.executionIsolationThreadTimeoutInMilliseconds().get()) - currTime);
                    }
                if ((timeRemaining > 0))
                    {
                      try
                        {
                          return f.get(timeRemaining, TimeUnit.MILLISECONDS);
                        }
                      catch (TimeoutException e)
                        {
                          if ((l != null))
                              {
                                l.tick();
                              }
                        }
                    }
                else
                    {
                      if ((! f.isDone()))
                          {
                            if ((l != null))
                                {
                                  l.tick();
                                }
                          }
                    }
              }
        }
    return f.get();
  }
  public @Override R get(long timeout, TimeUnit unit) throws InterruptedException, ExecutionException, TimeoutException {
    return get();
  }
};","METHOD: com.netflix.hystrix.HystrixCommand.queue()","com.netflix.hystrix.HystrixCommand.queue()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"DOC_DELETE","JAVADOC: /**
     * Used for asynchronous execution of command.
     * <p>
     * This will queue up the command on the thread pool and return an {@link Future} to get the result once it completes.
     * <p>
     * NOTE: If configured to not run in a separate thread, this will have the same effect as {@link #execute()} and will block.
     * <p>
     * We don't throw an exception but just flip to synchronous execution so code doesn't need to change in order to switch a command from running on a separate thread to the calling thread.
     * 
     * @return {@code Future<R>} Result of {@link #run()} execution or a fallback from {@link #getFallback()} if the command fails for any reason.
     * @throws HystrixRuntimeException
     *             if a fallback does not exist
     *             <p>
     *             <ul>
     *             <li>via {@code Future.get()} in {@link ExecutionException#getCause()} if a failure occurs</li>
     *             <li>or immediately if the command can not be queued (such as short-circuited, thread-pool/semaphore rejected)</li>
     *             </ul>
     * @throws HystrixBadRequestException
     *             via {@code Future.get()} in {@link ExecutionException#getCause()} if invalid arguments or state were used representing a user failure, not a system failure
     * @throws IllegalStateException
     *             if invoked more than once
     */","METHOD: com.netflix.hystrix.HystrixCommand.queue()","com.netflix.hystrix.HystrixCommand.queue()","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_INSERT","RETURN_STATEMENT: observableCommand.isSuccessfulExecution();","METHOD: com.netflix.hystrix.HystrixCommand.isSuccessfulExecution()","com.netflix.hystrix.HystrixCommand.isSuccessfulExecution()","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","RETURN_STATEMENT: executionResult.events.contains(HystrixEventType.SUCCESS);","METHOD: com.netflix.hystrix.HystrixCommand.isSuccessfulExecution()","com.netflix.hystrix.HystrixCommand.isSuccessfulExecution()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"DOC_DELETE","JAVADOC: /**
     * Whether the response was returned successfully either by executing <code>run()</code> or from cache.
     * 
     * @return boolean
     */","METHOD: com.netflix.hystrix.HystrixCommand.isSuccessfulExecution()","com.netflix.hystrix.HystrixCommand.isSuccessfulExecution()","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_INSERT","RETURN_STATEMENT: observableCommand.getExecutionTimeInMilliseconds();","METHOD: com.netflix.hystrix.HystrixCommand.getExecutionTimeInMilliseconds()","com.netflix.hystrix.HystrixCommand.getExecutionTimeInMilliseconds()","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","RETURN_STATEMENT: executionResult.executionTime;","METHOD: com.netflix.hystrix.HystrixCommand.getExecutionTimeInMilliseconds()","com.netflix.hystrix.HystrixCommand.getExecutionTimeInMilliseconds()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"DOC_DELETE","JAVADOC: /**
     * The execution time of this command instance in milliseconds, or -1 if not executed.
     * 
     * @return int
     */","METHOD: com.netflix.hystrix.HystrixCommand.getExecutionTimeInMilliseconds()","com.netflix.hystrix.HystrixCommand.getExecutionTimeInMilliseconds()","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_INSERT","RETURN_STATEMENT: observableCommand.observe();","METHOD: com.netflix.hystrix.HystrixCommand.observe()","com.netflix.hystrix.HystrixCommand.observe()","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","LINE_COMMENT: // us a ReplaySubject to buffer the eagerly subscribed-to Observable","METHOD: com.netflix.hystrix.HystrixCommand.observe()","com.netflix.hystrix.HystrixCommand.observe()","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","VARIABLE_DECLARATION_STATEMENT: ReplaySubject<R> subject = ReplaySubject.create();","METHOD: com.netflix.hystrix.HystrixCommand.observe()","com.netflix.hystrix.HystrixCommand.observe()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","LINE_COMMENT: // eagerly kick off subscription","METHOD: com.netflix.hystrix.HystrixCommand.observe()","com.netflix.hystrix.HystrixCommand.observe()","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","METHOD_INVOCATION: toObservable().subscribe(subject);","METHOD: com.netflix.hystrix.HystrixCommand.observe()","com.netflix.hystrix.HystrixCommand.observe()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","LINE_COMMENT: // return the subject that can be subscribed to later while the execution has already started","METHOD: com.netflix.hystrix.HystrixCommand.observe()","com.netflix.hystrix.HystrixCommand.observe()","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","RETURN_STATEMENT: subject;","METHOD: com.netflix.hystrix.HystrixCommand.observe()","com.netflix.hystrix.HystrixCommand.observe()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"DOC_DELETE","JAVADOC: /**
     * Used for asynchronous execution of command with a callback by subscribing to the {@link Observable}.
     * <p>
     * This eagerly starts execution of the command the same as {@link #queue()} and {@link #execute()}.
     * A lazy {@link Observable} can be obtained from {@link #toObservable()}.
     * <p>
     * <b>Callback Scheduling</b>
     * <p>
     * <ul>
     * <li>When using {@link ExecutionIsolationStrategy#THREAD} this defaults to using {@link Schedulers#threadPoolForComputation()} for callbacks.</li>
     * <li>When using {@link ExecutionIsolationStrategy#SEMAPHORE} this defaults to using {@link Schedulers#immediate()} for callbacks.</li>
     * </ul>
     * Use {@link #toObservable(rx.Scheduler)} to schedule the callback differently.
     * <p>
     * See https://github.com/Netflix/RxJava/wiki for more information.
     * 
     * @return {@code Observable<R>} that executes and calls back with the result of {@link #run()} execution or a fallback from {@link #getFallback()} if the command fails for any reason.
     * @throws HystrixRuntimeException
     *             if a fallback does not exist
     *             <p>
     *             <ul>
     *             <li>via {@code Observer#onError} if a failure occurs</li>
     *             <li>or immediately if the command can not be queued (such as short-circuited, thread-pool/semaphore rejected)</li>
     *             </ul>
     * @throws HystrixBadRequestException
     *             via {@code Observer#onError} if invalid arguments or state were used representing a user failure, not a system failure
     * @throws IllegalStateException
     *             if invoked more than once
     */","METHOD: com.netflix.hystrix.HystrixCommand.observe()","com.netflix.hystrix.HystrixCommand.observe()","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_UPDATE","RETURN_STATEMENT: circuitBreaker.isOpen();","METHOD: com.netflix.hystrix.HystrixCommand.isCircuitBreakerOpen()","com.netflix.hystrix.HystrixCommand.isCircuitBreakerOpen()","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"DOC_DELETE","JAVADOC: /**
     * Whether the 'circuit-breaker' is open meaning that <code>execute()</code> will immediately return
     * the <code>getFallback()</code> response and not attempt a HystrixCommand execution.
     * 
     * @return boolean
     */","METHOD: com.netflix.hystrix.HystrixCommand.isCircuitBreakerOpen()","com.netflix.hystrix.HystrixCommand.isCircuitBreakerOpen()","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_INSERT","RETURN_STATEMENT: observableCommand.getCommandKey();","METHOD: com.netflix.hystrix.HystrixCommand.getCommandKey()","com.netflix.hystrix.HystrixCommand.getCommandKey()","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","RETURN_STATEMENT: commandKey;","METHOD: com.netflix.hystrix.HystrixCommand.getCommandKey()","com.netflix.hystrix.HystrixCommand.getCommandKey()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"DOC_DELETE","JAVADOC: /**
     * @return {@link HystrixCommandKey} identifying this command instance for statistics, circuit-breaker, properties, etc.
     */","METHOD: com.netflix.hystrix.HystrixCommand.getCommandKey()","com.netflix.hystrix.HystrixCommand.getCommandKey()","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_INSERT","RETURN_STATEMENT: observableCommand.isResponseRejected();","METHOD: com.netflix.hystrix.HystrixCommand.isResponseRejected()","com.netflix.hystrix.HystrixCommand.isResponseRejected()","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","RETURN_STATEMENT: (executionResult.events.contains(HystrixEventType.THREAD_POOL_REJECTED) || executionResult.events.contains(HystrixEventType.SEMAPHORE_REJECTED));","METHOD: com.netflix.hystrix.HystrixCommand.isResponseRejected()","com.netflix.hystrix.HystrixCommand.isResponseRejected()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"DOC_DELETE","JAVADOC: /**
     * Whether the response received was a fallback as result of being
     * rejected (from thread-pool or semaphore) and <code>getFallback()</code> being called.
     * 
     * @return boolean
     */","METHOD: com.netflix.hystrix.HystrixCommand.isResponseRejected()","com.netflix.hystrix.HystrixCommand.isResponseRejected()","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"DOC_UPDATE","JAVADOC: /**
     * Fluent interface for arguments to the {@link HystrixCommand} constructor.
     * <p>
     * The required arguments are set via the 'with' factory method and optional arguments via the 'and' chained methods.
     * <p>
     * Example:
     * <pre> {@code
     *  Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey("GroupName"))
                .andCommandKey(HystrixCommandKey.Factory.asKey("CommandName"))
                .andEventNotifier(notifier);
     * } </pre>
     */","CLASS: com.netflix.hystrix.HystrixCommand.Setter","com.netflix.hystrix.HystrixCommand.Setter","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.Setter.threadPoolKey : HystrixThreadPoolKey","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.Setter.threadPoolPropertiesDefaults : HystrixThreadPoolProperties.Setter","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"DOC_UPDATE","JAVADOC: /**
         * Setter factory method with required values.
         * <p>
         * All optional arguments can be set via the chained methods.
         * 
         * @param groupKey
         *            {@link HystrixCommandGroupKey} used to group together multiple {@link HystrixCommand} objects.
         *            <p>
         *            The {@link HystrixCommandGroupKey} is used to represent a common relationship between commands. For example, a library or team name, the system all related commands interace
         *            with,
         *            common business purpose etc.
         */","METHOD: com.netflix.hystrix.HystrixCommand.Setter.withGroupKey(HystrixCommandGroupKey)","com.netflix.hystrix.HystrixCommand.Setter.withGroupKey(HystrixCommandGroupKey)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.Setter.Setter(HystrixCommandGroupKey)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"DOC_UPDATE","JAVADOC: /**
         * Setter factory method containing required values.
         * <p>
         * All optional arguments can be set via the chained methods.
         * 
         * @param groupKey
         *            {@link HystrixCommandGroupKey} used to group together multiple {@link HystrixCommand} objects.
         *            <p>
         *            The {@link HystrixCommandGroupKey} is used to represent a common relationship between commands. For example, a library or team name, the system all related commands interace
         *            with,
         *            common business purpose etc.
         */","METHOD: com.netflix.hystrix.HystrixCommand.Setter.Setter(HystrixCommandGroupKey)","com.netflix.hystrix.HystrixCommand.Setter.Setter(HystrixCommandGroupKey)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.Setter.commandPropertiesDefaults : HystrixCommandProperties.Setter","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"DOC_UPDATE","JAVADOC: /**
         * @param commandKey
         *            {@link HystrixCommandKey} used to identify a {@link HystrixCommand} instance for statistics, circuit-breaker, properties, etc.
         *            <p>
         *            By default this will be derived from the instance class name.
         *            <p>
         *            NOTE: Every unique {@link HystrixCommandKey} will result in new instances of {@link HystrixCircuitBreaker}, {@link HystrixCommandMetrics} and {@link HystrixCommandProperties}.
         *            Thus,
         *            the number of variants should be kept to a finite and reasonable number to avoid high-memory usage or memory leacks.
         *            <p>
         *            Hundreds of keys is fine, tens of thousands is probably not.
         * @return Setter for fluent interface via method chaining
         */","METHOD: com.netflix.hystrix.HystrixCommand.Setter.andCommandKey(HystrixCommandKey)","com.netflix.hystrix.HystrixCommand.Setter.andCommandKey(HystrixCommandKey)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.Setter.commandKey : HystrixCommandKey","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"DOC_UPDATE","JAVADOC: /**
         * Optional
         * 
         * @param commandPropertiesDefaults
         *            {@link HystrixCommandProperties.Setter} with property overrides for this specific instance of {@link HystrixCommand}.
         *            <p>
         *            See the {@link HystrixPropertiesStrategy} JavaDocs for more information on properties and order of precedence.
         * @return Setter for fluent interface via method chaining
         */","METHOD: com.netflix.hystrix.HystrixCommand.Setter.andCommandPropertiesDefaults(HystrixCommandProperties.Setter)","com.netflix.hystrix.HystrixCommand.Setter.andCommandPropertiesDefaults(HystrixCommandProperties.Setter)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"DOC_UPDATE","JAVADOC: /**
         * Optional
         * 
         * @param threadPoolPropertiesDefaults
         *            {@link HystrixThreadPoolProperties.Setter} with property overrides for the {@link HystrixThreadPool} used by this specific instance of {@link HystrixCommand}.
         *            <p>
         *            See the {@link HystrixPropertiesStrategy} JavaDocs for more information on properties and order of precedence.
         * @return Setter for fluent interface via method chaining
         */","METHOD: com.netflix.hystrix.HystrixCommand.Setter.andThreadPoolPropertiesDefaults(HystrixThreadPoolProperties.Setter)","com.netflix.hystrix.HystrixCommand.Setter.andThreadPoolPropertiesDefaults(HystrixThreadPoolProperties.Setter)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.Setter.groupKey : HystrixCommandGroupKey","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_INSERT","RETURN_STATEMENT: observableCommand.getExecutionEvents();","METHOD: com.netflix.hystrix.HystrixCommand.getExecutionEvents()","com.netflix.hystrix.HystrixCommand.getExecutionEvents()","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","RETURN_STATEMENT: executionResult.events;","METHOD: com.netflix.hystrix.HystrixCommand.getExecutionEvents()","com.netflix.hystrix.HystrixCommand.getExecutionEvents()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"DOC_DELETE","JAVADOC: /**
     * List of HystrixCommandEventType enums representing events that occurred during execution.
     * <p>
     * Examples of events are SUCCESS, FAILURE, TIMEOUT, and SHORT_CIRCUITED
     * 
     * @return {@code List<HystrixEventType>}
     */","METHOD: com.netflix.hystrix.HystrixCommand.getExecutionEvents()","com.netflix.hystrix.HystrixCommand.getExecutionEvents()","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"CONDITION_EXPRESSION_CHANGE","IF_STATEMENT: properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD)","METHOD: com.netflix.hystrix.HystrixCommand.toObservable()","com.netflix.hystrix.HystrixCommand.toObservable()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_UPDATE","RETURN_STATEMENT: toObservable(Schedulers.threadPoolForComputation());","THEN_STATEMENT: properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD)","com.netflix.hystrix.HystrixCommand.toObservable()","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_INSERT","RETURN_STATEMENT: observableCommand.isFailedExecution();","METHOD: com.netflix.hystrix.HystrixCommand.isFailedExecution()","com.netflix.hystrix.HystrixCommand.isFailedExecution()","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","RETURN_STATEMENT: executionResult.events.contains(HystrixEventType.FAILURE);","METHOD: com.netflix.hystrix.HystrixCommand.isFailedExecution()","com.netflix.hystrix.HystrixCommand.isFailedExecution()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"DOC_DELETE","JAVADOC: /**
     * Whether the <code>run()</code> resulted in a failure (exception).
     * 
     * @return boolean
     */","METHOD: com.netflix.hystrix.HystrixCommand.isFailedExecution()","com.netflix.hystrix.HystrixCommand.isFailedExecution()","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_UPDATE","RETURN_STATEMENT: isExecutedInThread.get();","METHOD: com.netflix.hystrix.HystrixCommand.isExecutedInThread()","com.netflix.hystrix.HystrixCommand.isExecutedInThread()","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"DOC_DELETE","JAVADOC: /**
     * Whether the execution occurred in a separate thread.
     * <p>
     * This should be called only once execute()/queue()/fireOrForget() are called otherwise it will always return false.
     * <p>
     * This specifies if a thread execution actually occurred, not just if it is configured to be executed in a thread.
     * 
     * @return boolean
     */","METHOD: com.netflix.hystrix.HystrixCommand.isExecutedInThread()","com.netflix.hystrix.HystrixCommand.isExecutedInThread()","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_INSERT","RETURN_STATEMENT: observableCommand.getMetrics();","METHOD: com.netflix.hystrix.HystrixCommand.getMetrics()","com.netflix.hystrix.HystrixCommand.getMetrics()","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","RETURN_STATEMENT: metrics;","METHOD: com.netflix.hystrix.HystrixCommand.getMetrics()","com.netflix.hystrix.HystrixCommand.getMetrics()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"DOC_DELETE","JAVADOC: /**
     * The {@link HystrixCommandMetrics} associated with this {@link HystrixCommand} instance.
     * 
     * @return HystrixCommandMetrics
     */","METHOD: com.netflix.hystrix.HystrixCommand.getMetrics()","com.netflix.hystrix.HystrixCommand.getMetrics()","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_INSERT","RETURN_STATEMENT: observableCommand.getCommandGroup();","METHOD: com.netflix.hystrix.HystrixCommand.getCommandGroup()","com.netflix.hystrix.HystrixCommand.getCommandGroup()","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","RETURN_STATEMENT: commandGroup;","METHOD: com.netflix.hystrix.HystrixCommand.getCommandGroup()","com.netflix.hystrix.HystrixCommand.getCommandGroup()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"DOC_DELETE","JAVADOC: /**
     * @return {@link HystrixCommandGroupKey} used to group together multiple {@link HystrixCommand} objects.
     *         <p>
     *         The {@link HystrixCommandGroupKey} is used to represent a common relationship between commands. For example, a library or team name, the system all related commands interace with,
     *         common business purpose etc.
     */","METHOD: com.netflix.hystrix.HystrixCommand.getCommandGroup()","com.netflix.hystrix.HystrixCommand.getCommandGroup()","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_INSERT","RETURN_STATEMENT: observableCommand.isResponseFromFallback();","METHOD: com.netflix.hystrix.HystrixCommand.isResponseFromFallback()","com.netflix.hystrix.HystrixCommand.isResponseFromFallback()","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","RETURN_STATEMENT: executionResult.events.contains(HystrixEventType.FALLBACK_SUCCESS);","METHOD: com.netflix.hystrix.HystrixCommand.isResponseFromFallback()","com.netflix.hystrix.HystrixCommand.isResponseFromFallback()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"DOC_DELETE","JAVADOC: /**
     * Whether the response received from was the result of some type of failure
     * and <code>getFallback()</code> being called.
     * 
     * @return boolean
     */","METHOD: com.netflix.hystrix.HystrixCommand.isResponseFromFallback()","com.netflix.hystrix.HystrixCommand.isResponseFromFallback()","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_INSERT","RETURN_STATEMENT: observableCommand.isResponseTimedOut();","METHOD: com.netflix.hystrix.HystrixCommand.isResponseTimedOut()","com.netflix.hystrix.HystrixCommand.isResponseTimedOut()","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","RETURN_STATEMENT: executionResult.events.contains(HystrixEventType.TIMEOUT);","METHOD: com.netflix.hystrix.HystrixCommand.isResponseTimedOut()","com.netflix.hystrix.HystrixCommand.isResponseTimedOut()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"DOC_DELETE","JAVADOC: /**
     * Whether the response received was the result of a timeout
     * and <code>getFallback()</code> being called.
     * 
     * @return boolean
     */","METHOD: com.netflix.hystrix.HystrixCommand.isResponseTimedOut()","com.netflix.hystrix.HystrixCommand.isResponseTimedOut()","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.subscribeWithThreadIsolation(Observer<? super R>)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.subscribeWithSemaphoreIsolation(Observer<? super R>)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getExecutionSemaphore()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getFallbackOrThrowException(HystrixEventType,FailureType,String,Exception)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.recordExecutedCommand()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getFallbackSemaphore()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getDefaultNameFromClass(Class<? extends HystrixCommand>)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.decomposeException(Exception)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getFallbackOrThrowException(HystrixEventType,FailureType,String)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getLogMessagePrefix()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.executeCommand()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isRequestCachingEnabled()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.recordTotalExecutionTime(long)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getFallbackWithProtection()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.observableCommand : HystrixCommandFromObservableCommand<R>","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.isExecutedInThread : AtomicBoolean","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.executionSemaphorePerCircuit : ConcurrentHashMap<String, TryableSemaphore>","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.started : AtomicBoolean","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.executionSemaphoreOverride : TryableSemaphore","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.executionResult : ExecutionResult","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.fallbackSemaphorePerCircuit : ConcurrentHashMap<String, TryableSemaphore>","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.timeoutTimer : AtomicReference<Reference<TimerListener>>","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.threadPoolKey : HystrixThreadPoolKey","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.properties : HystrixCommandProperties","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.isExecutionComplete : AtomicBoolean","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.fallbackSemaphoreOverride : TryableSemaphore","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.metrics : HystrixCommandMetrics","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.commandKey : HystrixCommandKey","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.concurrencyStrategy : HystrixConcurrencyStrategy","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.commandGroup : HystrixCommandGroupKey","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.isCommandTimedOut : AtomicReference<TimedOutStatus>","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.circuitBreaker : HystrixCircuitBreaker","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.requestCache : HystrixRequestCache","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.logger : Logger","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.defaultNameCache : ConcurrentHashMap<Class<? extends HystrixCommand>, String>","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.invocationStartTime : long","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.executionHook : HystrixCommandExecutionHook","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.threadPool : HystrixThreadPool","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.eventNotifier : HystrixEventNotifier","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.HystrixCommandFromObservableCommand","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.TimeoutObservable","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.ExecutionResult","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.UnitTest","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.TryableSemaphore","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.ObservableCommand","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.CachedObservableOriginal","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.CachedObservableResponse","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"PARENT_INTERFACE_CHANGE","PARAMETERIZED_TYPE: OnSubscribeFunc<T>","SUPER_INTERFACE_TYPES: ","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction","CRUCIAL"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_ORDERING_CHANGE","IF_STATEMENT: subscription.isUnsubscribed()","WHILE_STATEMENT: true","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.setException(Exception)","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_ORDERING_CHANGE","IF_STATEMENT: subscription.isUnsubscribed()","WHILE_STATEMENT: true","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.setResponse(T)","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"METHOD_RENAMING","METHOD: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.onSubscribe(Observer<? super T>)","METHOD: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.onSubscribe(Observer<? super T>)","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.call(Subscriber<? super T>)","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"RETURN_TYPE_DELETE","SINGLE_TYPE: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.call(Subscriber<? super T>): Subscription","METHOD: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.onSubscribe(Observer<? super T>)","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.call(Subscriber<? super T>)","CRUCIAL"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: observer: Observer<? super T>","PARAMETER: observer","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.call(Subscriber<? super T>)","CRUCIAL"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_INSERT","METHOD_INVOCATION: observer.add(subscription);","METHOD: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.onSubscribe(Observer<? super T>)","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.call(Subscriber<? super T>)","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","LINE_COMMENT: // we'll retry","METHOD: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.onSubscribe(Observer<? super T>)","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.call(Subscriber<? super T>)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","RETURN_STATEMENT: subscription;","METHOD: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.onSubscribe(Observer<? super T>)","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.call(Subscriber<? super T>)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_CLASS","CLASS: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.UnitTest","CLASS: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction","CRUCIAL"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_UPDATE","ASSIGNMENT: callableWithContextOfParent = new HystrixContextCallable<Void>(concurrencyStrategy, new Callable<Void>() {
  public @Override Void call() throws Exception {
    try
      {
        RequestBatch<BatchReturnType, ResponseType, RequestArgumentType> currentBatch = batch.get();
        if (((currentBatch != null) && (currentBatch.requests.size() > 0)))
            {
              createNewBatchAndExecutePreviousIfNeeded(currentBatch);
            }
      }
    catch (Throwable t)
      {
        logger.error("Error occurred trying to executeRequestsFromQueue.", t);
      }
    return null;
  }
});","METHOD: com.netflix.hystrix.collapser.RequestCollapser.CollapsedTask.CollapsedTask()","com.netflix.hystrix.collapser.RequestCollapser.CollapsedTask.CollapsedTask()","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixRequestCache.UnitTest","CLASS: com.netflix.hystrix.HystrixRequestCache","com.netflix.hystrix.HystrixRequestCache","CRUCIAL"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCircuitBreaker.TestCircuitBreaker","CLASS: com.netflix.hystrix.HystrixCircuitBreaker","com.netflix.hystrix.HystrixCircuitBreaker","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCircuitBreaker.UnitTest","CLASS: com.netflix.hystrix.HystrixCircuitBreaker","com.netflix.hystrix.HystrixCircuitBreaker","CRUCIAL"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_INSERT","VARIABLE_DECLARATION_STATEMENT: final LinkedList<HystrixCommandKey> list = currentCommand.get();","METHOD: com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_INSERT","RETURN_STATEMENT: new Action0() {
  public @Override void call() {
    endCurrentThreadExecutingCommand(list);
  }
};","METHOD: com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_INSERT","METHOD_INVOCATION: list.push(key);","BODY: ","com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","METHOD_INVOCATION: currentCommand.get().push(key);","BODY: ","com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"DOC_INSERT","JAVADOC: /**
     * 
     * @return Action0 to perform the same work as `endCurrentThreadExecutingCommand()` but can be done from any thread
     */","METHOD: com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"RETURN_TYPE_INSERT","SINGLE_TYPE: com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey): Action0","METHOD: com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","IF_STATEMENT: (! currentCommand.get().isEmpty())","BODY: ","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","LINE_COMMENT: // this shouldn't be possible since we check for empty above and this is thread-isolated","CATCH_CLAUSE: NoSuchElementException","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","METHOD_INVOCATION: logger.debug("No command found to end.", e);","CATCH_CLAUSE: NoSuchElementException","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","CATCH_CLAUSE: NoSuchElementException","CATCH_CLAUSES: ","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","METHOD_INVOCATION: logger.warn("Unable to end command.", e);","CATCH_CLAUSE: Exception","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","CATCH_CLAUSE: Exception","CATCH_CLAUSES: ","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","TRY_STATEMENT: ","METHOD: com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_PARENT_CHANGE","METHOD_INVOCATION: currentCommand.get().pop();","THEN_STATEMENT: (! currentCommand.get().isEmpty())","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_UPDATE","METHOD_INVOCATION: currentCommand.get().pop();","METHOD: com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand(LinkedList<HystrixCommandKey>)","CLASS: com.netflix.hystrix.Hystrix","com.netflix.hystrix.Hystrix","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_CLASS","CLASS: com.netflix.hystrix.Hystrix.UnitTest","CLASS: com.netflix.hystrix.Hystrix","com.netflix.hystrix.Hystrix","CRUCIAL"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"CONDITION_EXPRESSION_CHANGE","FOREACH_STATEMENT: HystrixCommand<?> command:executedCommands","BODY: ","com.netflix.hystrix.HystrixRequestLog.getExecutedCommandsAsString()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixRequestLog.MAX_STORAGE : int","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: command: HystrixCommand<?>","PARAMETER: command","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixExecutableInfo<?>)","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_INSERT","LINE_COMMENT: // TODO remove this when deprecation completed","METHOD: com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixCommand<?>)","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixExecutableInfo<?>)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_INSERT","IF_STATEMENT: (command instanceof HystrixCommand.HystrixCommandFromObservableCommand)","METHOD: com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixCommand<?>)","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixExecutableInfo<?>)","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_INSERT","VARIABLE_DECLARATION_STATEMENT: @SuppressWarnings("rawtypes") HystrixCommand<?> _c = (HystrixCommand.HystrixCommandFromObservableCommand) command.getOriginal();","THEN_STATEMENT: (command instanceof HystrixCommand.HystrixCommandFromObservableCommand)","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixExecutableInfo<?>)","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_INSERT","IF_STATEMENT: (! executedCommands.offer(_c))","THEN_STATEMENT: (command instanceof HystrixCommand.HystrixCommandFromObservableCommand)","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixExecutableInfo<?>)","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_INSERT","LINE_COMMENT: // see RequestLog: Reduce Chance of Memory Leak https://github.com/Netflix/Hystrix/issues/53","THEN_STATEMENT: (! executedCommands.offer(_c))","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixExecutableInfo<?>)","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_INSERT","METHOD_INVOCATION: logger.warn((("RequestLog ignoring command after reaching limit of " + MAX_STORAGE) + ". See https://github.com/Netflix/Hystrix/issues/53 for more information."));","THEN_STATEMENT: (! executedCommands.offer(_c))","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixExecutableInfo<?>)","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"CONDITION_EXPRESSION_CHANGE","IF_STATEMENT: (! executedCommands.offer(command))","METHOD: com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixCommand<?>)","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixExecutableInfo<?>)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixRequestLog.getAllExecutedCommands()","CLASS: com.netflix.hystrix.HystrixRequestLog","com.netflix.hystrix.HystrixRequestLog","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixRequestLog.allExecutedCommands : LinkedBlockingQueue<HystrixExecutableInfo<?>>","CLASS: com.netflix.hystrix.HystrixRequestLog","com.netflix.hystrix.HystrixRequestLog","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixRequestLog.TestCommand","CLASS: com.netflix.hystrix.HystrixRequestLog","com.netflix.hystrix.HystrixRequestLog","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixRequestLog.UnitTest","CLASS: com.netflix.hystrix.HystrixRequestLog","com.netflix.hystrix.HystrixRequestLog","CRUCIAL"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVING_ATTRIBUTE_MODIFIABILITY","MODIFIER: final","MODIFIERS: ","com.netflix.hystrix.HystrixThreadPool.Factory.threadPools : ConcurrentHashMap<String, HystrixThreadPool>","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixThreadPool.Factory.threadPools : ConcurrentHashMap<String, HystrixThreadPool>","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_INSERT","ASSIGNMENT: this.scheduler = new HystrixContextScheduler(concurrencyStrategy, this);","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.HystrixThreadPoolDefault(HystrixThreadPoolKey,HystrixThreadPoolProperties.Setter)","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.HystrixThreadPoolDefault(HystrixThreadPoolKey,HystrixThreadPoolProperties.Setter)","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_INSERT","METHOD_INVOCATION: touchConfig();","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","LINE_COMMENT: // allow us to change things via fast-properties by setting it each time","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","METHOD_INVOCATION: threadPool.setCorePoolSize(properties.coreSize().get());","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","METHOD_INVOCATION: threadPool.setMaximumPoolSize(properties.coreSize().get());","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","LINE_COMMENT: // we always want maxSize the same as coreSize, we are not using a dynamically resizing pool","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","METHOD_INVOCATION: threadPool.setKeepAliveTime(properties.keepAliveTimeMinutes().get(), TimeUnit.MINUTES);","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_DELETE","LINE_COMMENT: // this doesn't really matter since we're not resizing","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getScheduler()","CLASS: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.touchConfig()","CLASS: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.scheduler : Scheduler","CLASS: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixThreadPool.getScheduler()","CLASS: com.netflix.hystrix.HystrixThreadPool","com.netflix.hystrix.HystrixThreadPool","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixThreadPool.UnitTest","CLASS: com.netflix.hystrix.HystrixThreadPool","com.netflix.hystrix.HystrixThreadPool","CRUCIAL"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"RETURN_TYPE_CHANGE","PARAMETERIZED_TYPE: com.netflix.hystrix.exception.HystrixRuntimeException.getImplementingClass(): Class<? extends HystrixCommand>","METHOD: com.netflix.hystrix.exception.HystrixRuntimeException.getImplementingClass()","com.netflix.hystrix.exception.HystrixRuntimeException.getImplementingClass()","CRUCIAL"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: commandClass: Class<? extends HystrixCommand>","PARAMETER: commandClass","com.netflix.hystrix.exception.HystrixRuntimeException.HystrixRuntimeException(FailureType,Class<? extends HystrixExecutable>,String,Exception,Throwable)","CRUCIAL"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: commandClass: Class<? extends HystrixCommand>","PARAMETER: commandClass","com.netflix.hystrix.exception.HystrixRuntimeException.HystrixRuntimeException(FailureType,Class<? extends HystrixExecutable>,String,Throwable,Throwable)","CRUCIAL"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"ATTRIBUTE_TYPE_CHANGE","PARAMETERIZED_TYPE: Class<? extends HystrixCommand>","FIELD: com.netflix.hystrix.exception.HystrixRuntimeException.commandClass : Class<? extends HystrixCommand>","com.netflix.hystrix.exception.HystrixRuntimeException.commandClass : Class<? extends HystrixExecutable>","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCommandMetrics.UnitTest","CLASS: com.netflix.hystrix.HystrixCommandMetrics","com.netflix.hystrix.HystrixCommandMetrics","CRUCIAL"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory.getPublisherForThreadPool(HystrixThreadPoolKey,HystrixThreadPoolMetrics,HystrixThreadPoolProperties)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory.getPublisherForCommand(HystrixCommandKey,HystrixCommandGroupKey,HystrixCommandMetrics,HystrixCircuitBreaker,HystrixCommandProperties)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory.HystrixMetricsPublisherFactory(HystrixMetricsPublisher)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_CLASS","CLASS: com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory.TestHystrixMetricsPublisher","CLASS: com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory","com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_CLASS","CLASS: com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory.UnitTest","CLASS: com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory","com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory","CRUCIAL"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.HystrixPlugins.concurrencyStrategy : AtomicReference<HystrixConcurrencyStrategy>","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.HystrixPlugins.commandExecutionHook : AtomicReference<HystrixCommandExecutionHook>","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.HystrixPlugins.metricsPublisher : AtomicReference<HystrixMetricsPublisher>","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.HystrixPlugins.notifier : AtomicReference<HystrixEventNotifier>","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.HystrixPlugins.propertiesFactory : AtomicReference<HystrixPropertiesStrategy>","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_CLASS","CLASS: com.netflix.hystrix.strategy.HystrixPlugins.UnitTest","CLASS: com.netflix.hystrix.strategy.HystrixPlugins","com.netflix.hystrix.strategy.HystrixPlugins","CRUCIAL"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","THROW_STATEMENT: new RuntimeException(e);","CATCH_CLAUSE: Exception","com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable.run()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","CATCH_CLAUSE: Exception","CATCH_CLAUSES: ","com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable.run()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","TRY_STATEMENT: ","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable.run()","com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable.run()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_PARENT_CHANGE","TRY_STATEMENT: ","BODY: ","com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable.run()","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_MOVE","LINE_COMMENT: // set the state of this thread to that of its parent","BODY: ","com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable.run()","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_ORDERING_CHANGE","METHOD_INVOCATION: HystrixRequestContext.setContextOnCurrentThread(parentThreadState);","BODY: ","com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable.run()","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"COMMENT_MOVE","LINE_COMMENT: // execute actual Callable with the state of the parent","BODY: ","com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable.run()","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_UPDATE","METHOD_INVOCATION: actual.call();","BODY: ","com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable.run()","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"PARAMETER_DELETE","PARAMETER: concurrencyStrategy","PARAMETERS: ","com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable.HystrixContextRunnable(Runnable)","CRUCIAL"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_INSERT","ASSIGNMENT: this.actual = actual;","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable.HystrixContextRunnable(HystrixConcurrencyStrategy,Runnable)","com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable.HystrixContextRunnable(Runnable)","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","ASSIGNMENT: this.actual = concurrencyStrategy.wrapCallable(new Callable<Void>() {
  public @Override Void call() throws Exception {
    actual.run();
    return null;
  }
});","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable.HystrixContextRunnable(HystrixConcurrencyStrategy,Runnable)","com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable.HystrixContextRunnable(Runnable)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"ATTRIBUTE_TYPE_CHANGE","PARAMETERIZED_TYPE: Callable<Void>","FIELD: com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable.actual : Callable<Void>","com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable.actual : Runnable","HIGH"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"PARAMETER_DELETE","PARAMETER: concurrencyStrategy","PARAMETERS: ","com.netflix.hystrix.strategy.concurrency.HystrixContextCallable.HystrixContextCallable(Callable<K>)","CRUCIAL"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_INSERT","ASSIGNMENT: this.actual = actual;","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextCallable.HystrixContextCallable(HystrixConcurrencyStrategy,Callable<K>)","com.netflix.hystrix.strategy.concurrency.HystrixContextCallable.HystrixContextCallable(Callable<K>)","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_DELETE","ASSIGNMENT: this.actual = concurrencyStrategy.wrapCallable(actual);","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextCallable.HystrixContextCallable(HystrixConcurrencyStrategy,Callable<K>)","com.netflix.hystrix.strategy.concurrency.HystrixContextCallable.HystrixContextCallable(Callable<K>)","MEDIUM"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"DOC_UPDATE","JAVADOC: /**
 * Wrap a {@link Scheduler} so that scheduled actions are wrapped with {@link HystrixContextFunc2} so that
 * the {@link HystrixRequestContext} is properly copied across threads (if they are used by the {@link Scheduler}).
 */","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","NONE"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"STATEMENT_INSERT","ASSIGNMENT: this.threadPool = null;","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.HystrixContextScheduler(HystrixConcurrencyStrategy,Scheduler)","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.HystrixContextScheduler(HystrixConcurrencyStrategy,Scheduler)","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.schedule(Action1<Inner>,long,TimeUnit)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.schedule(Action1<Inner>)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.HystrixContextScheduler(Scheduler)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.HystrixContextScheduler(HystrixConcurrencyStrategy,HystrixThreadPool)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.schedule(T,Func2<? super Scheduler, ? super T, ? extends Subscription>)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","CRUCIAL"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.schedule(T,Func2<? super Scheduler, ? super T, ? extends Subscription>,long,TimeUnit)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","CRUCIAL"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.threadPool : HystrixThreadPool","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.HystrixContextInnerScheduler","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.InnerHystrixContextScheduler","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_CLASS","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixConcurrencyStrategy.UnitTest","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixConcurrencyStrategy","com.netflix.hystrix.strategy.concurrency.HystrixConcurrencyStrategy","CRUCIAL"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_CLASS","CLASS: com.netflix.hystrix.strategy.properties.HystrixPropertiesChainedArchaiusProperty.UnitTest","CLASS: com.netflix.hystrix.strategy.properties.HystrixPropertiesChainedArchaiusProperty","com.netflix.hystrix.strategy.properties.HystrixPropertiesChainedArchaiusProperty","CRUCIAL"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"REMOVED_CLASS","CLASS: com.netflix.hystrix.strategy.properties.HystrixProperty.UnitTest","CLASS: com.netflix.hystrix.strategy.properties.HystrixProperty","com.netflix.hystrix.strategy.properties.HystrixProperty","CRUCIAL"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onRunError(HystrixExecutable<T>,Exception)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onStart(HystrixExecutable<T>)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onThreadStart(HystrixExecutable<T>)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onError(HystrixExecutable<T>,FailureType,Exception)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onFallbackSuccess(HystrixExecutable<T>,T)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onFallbackStart(HystrixExecutable<T>)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onRunStart(HystrixExecutable<T>)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onFallbackError(HystrixExecutable<T>,Exception)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onThreadComplete(HystrixExecutable<T>)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onComplete(HystrixExecutable<T>,T)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","LOW"
341,cb9a95385f786bd8a894258010f8c8548f2d7a03,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onRunSuccess(HystrixExecutable<T>,T)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","LOW"
342,999e7d37ec9b1c92d57e2ff74153093b6b8c8739,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixExecutable.toObservable()","CLASS: com.netflix.hystrix.HystrixExecutable","com.netflix.hystrix.HystrixExecutable","LOW"
343,beb1fd69a78aee83147c3c0a05d9ab72f94dc81c,"STATEMENT_INSERT","IF_STATEMENT: (commandPropertiesDefaults != null)","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommandFromObservableCommand.HystrixCommandFromObservableCommand(HystrixCommand<R>,HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommandFromObservableCommand.HystrixCommandFromObservableCommand(HystrixCommand<R>,HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
343,beb1fd69a78aee83147c3c0a05d9ab72f94dc81c,"STATEMENT_INSERT","METHOD_INVOCATION: System.out.println(("timeout properties: " + commandPropertiesDefaults.getExecutionIsolationThreadTimeoutInMilliseconds()));","THEN_STATEMENT: (commandPropertiesDefaults != null)","com.netflix.hystrix.HystrixCommand.HystrixCommandFromObservableCommand.HystrixCommandFromObservableCommand(HystrixCommand<R>,HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: commandInstance: HystrixExecutable<T>","PARAMETER: commandInstance","com.netflix.hystrix.HystrixObservableCommandTest.TestExecutionHook.onError(AbstractHystrixCommand<T>,FailureType,Exception)","CRUCIAL"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: commandInstance: HystrixExecutable<T>","PARAMETER: commandInstance","com.netflix.hystrix.HystrixObservableCommandTest.TestExecutionHook.onFallbackError(AbstractHystrixCommand<T>,Exception)","CRUCIAL"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: commandInstance: HystrixExecutable<T>","PARAMETER: commandInstance","com.netflix.hystrix.HystrixObservableCommandTest.TestExecutionHook.onFallbackSuccess(AbstractHystrixCommand<T>,T)","CRUCIAL"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: commandInstance: HystrixExecutable<T>","PARAMETER: commandInstance","com.netflix.hystrix.HystrixObservableCommandTest.TestExecutionHook.onRunError(AbstractHystrixCommand<T>,Exception)","CRUCIAL"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: commandInstance: HystrixExecutable<T>","PARAMETER: commandInstance","com.netflix.hystrix.HystrixObservableCommandTest.TestExecutionHook.onThreadComplete(AbstractHystrixCommand<T>)","CRUCIAL"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: commandInstance: HystrixExecutable<T>","PARAMETER: commandInstance","com.netflix.hystrix.HystrixObservableCommandTest.TestExecutionHook.onFallbackStart(AbstractHystrixCommand<T>)","CRUCIAL"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: commandInstance: HystrixExecutable<T>","PARAMETER: commandInstance","com.netflix.hystrix.HystrixObservableCommandTest.TestExecutionHook.onComplete(AbstractHystrixCommand<T>,T)","CRUCIAL"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: commandInstance: HystrixExecutable<T>","PARAMETER: commandInstance","com.netflix.hystrix.HystrixObservableCommandTest.TestExecutionHook.onRunSuccess(AbstractHystrixCommand<T>,T)","CRUCIAL"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: commandInstance: HystrixExecutable<T>","PARAMETER: commandInstance","com.netflix.hystrix.HystrixObservableCommandTest.TestExecutionHook.onThreadStart(AbstractHystrixCommand<T>)","CRUCIAL"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.TestExecutionHook.onRunStart(AbstractHystrixCommand<T>)","CLASS: com.netflix.hystrix.HystrixObservableCommandTest.TestExecutionHook","com.netflix.hystrix.HystrixObservableCommandTest.TestExecutionHook","LOW"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.TestExecutionHook.onStart(AbstractHystrixCommand<T>)","CLASS: com.netflix.hystrix.HystrixObservableCommandTest.TestExecutionHook","com.netflix.hystrix.HystrixObservableCommandTest.TestExecutionHook","LOW"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.TestExecutionHook.onRunStart(HystrixExecutable<T>)","CLASS: com.netflix.hystrix.HystrixObservableCommandTest.TestExecutionHook","com.netflix.hystrix.HystrixObservableCommandTest.TestExecutionHook","CRUCIAL"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.TestExecutionHook.onStart(HystrixExecutable<T>)","CLASS: com.netflix.hystrix.HystrixObservableCommandTest.TestExecutionHook","com.netflix.hystrix.HystrixObservableCommandTest.TestExecutionHook","CRUCIAL"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixExecutable.toObservable()","CLASS: com.netflix.hystrix.HystrixExecutable","com.netflix.hystrix.HystrixExecutable","CRUCIAL"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"PARENT_CLASS_INSERT","PARAMETERIZED_TYPE: AbstractHystrixCommand<R>","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"PARENT_INTERFACE_DELETE","PARAMETERIZED_TYPE: HystrixExecutableInfo<R>","SUPER_INTERFACE_TYPES: ","com.netflix.hystrix.HystrixCommand","CRUCIAL"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"STATEMENT_INSERT","RETURN_STATEMENT: new ObservableCommand<R>(observableCommand.toObservable(), this);","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"STATEMENT_DELETE","RETURN_STATEMENT: observableCommand.toObservable(observeOn, performAsyncTimeout);","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"STATEMENT_INSERT","CONSTRUCTOR_INVOCATION: super(group, key, threadPoolKey, circuitBreaker, threadPool, commandPropertiesDefaults, threadPoolPropertiesDefaults, metrics, fallbackSemaphore, executionSemaphore, propertiesStrategy, executionHook);","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"STATEMENT_INSERT","ASSIGNMENT: this.observableCommand = new HystrixCommandFromObservableCommand<R>(this);","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"STATEMENT_DELETE","CONSTRUCTOR_INVOCATION: super();","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"COMMENT_DELETE","BLOCK_COMMENT: /*
         * CommandKey initialization
         */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"STATEMENT_DELETE","VARIABLE_DECLARATION_STATEMENT: HystrixCommandKey commandKey = null;","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"COMMENT_DELETE","LINE_COMMENT: // use the HystrixCommand class rather than this ObservableCommand class if we have it","THEN_STATEMENT: ((key == null) || key.name().trim().equals(""))","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"STATEMENT_DELETE","VARIABLE_DECLARATION_STATEMENT: final String keyName = HystrixExecutableBase.getDefaultNameFromClass(getClass());","THEN_STATEMENT: ((key == null) || key.name().trim().equals(""))","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"STATEMENT_DELETE","ASSIGNMENT: commandKey = HystrixCommandKey.Factory.asKey(keyName);","THEN_STATEMENT: ((key == null) || key.name().trim().equals(""))","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"STATEMENT_DELETE","ASSIGNMENT: commandKey = key;","ELSE_STATEMENT: ((key == null) || key.name().trim().equals(""))","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: ((key == null) || key.name().trim().equals(""))","IF_STATEMENT: ((key == null) || key.name().trim().equals(""))","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"STATEMENT_DELETE","IF_STATEMENT: ((key == null) || key.name().trim().equals(""))","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"STATEMENT_DELETE","ASSIGNMENT: this.observableCommand = new HystrixCommandFromObservableCommand<R>(this, group, commandKey, threadPoolKey, circuitBreaker, threadPool, commandPropertiesDefaults, threadPoolPropertiesDefaults, metrics, fallbackSemaphore, executionSemaphore, propertiesStrategy, executionHook);","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommandFromObservableCommand.HystrixCommandFromObservableCommand(HystrixCommand<R>)","CLASS: com.netflix.hystrix.HystrixCommand.HystrixCommandFromObservableCommand","com.netflix.hystrix.HystrixCommand.HystrixCommandFromObservableCommand","LOW"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommandFromObservableCommand.HystrixCommandFromObservableCommand(HystrixCommand<R>,HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","CLASS: com.netflix.hystrix.HystrixCommand.HystrixCommandFromObservableCommand","com.netflix.hystrix.HystrixCommand.HystrixCommandFromObservableCommand","CRUCIAL"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"CONDITION_EXPRESSION_CHANGE","IF_STATEMENT: observableCommand.properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD)","METHOD: com.netflix.hystrix.HystrixCommand.toObservable()","com.netflix.hystrix.HystrixCommand.toObservable()","MEDIUM"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.decomposeException(Exception)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getExceptionFromThrowable(Throwable)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getExecutionSemaphore()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getLogMessagePrefix()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.recordExecutedCommand()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getFallbackSemaphore()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isRequestCachingEnabled()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.recordTotalExecutionTime(long)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getCacheKey()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.logger : Logger","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"RETURN_TYPE_CHANGE","PARAMETERIZED_TYPE: com.netflix.hystrix.HystrixRequestLog.getAllExecutedCommands(): Collection<HystrixExecutableInfo<?>>","METHOD: com.netflix.hystrix.HystrixRequestLog.getAllExecutedCommands()","com.netflix.hystrix.HystrixRequestLog.getAllExecutedCommands()","CRUCIAL"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"CONDITION_EXPRESSION_CHANGE","FOREACH_STATEMENT: HystrixExecutableInfo<?> command:allExecutedCommands","BODY: ","com.netflix.hystrix.HystrixRequestLog.getExecutedCommandsAsString()","MEDIUM"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: command: HystrixExecutableInfo<?>","PARAMETER: command","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(AbstractHystrixCommand<?>)","HIGH"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"DOC_UPDATE","JAVADOC: /**
     * History of {@link HystrixExecutableInfo} executed in this request.
     */","FIELD: com.netflix.hystrix.HystrixRequestLog.allExecutedCommands : LinkedBlockingQueue<HystrixExecutableInfo<?>>","com.netflix.hystrix.HystrixRequestLog.allExecutedCommands : LinkedBlockingQueue<AbstractHystrixCommand<?>>","NONE"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"ATTRIBUTE_TYPE_CHANGE","PARAMETERIZED_TYPE: LinkedBlockingQueue<HystrixExecutableInfo<?>>","FIELD: com.netflix.hystrix.HystrixRequestLog.allExecutedCommands : LinkedBlockingQueue<HystrixExecutableInfo<?>>","com.netflix.hystrix.HystrixRequestLog.allExecutedCommands : LinkedBlockingQueue<AbstractHystrixCommand<?>>","HIGH"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"RETURN_TYPE_CHANGE","PARAMETERIZED_TYPE: com.netflix.hystrix.exception.HystrixRuntimeException.getImplementingClass(): Class<? extends HystrixExecutable>","METHOD: com.netflix.hystrix.exception.HystrixRuntimeException.getImplementingClass()","com.netflix.hystrix.exception.HystrixRuntimeException.getImplementingClass()","CRUCIAL"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: commandClass: Class<? extends HystrixExecutable>","PARAMETER: commandClass","com.netflix.hystrix.exception.HystrixRuntimeException.HystrixRuntimeException(FailureType,Class<? extends AbstractHystrixCommand>,String,Exception,Throwable)","CRUCIAL"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: commandClass: Class<? extends HystrixExecutable>","PARAMETER: commandClass","com.netflix.hystrix.exception.HystrixRuntimeException.HystrixRuntimeException(FailureType,Class<? extends AbstractHystrixCommand>,String,Throwable,Throwable)","CRUCIAL"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"ATTRIBUTE_TYPE_CHANGE","PARAMETERIZED_TYPE: Class<? extends HystrixExecutable>","FIELD: com.netflix.hystrix.exception.HystrixRuntimeException.commandClass : Class<? extends HystrixExecutable>","com.netflix.hystrix.exception.HystrixRuntimeException.commandClass : Class<? extends AbstractHystrixCommand>","HIGH"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: commandInstance: HystrixExecutable<T>","PARAMETER: commandInstance","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onError(AbstractHystrixCommand<T>,FailureType,Exception)","CRUCIAL"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: commandInstance: HystrixExecutable<T>","PARAMETER: commandInstance","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onFallbackError(AbstractHystrixCommand<T>,Exception)","CRUCIAL"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: commandInstance: HystrixExecutable<T>","PARAMETER: commandInstance","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onFallbackSuccess(AbstractHystrixCommand<T>,T)","CRUCIAL"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: commandInstance: HystrixExecutable<T>","PARAMETER: commandInstance","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onRunError(AbstractHystrixCommand<T>,Exception)","CRUCIAL"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: commandInstance: HystrixExecutable<T>","PARAMETER: commandInstance","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onThreadComplete(AbstractHystrixCommand<T>)","CRUCIAL"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: commandInstance: HystrixExecutable<T>","PARAMETER: commandInstance","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onFallbackStart(AbstractHystrixCommand<T>)","CRUCIAL"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: commandInstance: HystrixExecutable<T>","PARAMETER: commandInstance","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onComplete(AbstractHystrixCommand<T>,T)","CRUCIAL"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: commandInstance: HystrixExecutable<T>","PARAMETER: commandInstance","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onRunSuccess(AbstractHystrixCommand<T>,T)","CRUCIAL"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: commandInstance: HystrixExecutable<T>","PARAMETER: commandInstance","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onThreadStart(AbstractHystrixCommand<T>)","CRUCIAL"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onRunStart(AbstractHystrixCommand<T>)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","LOW"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onStart(AbstractHystrixCommand<T>)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","LOW"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onRunStart(HystrixExecutable<T>)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","CRUCIAL"
345,d2bf17fecb3c222f9b8dd91488f134c71ab0f060,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onStart(HystrixExecutable<T>)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","CRUCIAL"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_DELETE","METHOD_INVOCATION: System.out.println(("command.getExecutionEvents(): " + command.getExecutionEvents()));","METHOD: com.netflix.hystrix.HystrixCollapserTest.testRequestCache1()","com.netflix.hystrix.HystrixCollapserTest.testRequestCache1()","MEDIUM"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_UPDATE","METHOD_INVOCATION: System.out.println(("*** simulated failed execution *** ==> " + Thread.currentThread()));","METHOD: com.netflix.hystrix.HystrixCommandTest.KnownFailureTestCommandWithoutFallback.run()","com.netflix.hystrix.HystrixCommandTest.KnownFailureTestCommandWithoutFallback.run()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_DELETE","METHOD_INVOCATION: System.out.println(("hook: " + command.builder.executionHook));","METHOD: com.netflix.hystrix.HystrixCommandTest.testExecutionHookSuccessfulCommand()","com.netflix.hystrix.HystrixCommandTest.testExecutionHookSuccessfulCommand()","MEDIUM"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_UPDATE","METHOD_INVOCATION: Thread.sleep(2000);","BODY: ","com.netflix.hystrix.HystrixCommandTest.testExecutionHookTimeoutWithFallback()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","METHOD_INVOCATION: System.out.println(("request log: " + HystrixRequestLog.getCurrentRequest()));","BODY: ","com.netflix.hystrix.HystrixCommandTest.testExecutionSuccess()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","IF_STATEMENT: (key != null)","METHOD: com.netflix.hystrix.HystrixCommandTest.cleanup()","com.netflix.hystrix.HystrixCommandTest.cleanup()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","THROW_STATEMENT: new IllegalStateException(("should be null but got: " + key));","THEN_STATEMENT: (key != null)","com.netflix.hystrix.HystrixCommandTest.cleanup()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_DELETE","METHOD_INVOCATION: System.out.println((("WARNING: Hystrix.getCurrentThreadExecutingCommand() should be null but got: " + key) + ". Can occur when calling queue() and never retrieving."));","THEN_STATEMENT: (key != null)","com.netflix.hystrix.HystrixCommandTest.cleanup()","MEDIUM"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_DELETE","IF_STATEMENT: (key != null)","METHOD: com.netflix.hystrix.HystrixCommandTest.cleanup()","com.netflix.hystrix.HystrixCommandTest.cleanup()","MEDIUM"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_UPDATE","VARIABLE_DECLARATION_STATEMENT: CommandWithCustomThreadPool c1 = new CommandWithCustomThreadPool(s1, pool, 500, HystrixCommandPropertiesTest.getUnitTestPropertiesSetter().withExecutionIsolationThreadTimeoutInMilliseconds(600));","METHOD: com.netflix.hystrix.HystrixCommandTest.testTimedOutCommandDoesNotExecute()","com.netflix.hystrix.HystrixCommandTest.testTimedOutCommandDoesNotExecute()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"DOC_DELETE","JAVADOC: /**
     * If it has been sitting in the queue, it should not execute if timed out by the time it hits the queue.
     */","METHOD: com.netflix.hystrix.HystrixCommandTest.testTimedOutCommandDoesNotExecute()","com.netflix.hystrix.HystrixCommandTest.testTimedOutCommandDoesNotExecute()","NONE"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_DELETE","METHOD_INVOCATION: System.out.println(("command.getExecutionTimeInMilliseconds(): " + command.getExecutionTimeInMilliseconds()));","CATCH_CLAUSE: Exception","com.netflix.hystrix.HystrixCommandTest.testRejectedThreadWithNoFallback()","MEDIUM"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_UPDATE","METHOD_INVOCATION: Thread.sleep(2000);","BODY: ","com.netflix.hystrix.HystrixCommandTest.testExecutionHookTimeoutWithoutFallback()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_UPDATE","ASSIGNMENT: o = o.doOnTerminate(new Action0() {
  public @Override void call() {
    Reference<TimerListener> tl = timeoutTimer.get();
    if ((tl != null))
        {
          tl.clear();
        }
    try
      {
        if (((invocationStartTime > 0) && (! isResponseRejected())))
            {
              recordTotalExecutionTime(invocationStartTime);
            }
        if ((endCurrentThreadExecutingCommand.get() != null))
            {
              endCurrentThreadExecutingCommand.get().call();
            }
      }
    finally
      {
        metrics.decrementConcurrentExecutionCount();
        isExecutionComplete.set(true);
      }
  }
});","METHOD: com.netflix.hystrix.HystrixObservableCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixObservableCommand.toObservable(Scheduler,boolean)","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","ASSIGNMENT: run = run.subscribeOn(threadPool.getScheduler());","THEN_STATEMENT: properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD)","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"COMMENT_DELETE","LINE_COMMENT: // the run() method is a user provided implementation so can throw instead of using Observable.onError
                // so we catch it here and turn it into Observable.error","CATCH_CLAUSE: Throwable","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","NONE"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_DELETE","ASSIGNMENT: run = Observable.create(new OnSubscribe<R>() {
  public @Override void call(Subscriber<? super R> s) {
    executionHook.onRunStart(_self);
    executionHook.onThreadStart(_self);
    if ((isCommandTimedOut.get() == TimedOutStatus.TIMED_OUT))
        {
          s.onError(new RuntimeException("timed out before executing run()"));
        }
    else
        {
          try
            {
              final Action0 endCurrentThread = Hystrix.startCurrentThreadExecutingCommand(getCommandKey());
              run().doOnTerminate(new Action0() {
  public @Override void call() {
    executionHook.onThreadComplete(_self);
    endCurrentThread.call();
  }
}).subscribe(s);
            }
          catch (Throwable t)
            {
              Observable.<R>error(t).subscribe(s);
            }
        }
  }
}).subscribeOn(threadPool.getScheduler());","THEN_STATEMENT: properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD)","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","MEDIUM"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"COMMENT_DELETE","LINE_COMMENT: // not timed out so execute","ELSE_STATEMENT: properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD)","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","NONE"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"COMMENT_DELETE","LINE_COMMENT: // TODO is this actually the end of the thread?","ELSE_STATEMENT: properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD)","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","NONE"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"COMMENT_DELETE","LINE_COMMENT: // semaphore isolated","ELSE_STATEMENT: properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD)","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","NONE"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD)","IF_STATEMENT: properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD)","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","MEDIUM"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"COMMENT_DELETE","LINE_COMMENT: // the command timed out in the wrapping thread so we will return immediately
                    // and not increment any of the counters below or other such logic","METHOD: com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","NONE"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_PARENT_CHANGE","METHOD_INVOCATION: executionHook.onRunStart(_self);","ELSE_STATEMENT: properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD)","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","MEDIUM"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_PARENT_CHANGE","TRY_STATEMENT: ","ELSE_STATEMENT: properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD)","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","MEDIUM"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"COMMENT_MOVE","LINE_COMMENT: // the command timed out in the wrapping thread so we will return immediately
                        // and not increment any of the counters below or other such logic","ELSE_STATEMENT: properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD)","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","NONE"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"COMMENT_MOVE","LINE_COMMENT: // the run() method is a user provided implementation so can throw instead of using Observable.onError
                            // so we catch it here and turn it into Observable.error","ELSE_STATEMENT: properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD)","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","NONE"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_UPDATE","METHOD_INVOCATION: executionHook.onRunStart(_self);","METHOD: com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"COMMENT_INSERT","BLOCK_COMMENT: /* this is a stateful object so can only be used once */","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","IF_STATEMENT: (! started.compareAndSet(false, true))","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"COMMENT_INSERT","BLOCK_COMMENT: /* try from cache first */","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","IF_STATEMENT: isRequestCachingEnabled()","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","VARIABLE_DECLARATION_STATEMENT: final HystrixCommand<R> _this = this;","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"COMMENT_INSERT","LINE_COMMENT: // create an Observable that will lazily execute when subscribed to","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","VARIABLE_DECLARATION_STATEMENT: Observable<R> o = Observable.create(new OnSubscribe<R>() {
  public @Override void call(Subscriber<? super R> observer) {
    try
      {
        invocationStartTime = System.currentTimeMillis();
        executionHook.onStart(_this);
        if ((! circuitBreaker.allowRequest()))
            {
              metrics.markShortCircuited();
              try
                {
                  observer.onNext(getFallbackOrThrowException(HystrixEventType.SHORT_CIRCUITED, FailureType.SHORTCIRCUIT, "short-circuited"));
                  observer.onCompleted();
                }
              catch (Exception e)
                {
                  observer.onError(e);
                }
            }
        else
            {
              try
                {
                  if (properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD))
                      {
                        subscribeWithThreadIsolation(observer);
                      }
                  else
                      {
                        subscribeWithSemaphoreIsolation(observer);
                      }
                }
              catch (RuntimeException e)
                {
                  observer.onError(e);
                }
            }
      }
    finally
      {
        recordExecutedCommand();
      }
  }
});","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"COMMENT_INSERT","BLOCK_COMMENT: /* used to track userThreadExecutionTime */","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"COMMENT_INSERT","LINE_COMMENT: // mark that we're starting execution on the ExecutionHook","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"COMMENT_INSERT","BLOCK_COMMENT: /* determine if we're allowed to execute */","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"COMMENT_INSERT","LINE_COMMENT: // record that we are returning a short-circuited fallback","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"COMMENT_INSERT","LINE_COMMENT: // short-circuit and go directly to fallback (or throw an exception if no fallback implemented)","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"COMMENT_INSERT","BLOCK_COMMENT: /* not short-circuited so proceed with queuing the execution */","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","IF_STATEMENT: properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD)","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"COMMENT_INSERT","LINE_COMMENT: // error handling","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","ASSIGNMENT: o = o.onErrorResumeNext(new Func1<Throwable, Observable<R>>() {
  public @Override Observable<R> call(Throwable e) {
    metrics.markExceptionThrown();
    return Observable.error(e);
  }
});","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"COMMENT_INSERT","LINE_COMMENT: // count that we are throwing an exception and re-throw it","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"COMMENT_INSERT","LINE_COMMENT: // we want to hand off work to a different scheduler so we don't tie up the Hystrix thread","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","IF_STATEMENT: (! Schedulers.immediate().equals(observeOn))","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","ASSIGNMENT: o = o.finallyDo(new Action0() {
  public @Override void call() {
    Reference<TimerListener> tl = timeoutTimer.get();
    if ((tl != null))
        {
          tl.clear();
        }
  }
});","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"COMMENT_INSERT","LINE_COMMENT: // put in cache","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","IF_STATEMENT: isRequestCachingEnabled()","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"ALTERNATIVE_PART_INSERT","ELSE_STATEMENT: isRequestCachingEnabled()","IF_STATEMENT: isRequestCachingEnabled()","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","THROW_STATEMENT: new IllegalStateException("This instance can only be executed once. Please instantiate a new instance.");","THEN_STATEMENT: (! started.compareAndSet(false, true))","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","VARIABLE_DECLARATION_STATEMENT: Observable<R> fromCache = requestCache.get(getCacheKey());","THEN_STATEMENT: isRequestCachingEnabled()","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","IF_STATEMENT: (fromCache != null)","THEN_STATEMENT: isRequestCachingEnabled()","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"COMMENT_INSERT","LINE_COMMENT: // wrap for timeout support","THEN_STATEMENT: properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","ASSIGNMENT: o = o.lift(new TimeoutOperator<R>(_this, performAsyncTimeout));","THEN_STATEMENT: properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"COMMENT_INSERT","LINE_COMMENT: // don't waste overhead if it's the 'immediate' scheduler
            // otherwise we'll 'observeOn' and wrap with the HystrixContextScheduler
            // to copy state across threads (if threads are involved)","THEN_STATEMENT: (! Schedulers.immediate().equals(observeOn))","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","ASSIGNMENT: o = o.observeOn(new HystrixContextScheduler(concurrencyStrategy, observeOn));","THEN_STATEMENT: (! Schedulers.immediate().equals(observeOn))","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"COMMENT_INSERT","LINE_COMMENT: // wrap it for caching","THEN_STATEMENT: isRequestCachingEnabled()","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","ASSIGNMENT: o = new CachedObservableOriginal<R>(o.cache(), this);","THEN_STATEMENT: isRequestCachingEnabled()","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","VARIABLE_DECLARATION_STATEMENT: Observable<R> fromCache = requestCache.putIfAbsent(getCacheKey(), o);","THEN_STATEMENT: isRequestCachingEnabled()","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","IF_STATEMENT: (fromCache != null)","THEN_STATEMENT: isRequestCachingEnabled()","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"COMMENT_INSERT","LINE_COMMENT: // we just created an ObservableCommand so we cast and return it","THEN_STATEMENT: isRequestCachingEnabled()","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","RETURN_STATEMENT: (ObservableCommand<R>) o;","THEN_STATEMENT: isRequestCachingEnabled()","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"COMMENT_INSERT","LINE_COMMENT: // no request caching so a simple wrapper just to pass 'this' along with the Observable","ELSE_STATEMENT: isRequestCachingEnabled()","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"COMMENT_INSERT","BLOCK_COMMENT: /* mark that we received this response from cache */","THEN_STATEMENT: (fromCache != null)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","METHOD_INVOCATION: metrics.markResponseFromCache();","THEN_STATEMENT: (fromCache != null)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","RETURN_STATEMENT: new CachedObservableResponse<R>((CachedObservableOriginal<R>) fromCache, this);","THEN_STATEMENT: (fromCache != null)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"COMMENT_INSERT","LINE_COMMENT: // another thread beat us so we'll use the cached value instead","THEN_STATEMENT: (fromCache != null)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","NONE"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","ASSIGNMENT: o = new CachedObservableResponse<R>((CachedObservableOriginal<R>) fromCache, this);","THEN_STATEMENT: (fromCache != null)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_PARENT_CHANGE","RETURN_STATEMENT: new ObservableCommand<R>(observableCommand.toObservable(), this);","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_UPDATE","RETURN_STATEMENT: new ObservableCommand<R>(observableCommand.toObservable(), this);","ELSE_STATEMENT: isRequestCachingEnabled()","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_DELETE","ASSIGNMENT: this.observableCommand = new HystrixCommandFromObservableCommand<R>(this);","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"METHOD_RENAMING","METHOD: com.netflix.hystrix.HystrixCommand.recordExecutedCommand()","METHOD: com.netflix.hystrix.HystrixCommand.recordExecutedCommand()","com.netflix.hystrix.HystrixCommand.executeCommand()","CRUCIAL"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"DOC_INSERT","JAVADOC: /**
     * Executes the command and marks success/failure on the circuit-breaker and calls <code>getFallback</code> if a failure occurs.
     * <p>
     * This does NOT use the circuit-breaker to determine if the command should be executed, use <code>execute()</code> for that. This method will ALWAYS attempt to execute the method.
     * 
     * @return R
     */","METHOD: com.netflix.hystrix.HystrixCommand.recordExecutedCommand()","com.netflix.hystrix.HystrixCommand.executeCommand()","NONE"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: protected","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.executeCommand()","HIGH"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"RETURN_TYPE_INSERT","SINGLE_TYPE: com.netflix.hystrix.HystrixCommand.executeCommand(): R","METHOD: com.netflix.hystrix.HystrixCommand.recordExecutedCommand()","com.netflix.hystrix.HystrixCommand.executeCommand()","CRUCIAL"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"COMMENT_INSERT","BLOCK_COMMENT: /* capture start time for logging */","METHOD: com.netflix.hystrix.HystrixCommand.recordExecutedCommand()","com.netflix.hystrix.HystrixCommand.executeCommand()","NONE"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","VARIABLE_DECLARATION_STATEMENT: long startTime = System.currentTimeMillis();","METHOD: com.netflix.hystrix.HystrixCommand.recordExecutedCommand()","com.netflix.hystrix.HystrixCommand.executeCommand()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"COMMENT_INSERT","LINE_COMMENT: // allow tracking how many concurrent threads are executing","METHOD: com.netflix.hystrix.HystrixCommand.recordExecutedCommand()","com.netflix.hystrix.HystrixCommand.executeCommand()","NONE"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","METHOD_INVOCATION: metrics.incrementConcurrentExecutionCount();","METHOD: com.netflix.hystrix.HystrixCommand.recordExecutedCommand()","com.netflix.hystrix.HystrixCommand.executeCommand()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","TRY_STATEMENT: ","METHOD: com.netflix.hystrix.HystrixCommand.recordExecutedCommand()","com.netflix.hystrix.HystrixCommand.executeCommand()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","METHOD_INVOCATION: executionHook.onRunStart(this);","BODY: ","com.netflix.hystrix.HystrixCommand.executeCommand()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","VARIABLE_DECLARATION_STATEMENT: R response = executionHook.onRunSuccess(this, run());","BODY: ","com.netflix.hystrix.HystrixCommand.executeCommand()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","VARIABLE_DECLARATION_STATEMENT: long duration = (System.currentTimeMillis() - startTime);","BODY: ","com.netflix.hystrix.HystrixCommand.executeCommand()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","METHOD_INVOCATION: metrics.addCommandExecutionTime(duration);","BODY: ","com.netflix.hystrix.HystrixCommand.executeCommand()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","IF_STATEMENT: (isCommandTimedOut.get() == TimedOutStatus.TIMED_OUT)","BODY: ","com.netflix.hystrix.HystrixCommand.executeCommand()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","CATCH_CLAUSE: HystrixBadRequestException","CATCH_CLAUSES: ","com.netflix.hystrix.HystrixCommand.executeCommand()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","CATCH_CLAUSE: Throwable","CATCH_CLAUSES: ","com.netflix.hystrix.HystrixCommand.executeCommand()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","METHOD_INVOCATION: metrics.decrementConcurrentExecutionCount();","FINALLY: ","com.netflix.hystrix.HystrixCommand.executeCommand()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"COMMENT_INSERT","LINE_COMMENT: // record that we're completed","FINALLY: ","com.netflix.hystrix.HystrixCommand.executeCommand()","NONE"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","METHOD_INVOCATION: isExecutionComplete.set(true);","FINALLY: ","com.netflix.hystrix.HystrixCommand.executeCommand()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"ALTERNATIVE_PART_INSERT","ELSE_STATEMENT: (isCommandTimedOut.get() == TimedOutStatus.TIMED_OUT)","IF_STATEMENT: (isCommandTimedOut.get() == TimedOutStatus.TIMED_OUT)","com.netflix.hystrix.HystrixCommand.executeCommand()","MEDIUM"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","TRY_STATEMENT: ","CATCH_CLAUSE: HystrixBadRequestException","com.netflix.hystrix.HystrixCommand.executeCommand()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"COMMENT_INSERT","BLOCK_COMMENT: /*
             * HystrixBadRequestException is treated differently and allowed to propagate without any stats tracking or fallback logic
             */","CATCH_CLAUSE: HystrixBadRequestException","com.netflix.hystrix.HystrixCommand.executeCommand()","NONE"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","THROW_STATEMENT: e;","CATCH_CLAUSE: HystrixBadRequestException","com.netflix.hystrix.HystrixCommand.executeCommand()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","VARIABLE_DECLARATION_STATEMENT: Exception e = null;","CATCH_CLAUSE: Throwable","com.netflix.hystrix.HystrixCommand.executeCommand()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","IF_STATEMENT: (t instanceof Exception)","CATCH_CLAUSE: Throwable","com.netflix.hystrix.HystrixCommand.executeCommand()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","TRY_STATEMENT: ","CATCH_CLAUSE: Throwable","com.netflix.hystrix.HystrixCommand.executeCommand()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","IF_STATEMENT: (isCommandTimedOut.get() == TimedOutStatus.TIMED_OUT)","CATCH_CLAUSE: Throwable","com.netflix.hystrix.HystrixCommand.executeCommand()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"COMMENT_INSERT","LINE_COMMENT: // report failure","CATCH_CLAUSE: Throwable","com.netflix.hystrix.HystrixCommand.executeCommand()","NONE"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","METHOD_INVOCATION: metrics.markFailure((System.currentTimeMillis() - startTime));","CATCH_CLAUSE: Throwable","com.netflix.hystrix.HystrixCommand.executeCommand()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"COMMENT_INSERT","LINE_COMMENT: // record the exception","CATCH_CLAUSE: Throwable","com.netflix.hystrix.HystrixCommand.executeCommand()","NONE"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","ASSIGNMENT: executionResult = executionResult.setException(e);","CATCH_CLAUSE: Throwable","com.netflix.hystrix.HystrixCommand.executeCommand()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","RETURN_STATEMENT: getFallbackOrThrowException(HystrixEventType.FAILURE, FailureType.COMMAND_EXCEPTION, "failed", e);","CATCH_CLAUSE: Throwable","com.netflix.hystrix.HystrixCommand.executeCommand()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"COMMENT_INSERT","LINE_COMMENT: // the command timed out in the wrapping thread so we will return immediately
                // and not increment any of the counters below or other such logic","THEN_STATEMENT: (isCommandTimedOut.get() == TimedOutStatus.TIMED_OUT)","com.netflix.hystrix.HystrixCommand.executeCommand()","NONE"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","RETURN_STATEMENT: null;","THEN_STATEMENT: (isCommandTimedOut.get() == TimedOutStatus.TIMED_OUT)","com.netflix.hystrix.HystrixCommand.executeCommand()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"COMMENT_INSERT","LINE_COMMENT: // report success","ELSE_STATEMENT: (isCommandTimedOut.get() == TimedOutStatus.TIMED_OUT)","com.netflix.hystrix.HystrixCommand.executeCommand()","NONE"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","ASSIGNMENT: executionResult = executionResult.addEvents(HystrixEventType.SUCCESS);","ELSE_STATEMENT: (isCommandTimedOut.get() == TimedOutStatus.TIMED_OUT)","com.netflix.hystrix.HystrixCommand.executeCommand()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","METHOD_INVOCATION: metrics.markSuccess(duration);","ELSE_STATEMENT: (isCommandTimedOut.get() == TimedOutStatus.TIMED_OUT)","com.netflix.hystrix.HystrixCommand.executeCommand()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","METHOD_INVOCATION: circuitBreaker.markSuccess();","ELSE_STATEMENT: (isCommandTimedOut.get() == TimedOutStatus.TIMED_OUT)","com.netflix.hystrix.HystrixCommand.executeCommand()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","METHOD_INVOCATION: eventNotifier.markCommandExecution(getCommandKey(), properties.executionIsolationStrategy().get(), (int) duration, executionResult.events);","ELSE_STATEMENT: (isCommandTimedOut.get() == TimedOutStatus.TIMED_OUT)","com.netflix.hystrix.HystrixCommand.executeCommand()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","RETURN_STATEMENT: response;","ELSE_STATEMENT: (isCommandTimedOut.get() == TimedOutStatus.TIMED_OUT)","com.netflix.hystrix.HystrixCommand.executeCommand()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"ALTERNATIVE_PART_INSERT","ELSE_STATEMENT: (t instanceof Exception)","IF_STATEMENT: (t instanceof Exception)","com.netflix.hystrix.HystrixCommand.executeCommand()","MEDIUM"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"ALTERNATIVE_PART_INSERT","ELSE_STATEMENT: (isCommandTimedOut.get() == TimedOutStatus.TIMED_OUT)","IF_STATEMENT: (isCommandTimedOut.get() == TimedOutStatus.TIMED_OUT)","com.netflix.hystrix.HystrixCommand.executeCommand()","MEDIUM"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","VARIABLE_DECLARATION_STATEMENT: Exception decorated = executionHook.onRunError(this, e);","BODY: ","com.netflix.hystrix.HystrixCommand.executeCommand()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","IF_STATEMENT: (decorated instanceof HystrixBadRequestException)","BODY: ","com.netflix.hystrix.HystrixCommand.executeCommand()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","CATCH_CLAUSE: Exception","CATCH_CLAUSES: ","com.netflix.hystrix.HystrixCommand.executeCommand()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","ASSIGNMENT: e = (Exception) t;","THEN_STATEMENT: (t instanceof Exception)","com.netflix.hystrix.HystrixCommand.executeCommand()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"COMMENT_INSERT","LINE_COMMENT: // Hystrix 1.x uses Exception, not Throwable so to prevent a breaking change Throwable will be wrapped in Exception","ELSE_STATEMENT: (t instanceof Exception)","com.netflix.hystrix.HystrixCommand.executeCommand()","NONE"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","ASSIGNMENT: e = new Exception("Throwable caught while executing.", t);","ELSE_STATEMENT: (t instanceof Exception)","com.netflix.hystrix.HystrixCommand.executeCommand()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","ASSIGNMENT: e = executionHook.onRunError(this, e);","BODY: ","com.netflix.hystrix.HystrixCommand.executeCommand()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","CATCH_CLAUSE: Exception","CATCH_CLAUSES: ","com.netflix.hystrix.HystrixCommand.executeCommand()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"COMMENT_INSERT","LINE_COMMENT: // http://jira/browse/API-4905 HystrixCommand: Error/Timeout Double-count if both occur
                // this means we have already timed out then we don't count this error stat and we just return
                // as this means the user-thread has already returned, we've already done fallback logic
                // and we've already counted the timeout stat","THEN_STATEMENT: (isCommandTimedOut.get() == TimedOutStatus.TIMED_OUT)","com.netflix.hystrix.HystrixCommand.executeCommand()","NONE"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","METHOD_INVOCATION: logger.debug("Error executing HystrixCommand.run() [TimedOut]. Proceeding to fallback logic ...", e);","THEN_STATEMENT: (isCommandTimedOut.get() == TimedOutStatus.TIMED_OUT)","com.netflix.hystrix.HystrixCommand.executeCommand()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","RETURN_STATEMENT: null;","THEN_STATEMENT: (isCommandTimedOut.get() == TimedOutStatus.TIMED_OUT)","com.netflix.hystrix.HystrixCommand.executeCommand()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","METHOD_INVOCATION: logger.debug("Error executing HystrixCommand.run(). Proceeding to fallback logic ...", e);","ELSE_STATEMENT: (isCommandTimedOut.get() == TimedOutStatus.TIMED_OUT)","com.netflix.hystrix.HystrixCommand.executeCommand()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"ALTERNATIVE_PART_INSERT","ELSE_STATEMENT: (decorated instanceof HystrixBadRequestException)","IF_STATEMENT: (decorated instanceof HystrixBadRequestException)","com.netflix.hystrix.HystrixCommand.executeCommand()","MEDIUM"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","METHOD_INVOCATION: logger.warn("Error calling ExecutionHook.onRunError", hookException);","CATCH_CLAUSE: Exception","com.netflix.hystrix.HystrixCommand.executeCommand()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","METHOD_INVOCATION: logger.warn("Error calling ExecutionHook.endRunFailure", hookException);","CATCH_CLAUSE: Exception","com.netflix.hystrix.HystrixCommand.executeCommand()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","ASSIGNMENT: e = (HystrixBadRequestException) decorated;","THEN_STATEMENT: (decorated instanceof HystrixBadRequestException)","com.netflix.hystrix.HystrixCommand.executeCommand()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_INSERT","METHOD_INVOCATION: logger.warn("ExecutionHook.onRunError returned an exception that was not an instance of HystrixBadRequestException so will be ignored.", decorated);","ELSE_STATEMENT: (decorated instanceof HystrixBadRequestException)","com.netflix.hystrix.HystrixCommand.executeCommand()","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_DELETE","METHOD_INVOCATION: observableCommand.recordExecutedCommand();","METHOD: com.netflix.hystrix.HystrixCommand.recordExecutedCommand()","com.netflix.hystrix.HystrixCommand.executeCommand()","MEDIUM"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.subscribeWithThreadIsolation(Subscriber<? super R>)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getFallbackOrThrowException(HystrixEventType,FailureType,String,Exception)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getFallbackOrThrowException(HystrixEventType,FailureType,String)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.subscribeWithSemaphoreIsolation(Subscriber<? super R>)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getFallbackWithProtection()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getProperties()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.execute()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getCircuitBreaker()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getThreadPoolKey()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isResponseShortCircuited()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getFailedExecutionException()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isResponseFromCache()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getExecutionSemaphore()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isExecutionComplete()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.markAsCollapsedCommand(int)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.queue()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getFallbackSemaphore()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isSuccessfulExecution()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getExecutionTimeInMilliseconds()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.observe()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isCircuitBreakerOpen()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getCommandKey()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.decomposeException(Exception)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isResponseRejected()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getExceptionFromThrowable(Throwable)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getExecutionEvents()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isFailedExecution()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getLogMessagePrefix()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isRequestCachingEnabled()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isExecutedInThread()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getMetrics()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getCommandGroup()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isResponseFromFallback()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isResponseTimedOut()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.recordTotalExecutionTime(long)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.observableCommand : HystrixCommandFromObservableCommand<R>","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.TimeoutOperator","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.HystrixCommandFromObservableCommand","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_DELETE","VARIABLE_DECLARATION_STATEMENT: @SuppressWarnings("rawtypes") HystrixCommand<?> _c = (HystrixCommand.HystrixCommandFromObservableCommand) command.getOriginal();","THEN_STATEMENT: (command instanceof HystrixCommand.HystrixCommandFromObservableCommand)","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(AbstractHystrixCommand<?>)","MEDIUM"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"CONDITION_EXPRESSION_CHANGE","IF_STATEMENT: (command instanceof HystrixCommand.HystrixCommandFromObservableCommand)","METHOD: com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(AbstractHystrixCommand<?>)","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(AbstractHystrixCommand<?>)","MEDIUM"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"CONDITION_EXPRESSION_CHANGE","IF_STATEMENT: (! executedCommands.offer(_c))","THEN_STATEMENT: (command instanceof HystrixCommand.HystrixCommandFromObservableCommand)","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(AbstractHystrixCommand<?>)","MEDIUM"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"DOC_UPDATE","JAVADOC: /**
 * Parent HystrixCommand class that holds the common functionality needed by extending classeses.
 * 
 * @param <R>
 */","CLASS: com.netflix.hystrix.AbstractHystrixCommand","com.netflix.hystrix.AbstractHystrixCommand","NONE"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_DELETE","ASSIGNMENT: this.commandPropertiesDefaults = commandPropertiesDefaults;","METHOD: com.netflix.hystrix.AbstractHystrixCommand.AbstractHystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.AbstractHystrixCommand.AbstractHystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_DELETE","ASSIGNMENT: this.threadPoolPropertiesDefaults = threadPoolPropertiesDefaults;","METHOD: com.netflix.hystrix.AbstractHystrixCommand.AbstractHystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.AbstractHystrixCommand.AbstractHystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_DELETE","ASSIGNMENT: this.propertiesStrategy = propertiesStrategy;","METHOD: com.netflix.hystrix.AbstractHystrixCommand.AbstractHystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.AbstractHystrixCommand.AbstractHystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_DELETE","ASSIGNMENT: this.executionHook = new ExecutionHookDeprecationWrapper(executionHook);","ELSE_STATEMENT: (executionHook instanceof ExecutionHookDeprecationWrapper)","com.netflix.hystrix.AbstractHystrixCommand.AbstractHystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: (executionHook instanceof ExecutionHookDeprecationWrapper)","IF_STATEMENT: (executionHook instanceof ExecutionHookDeprecationWrapper)","com.netflix.hystrix.AbstractHystrixCommand.AbstractHystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_DELETE","IF_STATEMENT: (executionHook instanceof ExecutionHookDeprecationWrapper)","ELSE_STATEMENT: (executionHook == null)","com.netflix.hystrix.AbstractHystrixCommand.AbstractHystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_PARENT_CHANGE","ASSIGNMENT: this.executionHook = executionHook;","THEN_STATEMENT: (executionHook instanceof ExecutionHookDeprecationWrapper)","com.netflix.hystrix.AbstractHystrixCommand.AbstractHystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"STATEMENT_UPDATE","ASSIGNMENT: this.executionHook = new ExecutionHookDeprecationWrapper(HystrixPlugins.getInstance().getCommandExecutionHook());","THEN_STATEMENT: (executionHook == null)","com.netflix.hystrix.AbstractHystrixCommand.AbstractHystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.AbstractHystrixCommand.threadPoolPropertiesDefaults : HystrixThreadPoolProperties.Setter","CLASS: com.netflix.hystrix.AbstractHystrixCommand","com.netflix.hystrix.AbstractHystrixCommand","CRUCIAL"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.AbstractHystrixCommand.commandPropertiesDefaults : HystrixCommandProperties.Setter","CLASS: com.netflix.hystrix.AbstractHystrixCommand","com.netflix.hystrix.AbstractHystrixCommand","CRUCIAL"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.AbstractHystrixCommand.propertiesStrategy : HystrixPropertiesStrategy","CLASS: com.netflix.hystrix.AbstractHystrixCommand","com.netflix.hystrix.AbstractHystrixCommand","CRUCIAL"
346,e0826d3549c00a8c472893c2c7d316302208c45d,"REMOVED_CLASS","CLASS: com.netflix.hystrix.AbstractHystrixCommand.ExecutionHookDeprecationWrapper","CLASS: com.netflix.hystrix.AbstractHystrixCommand","com.netflix.hystrix.AbstractHystrixCommand","HIGH"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testRejectionWithFallbackRequestContextWithThreadIsolatedSynchronousObservable()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testRejectionWithFallbackRequestContextWithThreadIsolatedAsynchronousObservableAndCapturedContextScheduler()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testFailureWithFallbackRequestContextWithSemaphoreIsolatedAsynchronousObservable()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testTimeoutWithFallbackRequestContextWithSemaphoreIsolatedAsynchronousObservableAndCapturedContextScheduler()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testGracefulFailureRequestContextWithThreadIsolatedAsynchronousObservableAndCapturedContextScheduler()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testRequestContextOnShortCircuitedWithFallback(ExecutionIsolationStrategy,Scheduler)","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","HIGH"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testShortCircuitedWithFallbackRequestContextWithThreadIsolatedSynchronousObservable()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testRequestContextOnBadFailure(ExecutionIsolationStrategy,Scheduler)","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","HIGH"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testRequestContextOnSuccess(ExecutionIsolationStrategy,Scheduler)","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","HIGH"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testGracefulFailureRequestContextWithThreadIsolatedAsynchronousObservable()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testBadFailureRequestContextWithThreadIsolatedSynchronousObservable()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testTimeoutWithFallbackRequestContextWithSemaphoreIsolatedAsynchronousObservable()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testRequestContextOnTimeout(ExecutionIsolationStrategy,Scheduler)","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","HIGH"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testSuccessfulRequestContextWithSemaphoreIsolatedAsynchronousObservable()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testFailureWithFallbackRequestContextWithSemaphoreIsolatedAsynchronousObservableAndCapturedContextScheduler()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testShortCircuitedWithFallbackRequestContextWithSemaphoreIsolatedSynchronousObservable()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testTimeoutRequestContextWithSemaphoreIsolatedAsynchronousObservable()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testRequestContextOnRejectionWithFallback(ExecutionIsolationStrategy,Scheduler)","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","HIGH"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testFailureWithFallbackRequestContextWithThreadIsolatedSynchronousObservable()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testRequestContextOnFailureWithFallback(ExecutionIsolationStrategy,Scheduler)","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","HIGH"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testSuccessfulRequestContextWithSemaphoreIsolatedSynchronousObservable()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testGracefulFailureRequestContextWithSemaphoreIsolatedAsynchronousObservableAndCapturedContextScheduler()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testGracefulFailureRequestContextWithThreadIsolatedSynchronousObservable()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testTimeoutRequestContextWithThreadIsolatedAsynchronousObservableAndCapturedContextScheduler()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testGracefulFailureRequestContextWithSemaphoreIsolatedAsynchronousObservable()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testTimeoutRequestContextWithSemaphoreIsolatedSynchronousObservable()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testBadFailureRequestContextWithThreadIsolatedAsynchronousObservable()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testSuccessfulRequestContextWithThreadIsolatedAsynchronousObservable()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testRejectionWithFallbackRequestContextWithThreadIsolatedAsynchronousObservable()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testShortCircuitedWithFallbackRequestContextWithThreadIsolatedAsynchronousObservableAndCapturedContextScheduler()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testRequestContextOnTimeoutWithFallback(ExecutionIsolationStrategy,Scheduler)","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","HIGH"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testShortCircuitedWithFallbackRequestContextWithSemaphoreIsolatedAsynchronousObservable()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testTimeoutRequestContextWithSemaphoreIsolatedAsynchronousObservableAndCapturedContextScheduler()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testRequestContextOnGracefulFailure(ExecutionIsolationStrategy,Scheduler)","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","HIGH"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testGracefulFailureRequestContextWithSemaphoreIsolatedSynchronousObservable()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testFailureWithFallbackRequestContextWithSemaphoreIsolatedSynchronousObservable()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testBadFailureRequestContextWithSemaphoreIsolatedAsynchronousObservable()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testBadFailureRequestContextWithThreadIsolatedAsynchronousObservableAndCapturedContextScheduler()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testShortCircuitedWithFallbackRequestContextWithSemaphoreIsolatedAsynchronousObservableAndCapturedContextScheduler()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testRejectionWithFallbackRequestContextWithSemaphoreIsolatedAsynchronousObservable()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testShortCircuitedWithFallbackRequestContextWithThreadIsolatedAsynchronousObservable()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testFailureWithFallbackRequestContextWithThreadIsolatedAsynchronousObservableAndCapturedContextScheduler()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testFailureWithFallbackRequestContextWithThreadIsolatedAsynchronousObservable()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testTimeoutWithFallbackRequestContextWithThreadIsolatedAsynchronousObservable()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testTimeoutWithFallbackRequestContextWithThreadIsolatedAsynchronousObservableAndCapturedContextScheduler()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testSuccessfulRequestContextWithThreadIsolatedSynchronousObservable()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testTimeoutRequestContextWithThreadIsolatedAsynchronousObservable()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testTimeoutWithFallbackRequestContextWithSemaphoreIsolatedSynchronousObservable()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testRejectionWithFallbackRequestContextWithSemaphoreIsolatedAsynchronousObservableAndCapturedContextScheduler()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testTimeoutWithFallbackRequestContextWithThreadIsolatedSynchronousObservable()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testSuccessfulRequestContextWithThreadIsolatedAsynchronousObservableAndCapturedContextScheduler()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testRejectionWithFallbackRequestContextWithSemaphoreIsolatedSynchronousObservable()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testBadFailureRequestContextWithSemaphoreIsolatedSynchronousObservable()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testBadFailureRequestContextWithSemaphoreIsolatedAsynchronousObservableAndCapturedContextScheduler()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testTimeoutRequestContextWithThreadIsolatedSynchronousObservable()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testSuccessfulRequestContextWithSemaphoreIsolatedAsynchronousObservableAndCapturedContextScheduler()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixObservableCommandTest.RequestContextTestResults","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","HIGH"
347,94c708f7673297783e1fd8143ba007510e2408fa,"STATEMENT_DELETE","VARIABLE_DECLARATION_STATEMENT: final HystrixRequestContext currentRequestContext = HystrixRequestContext.getContextForCurrentThread();","METHOD: com.netflix.hystrix.HystrixObservableCommand.getFallbackOrThrowException(HystrixEventType,FailureType,String,Exception)","com.netflix.hystrix.HystrixObservableCommand.getFallbackOrThrowException(HystrixEventType,FailureType,String,Exception)","MEDIUM"
347,94c708f7673297783e1fd8143ba007510e2408fa,"STATEMENT_UPDATE","RETURN_STATEMENT: getFallbackWithProtection().map(new Func1<R, R>() {
  public @Override R call(R t1) {
    return executionHook.onComplete(_cmd, t1);
  }
}).doOnCompleted(new Action0() {
  public @Override void call() {
    metrics.markFallbackSuccess();
    executionResult = executionResult.addEvents(HystrixEventType.FALLBACK_SUCCESS);
  }
}).onErrorResumeNext(new Func1<Throwable, Observable<R>>() {
  public @Override Observable<R> call(Throwable t) {
    Exception e = originalException;
    Exception fe = getExceptionFromThrowable(t);
    if ((fe instanceof UnsupportedOperationException))
        {
          logger.debug("No fallback for HystrixCommand. ", fe);
          try
            {
              e = executionHook.onError(_cmd, failureType, e);
            }
          catch (Exception hookException)
            {
              logger.warn("Error calling ExecutionHook.onError", hookException);
            }
          return Observable.error(new HystrixRuntimeException(failureType, _cmd.getClass(), (((getLogMessagePrefix() + " ") + message) + " and no fallback available."), e, fe));
        }
    else
        {
          logger.debug((("HystrixCommand execution " + failureType.name()) + " and fallback retrieval failed."), fe);
          metrics.markFallbackFailure();
          executionResult = executionResult.addEvents(HystrixEventType.FALLBACK_FAILURE);
          try
            {
              e = executionHook.onError(_cmd, failureType, e);
            }
          catch (Exception hookException)
            {
              logger.warn("Error calling ExecutionHook.onError", hookException);
            }
          return Observable.error(new HystrixRuntimeException(failureType, _cmd.getClass(), (((getLogMessagePrefix() + " ") + message) + " and failed retrieving fallback."), e, fe));
        }
  }
}).doOnTerminate(new Action0() {
  public @Override void call() {
    isExecutionComplete.set(true);
  }
}).doOnEach(new Action1<Notification<? super R>>() {
  public @Override void call(Notification<? super R> n) {
    setRequestContextIfNeeded(currentRequestContext);
  }
});","THEN_STATEMENT: properties.fallbackEnabled().get()","com.netflix.hystrix.HystrixObservableCommand.getFallbackOrThrowException(HystrixEventType,FailureType,String,Exception)","LOW"
347,94c708f7673297783e1fd8143ba007510e2408fa,"STATEMENT_UPDATE","RETURN_STATEMENT: Observable.<R>error(new HystrixRuntimeException(failureType, this.getClass(), (((getLogMessagePrefix() + " ") + message) + " and fallback disabled."), e, null)).doOnTerminate(new Action0() {
  public @Override void call() {
    isExecutionComplete.set(true);
  }
}).doOnEach(new Action1<Notification<? super R>>() {
  public @Override void call(Notification<? super R> n) {
    setRequestContextIfNeeded(currentRequestContext);
  }
});","ELSE_STATEMENT: properties.fallbackEnabled().get()","com.netflix.hystrix.HystrixObservableCommand.getFallbackOrThrowException(HystrixEventType,FailureType,String,Exception)","LOW"
347,94c708f7673297783e1fd8143ba007510e2408fa,"STATEMENT_DELETE","VARIABLE_DECLARATION_STATEMENT: final HystrixRequestContext currentRequestContext = HystrixRequestContext.getContextForCurrentThread();","METHOD: com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","MEDIUM"
347,94c708f7673297783e1fd8143ba007510e2408fa,"COMMENT_DELETE","LINE_COMMENT: // setting again as the fallback could have lost the context","METHOD: com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","NONE"
347,94c708f7673297783e1fd8143ba007510e2408fa,"STATEMENT_UPDATE","ASSIGNMENT: run = run.doOnEach(new Action1<Notification<? super R>>() {
  public @Override void call(Notification<? super R> n) {
    setRequestContextIfNeeded(currentRequestContext);
  }
}).map(new Func1<R, R>() {
  public @Override R call(R t1) {
    return executionHook.onRunSuccess(_cmd, t1);
  }
}).doOnCompleted(new Action0() {
  public @Override void call() {
    if ((isCommandTimedOut.get() == TimedOutStatus.TIMED_OUT))
        {
        }
    else
        {
          long duration = (System.currentTimeMillis() - invocationStartTime);
          metrics.addCommandExecutionTime(duration);
          executionResult = executionResult.addEvents(HystrixEventType.SUCCESS);
          metrics.markSuccess(duration);
          circuitBreaker.markSuccess();
          eventNotifier.markCommandExecution(getCommandKey(), properties.executionIsolationStrategy().get(), (int) duration, executionResult.events);
        }
  }
}).onErrorResumeNext(new Func1<Throwable, Observable<R>>() {
  public @Override Observable<R> call(Throwable t) {
    Exception e = getExceptionFromThrowable(t);
    if ((e instanceof RejectedExecutionException))
        {
          metrics.markThreadPoolRejection();
          return getFallbackOrThrowException(HystrixEventType.THREAD_POOL_REJECTED, FailureType.REJECTED_THREAD_EXECUTION, "could not be queued for execution", e);
        }
    else
        if ((t instanceof HystrixBadRequestException))
            {
              try
                {
                  Exception decorated = executionHook.onRunError(_self, (Exception) t);
                  if ((decorated instanceof HystrixBadRequestException))
                      {
                        t = (HystrixBadRequestException) decorated;
                      }
                  else
                      {
                        logger.warn("ExecutionHook.onRunError returned an exception that was not an instance of HystrixBadRequestException so will be ignored.", decorated);
                      }
                }
              catch (Exception hookException)
                {
                  logger.warn("Error calling ExecutionHook.onRunError", hookException);
                }
              return Observable.error(t);
            }
        else
            {
              try
                {
                  e = executionHook.onRunError(_self, e);
                }
              catch (Exception hookException)
                {
                  logger.warn("Error calling ExecutionHook.endRunFailure", hookException);
                }
              if ((isCommandTimedOut.get() == TimedOutStatus.TIMED_OUT))
                  {
                    logger.debug("Error executing HystrixCommand.run() [TimedOut]. Proceeding to fallback logic ...", e);
                    return Observable.empty();
                  }
              else
                  {
                    logger.debug("Error executing HystrixCommand.run(). Proceeding to fallback logic ...", e);
                  }
              metrics.markFailure((System.currentTimeMillis() - invocationStartTime));
              executionResult = executionResult.setException(e);
              return getFallbackOrThrowException(HystrixEventType.FAILURE, FailureType.COMMAND_EXCEPTION, "failed", e);
            }
  }
}).doOnEach(new Action1<Notification<? super R>>() {
  public @Override void call(Notification<? super R> n) {
    setRequestContextIfNeeded(currentRequestContext);
  }
}).map(new Func1<R, R>() {
  public @Override R call(R t1) {
    return executionHook.onComplete(_cmd, t1);
  }
});","METHOD: com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","LOW"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommand.setRequestContextIfNeeded(HystrixRequestContext)","CLASS: com.netflix.hystrix.HystrixObservableCommand","com.netflix.hystrix.HystrixObservableCommand","HIGH"
347,94c708f7673297783e1fd8143ba007510e2408fa,"STATEMENT_UPDATE","RETURN_STATEMENT: (properties.requestCacheEnabled().get() && (getCacheKey() != null));","METHOD: com.netflix.hystrix.AbstractHystrixCommand.isRequestCachingEnabled()","com.netflix.hystrix.AbstractHystrixCommand.isRequestCachingEnabled()","LOW"
347,94c708f7673297783e1fd8143ba007510e2408fa,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.HystrixContextScheduler(Scheduler)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","CRUCIAL"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testExecutionHookShortCircuitedWithFallbackViaExecute()","com.netflix.hystrix.HystrixObservableCommandTest.testExecutionHookShortCircuitedWithFallbackViaExecute()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // semaphore isolated","BODY: ","com.netflix.hystrix.HystrixObservableCommandTest.testShortCircuitFallbackCounter()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","BODY: ","com.netflix.hystrix.HystrixObservableCommandTest.testShortCircuitFallbackCounter()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // thread isolated","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testExecutionTimeoutWithNoFallbackUsingThreadIsolation()","com.netflix.hystrix.HystrixObservableCommandTest.testExecutionTimeoutWithNoFallbackUsingThreadIsolation()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertTrue(command.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testExecutionTimeoutWithNoFallbackUsingThreadIsolation()","com.netflix.hystrix.HystrixObservableCommandTest.testExecutionTimeoutWithNoFallbackUsingThreadIsolation()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // semaphore isolated","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testExecutionKnownFailureWithNoFallback()","com.netflix.hystrix.HystrixObservableCommandTest.testExecutionKnownFailureWithNoFallback()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testExecutionKnownFailureWithNoFallback()","com.netflix.hystrix.HystrixObservableCommandTest.testExecutionKnownFailureWithNoFallback()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // thread isolated","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testExecutionTimeoutFallbackFailureUsingThreadIsolation()","com.netflix.hystrix.HystrixObservableCommandTest.testExecutionTimeoutFallbackFailureUsingThreadIsolation()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertTrue(command.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testExecutionTimeoutFallbackFailureUsingThreadIsolation()","com.netflix.hystrix.HystrixObservableCommandTest.testExecutionTimeoutFallbackFailureUsingThreadIsolation()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // semaphore isolated","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testExecutionHookFailureWithSemaphoreIsolation()","com.netflix.hystrix.HystrixObservableCommandTest.testExecutionHookFailureWithSemaphoreIsolation()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testExecutionHookFailureWithSemaphoreIsolation()","com.netflix.hystrix.HystrixObservableCommandTest.testExecutionHookFailureWithSemaphoreIsolation()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // semaphore isolated","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testCountersOnExecutionTimeout()","com.netflix.hystrix.HystrixObservableCommandTest.testCountersOnExecutionTimeout()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testCountersOnExecutionTimeout()","com.netflix.hystrix.HystrixObservableCommandTest.testCountersOnExecutionTimeout()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // Thread isolated","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testSynchronousExecutionUsingThreadIsolationTimeoutValueViaObserve()","com.netflix.hystrix.HystrixObservableCommandTest.testSynchronousExecutionUsingThreadIsolationTimeoutValueViaObserve()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertTrue(command.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testSynchronousExecutionUsingThreadIsolationTimeoutValueViaObserve()","com.netflix.hystrix.HystrixObservableCommandTest.testSynchronousExecutionUsingThreadIsolationTimeoutValueViaObserve()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // semaphore isolated","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testObservedExecutionTimeoutWithNoFallback()","com.netflix.hystrix.HystrixObservableCommandTest.testObservedExecutionTimeoutWithNoFallback()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testObservedExecutionTimeoutWithNoFallback()","com.netflix.hystrix.HystrixObservableCommandTest.testObservedExecutionTimeoutWithNoFallback()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // semaphore isolated","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testErrorThrownViaExecute()","com.netflix.hystrix.HystrixObservableCommandTest.testErrorThrownViaExecute()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testErrorThrownViaExecute()","com.netflix.hystrix.HystrixObservableCommandTest.testErrorThrownViaExecute()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // semaphore isolated","BODY: ","com.netflix.hystrix.HystrixObservableCommandTest.testDynamicKey()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command1.isExecutedInThread());","BODY: ","com.netflix.hystrix.HystrixObservableCommandTest.testDynamicKey()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testExecutionHookRunFailureWithFallbackFailure()","com.netflix.hystrix.HystrixObservableCommandTest.testExecutionHookRunFailureWithFallbackFailure()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // semaphore isolated","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testQueueSuccess()","com.netflix.hystrix.HystrixObservableCommandTest.testQueueSuccess()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testQueueSuccess()","com.netflix.hystrix.HystrixObservableCommandTest.testQueueSuccess()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // semaphore isolated","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testExecutionTimeoutFallbackFailureUsingSemaphoreIsolation()","com.netflix.hystrix.HystrixObservableCommandTest.testExecutionTimeoutFallbackFailureUsingSemaphoreIsolation()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testExecutionTimeoutFallbackFailureUsingSemaphoreIsolation()","com.netflix.hystrix.HystrixObservableCommandTest.testExecutionTimeoutFallbackFailureUsingSemaphoreIsolation()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // semaphore isolated","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testObservedExecutionTimeoutFallbackFailure()","com.netflix.hystrix.HystrixObservableCommandTest.testObservedExecutionTimeoutFallbackFailure()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testObservedExecutionTimeoutFallbackFailure()","com.netflix.hystrix.HystrixObservableCommandTest.testObservedExecutionTimeoutFallbackFailure()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // semaphore isolated","BODY: ","com.netflix.hystrix.HystrixObservableCommandTest.testDynamicOwnerFails()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","BODY: ","com.netflix.hystrix.HystrixObservableCommandTest.testDynamicOwnerFails()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // semaphore isolated","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testRequestCacheViaExecuteUsingSemaphoreIsolation()","com.netflix.hystrix.HystrixObservableCommandTest.testRequestCacheViaExecuteUsingSemaphoreIsolation()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command1.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testRequestCacheViaExecuteUsingSemaphoreIsolation()","com.netflix.hystrix.HystrixObservableCommandTest.testRequestCacheViaExecuteUsingSemaphoreIsolation()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command2.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testRequestCacheViaExecuteUsingSemaphoreIsolation()","com.netflix.hystrix.HystrixObservableCommandTest.testRequestCacheViaExecuteUsingSemaphoreIsolation()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command3.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testRequestCacheViaExecuteUsingSemaphoreIsolation()","com.netflix.hystrix.HystrixObservableCommandTest.testRequestCacheViaExecuteUsingSemaphoreIsolation()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // Thread isolated","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testSynchronousExecutionTimeoutValueViaExecute()","com.netflix.hystrix.HystrixObservableCommandTest.testSynchronousExecutionTimeoutValueViaExecute()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertTrue(command.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testSynchronousExecutionTimeoutValueViaExecute()","com.netflix.hystrix.HystrixObservableCommandTest.testSynchronousExecutionTimeoutValueViaExecute()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // semaphore isolated","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testQueueFailureWithFallback()","com.netflix.hystrix.HystrixObservableCommandTest.testQueueFailureWithFallback()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testQueueFailureWithFallback()","com.netflix.hystrix.HystrixObservableCommandTest.testQueueFailureWithFallback()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // semaphore isolated","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testQueuedExecutionTimeoutWithFallback()","com.netflix.hystrix.HystrixObservableCommandTest.testQueuedExecutionTimeoutWithFallback()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testQueuedExecutionTimeoutWithFallback()","com.netflix.hystrix.HystrixObservableCommandTest.testQueuedExecutionTimeoutWithFallback()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // semaphore isolated","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testAsyncExecutionTimeoutValueViaObserve()","com.netflix.hystrix.HystrixObservableCommandTest.testAsyncExecutionTimeoutValueViaObserve()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testAsyncExecutionTimeoutValueViaObserve()","com.netflix.hystrix.HystrixObservableCommandTest.testAsyncExecutionTimeoutValueViaObserve()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testExecutionHookSuccessfulCommand()","com.netflix.hystrix.HystrixObservableCommandTest.testExecutionHookSuccessfulCommand()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // semaphore isolated","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testRequestCacheViaQueueUsingSemaphoreIsolation()","com.netflix.hystrix.HystrixObservableCommandTest.testRequestCacheViaQueueUsingSemaphoreIsolation()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command1.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testRequestCacheViaQueueUsingSemaphoreIsolation()","com.netflix.hystrix.HystrixObservableCommandTest.testRequestCacheViaQueueUsingSemaphoreIsolation()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command2.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testRequestCacheViaQueueUsingSemaphoreIsolation()","com.netflix.hystrix.HystrixObservableCommandTest.testRequestCacheViaQueueUsingSemaphoreIsolation()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command3.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testRequestCacheViaQueueUsingSemaphoreIsolation()","com.netflix.hystrix.HystrixObservableCommandTest.testRequestCacheViaQueueUsingSemaphoreIsolation()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // semaphore isolated","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testErrorThrownViaObserve()","com.netflix.hystrix.HystrixObservableCommandTest.testErrorThrownViaObserve()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testErrorThrownViaObserve()","com.netflix.hystrix.HystrixObservableCommandTest.testErrorThrownViaObserve()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testExecutionHookTimeoutWithFallback()","com.netflix.hystrix.HystrixObservableCommandTest.testExecutionHookTimeoutWithFallback()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // semaphore isolated","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testExecutionFailureWithFallback()","com.netflix.hystrix.HystrixObservableCommandTest.testExecutionFailureWithFallback()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testExecutionFailureWithFallback()","com.netflix.hystrix.HystrixObservableCommandTest.testExecutionFailureWithFallback()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // semaphore isolated","BODY: ","com.netflix.hystrix.HystrixObservableCommandTest.testExecutionSuccess()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","BODY: ","com.netflix.hystrix.HystrixObservableCommandTest.testExecutionSuccess()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // semaphore isolated","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testCircuitBreakerOnExecutionTimeout()","com.netflix.hystrix.HystrixObservableCommandTest.testCircuitBreakerOnExecutionTimeout()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testCircuitBreakerOnExecutionTimeout()","com.netflix.hystrix.HystrixObservableCommandTest.testCircuitBreakerOnExecutionTimeout()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // we want to get here","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testExecutionMultipleTimes()","com.netflix.hystrix.HystrixObservableCommandTest.testExecutionMultipleTimes()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // semaphore isolated","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testExecutionMultipleTimes()","com.netflix.hystrix.HystrixObservableCommandTest.testExecutionMultipleTimes()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testExecutionMultipleTimes()","com.netflix.hystrix.HystrixObservableCommandTest.testExecutionMultipleTimes()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testExecutionHookSuccessfulCommandViaFireAndForget()","com.netflix.hystrix.HystrixObservableCommandTest.testExecutionHookSuccessfulCommandViaFireAndForget()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // semaphore isolated","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testQueueFailureWithFallbackFailure()","com.netflix.hystrix.HystrixObservableCommandTest.testQueueFailureWithFallbackFailure()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testQueueFailureWithFallbackFailure()","com.netflix.hystrix.HystrixObservableCommandTest.testQueueFailureWithFallbackFailure()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // semaphore isolated","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testExecutionTimeoutWithNoFallbackUsingSemaphoreIsolation()","com.netflix.hystrix.HystrixObservableCommandTest.testExecutionTimeoutWithNoFallbackUsingSemaphoreIsolation()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testExecutionTimeoutWithNoFallbackUsingSemaphoreIsolation()","com.netflix.hystrix.HystrixObservableCommandTest.testExecutionTimeoutWithNoFallbackUsingSemaphoreIsolation()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // semaphore isolated","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testQueueUnknownFailureWithNoFallback()","com.netflix.hystrix.HystrixObservableCommandTest.testQueueUnknownFailureWithNoFallback()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testQueueUnknownFailureWithNoFallback()","com.netflix.hystrix.HystrixObservableCommandTest.testQueueUnknownFailureWithNoFallback()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // semaphore isolated","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testExecutionUnknownFailureWithNoFallback()","com.netflix.hystrix.HystrixObservableCommandTest.testExecutionUnknownFailureWithNoFallback()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testExecutionUnknownFailureWithNoFallback()","com.netflix.hystrix.HystrixObservableCommandTest.testExecutionUnknownFailureWithNoFallback()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // semaphore isolated","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testQueuedExecutionTimeoutFallbackFailure()","com.netflix.hystrix.HystrixObservableCommandTest.testQueuedExecutionTimeoutFallbackFailure()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testQueuedExecutionTimeoutFallbackFailure()","com.netflix.hystrix.HystrixObservableCommandTest.testQueuedExecutionTimeoutFallbackFailure()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // semaphore isolated","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testObserveOnImmediateSchedulerByDefaultForSemaphoreIsolation()","com.netflix.hystrix.HystrixObservableCommandTest.testObserveOnImmediateSchedulerByDefaultForSemaphoreIsolation()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testObserveOnImmediateSchedulerByDefaultForSemaphoreIsolation()","com.netflix.hystrix.HystrixObservableCommandTest.testObserveOnImmediateSchedulerByDefaultForSemaphoreIsolation()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // semaphore isolated","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testObservableTimeoutNoFallbackThreadContext()","com.netflix.hystrix.HystrixObservableCommandTest.testObservableTimeoutNoFallbackThreadContext()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testObservableTimeoutNoFallbackThreadContext()","com.netflix.hystrix.HystrixObservableCommandTest.testObservableTimeoutNoFallbackThreadContext()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // semaphore isolated","BODY: ","com.netflix.hystrix.HystrixObservableCommandTest.testDynamicOwner()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","BODY: ","com.netflix.hystrix.HystrixObservableCommandTest.testDynamicOwner()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testExecutionHookRunFailureWithFallback()","com.netflix.hystrix.HystrixObservableCommandTest.testExecutionHookRunFailureWithFallback()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // semaphore isolated","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testExecutionTimeoutWithFallbackUsingSemaphoreIsolation()","com.netflix.hystrix.HystrixObservableCommandTest.testExecutionTimeoutWithFallbackUsingSemaphoreIsolation()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testExecutionTimeoutWithFallbackUsingSemaphoreIsolation()","com.netflix.hystrix.HystrixObservableCommandTest.testExecutionTimeoutWithFallbackUsingSemaphoreIsolation()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // semaphore isolated","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testObservedExecutionTimeoutWithFallback()","com.netflix.hystrix.HystrixObservableCommandTest.testObservedExecutionTimeoutWithFallback()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testObservedExecutionTimeoutWithFallback()","com.netflix.hystrix.HystrixObservableCommandTest.testObservedExecutionTimeoutWithFallback()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // semaphore isolated","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testObservableTimeoutFallbackThreadContext()","com.netflix.hystrix.HystrixObservableCommandTest.testObservableTimeoutFallbackThreadContext()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testObservableTimeoutFallbackThreadContext()","com.netflix.hystrix.HystrixObservableCommandTest.testObservableTimeoutFallbackThreadContext()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // semaphore isolated","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testNoRequestCacheViaExecuteUsingSemaphoreIsolation()","com.netflix.hystrix.HystrixObservableCommandTest.testNoRequestCacheViaExecuteUsingSemaphoreIsolation()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command1.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testNoRequestCacheViaExecuteUsingSemaphoreIsolation()","com.netflix.hystrix.HystrixObservableCommandTest.testNoRequestCacheViaExecuteUsingSemaphoreIsolation()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command2.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testNoRequestCacheViaExecuteUsingSemaphoreIsolation()","com.netflix.hystrix.HystrixObservableCommandTest.testNoRequestCacheViaExecuteUsingSemaphoreIsolation()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command3.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testNoRequestCacheViaExecuteUsingSemaphoreIsolation()","com.netflix.hystrix.HystrixObservableCommandTest.testNoRequestCacheViaExecuteUsingSemaphoreIsolation()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // semaphore isolated","BODY: ","com.netflix.hystrix.HystrixObservableCommandTest.testCacheKeyExecutionRequiresRequestVariable()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","BODY: ","com.netflix.hystrix.HystrixObservableCommandTest.testCacheKeyExecutionRequiresRequestVariable()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // semaphore isolated","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testErrorThrownViaQueue()","com.netflix.hystrix.HystrixObservableCommandTest.testErrorThrownViaQueue()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testErrorThrownViaQueue()","com.netflix.hystrix.HystrixObservableCommandTest.testErrorThrownViaQueue()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testExecutionHookRunFailureWithoutFallback()","com.netflix.hystrix.HystrixObservableCommandTest.testExecutionHookRunFailureWithoutFallback()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // semaphore isolated","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testCheckedExceptionViaObserve()","com.netflix.hystrix.HystrixObservableCommandTest.testCheckedExceptionViaObserve()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testCheckedExceptionViaObserve()","com.netflix.hystrix.HystrixObservableCommandTest.testCheckedExceptionViaObserve()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // semaphore isolated","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testRequestCacheWithSlowExecution()","com.netflix.hystrix.HystrixObservableCommandTest.testRequestCacheWithSlowExecution()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command1.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testRequestCacheWithSlowExecution()","com.netflix.hystrix.HystrixObservableCommandTest.testRequestCacheWithSlowExecution()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command2.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testRequestCacheWithSlowExecution()","com.netflix.hystrix.HystrixObservableCommandTest.testRequestCacheWithSlowExecution()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command3.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testRequestCacheWithSlowExecution()","com.netflix.hystrix.HystrixObservableCommandTest.testRequestCacheWithSlowExecution()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command4.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testRequestCacheWithSlowExecution()","com.netflix.hystrix.HystrixObservableCommandTest.testRequestCacheWithSlowExecution()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // thread isolated","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testExecutionTimeoutWithFallbackUsingThreadIsolation()","com.netflix.hystrix.HystrixObservableCommandTest.testExecutionTimeoutWithFallbackUsingThreadIsolation()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertTrue(command.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testExecutionTimeoutWithFallbackUsingThreadIsolation()","com.netflix.hystrix.HystrixObservableCommandTest.testExecutionTimeoutWithFallbackUsingThreadIsolation()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testExecutionHookShortCircuitedWithFallbackViaQueue()","com.netflix.hystrix.HystrixObservableCommandTest.testExecutionHookShortCircuitedWithFallbackViaQueue()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","BODY: ","com.netflix.hystrix.HystrixObservableCommandTest.testBasicExecutionWorksWithoutRequestVariable()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_MOVE","LINE_COMMENT: // we should be able to execute without a RequestVariable if ...
            // 1) We don't have a cacheKey
            // 2) We don't ask for the RequestLog
            // 3) We don't do collapsing

            // semaphore isolated","BODY: ","com.netflix.hystrix.HystrixObservableCommandTest.testBasicExecutionWorksWithoutRequestVariable()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_UPDATE","LINE_COMMENT: // we should be able to execute without a RequestVariable if ...
            // 1) We don't have a cacheKey
            // 2) We don't ask for the RequestLog
            // 3) We don't do collapsing

            // semaphore isolated","CATCH_CLAUSE: Exception","com.netflix.hystrix.HystrixObservableCommandTest.testBasicExecutionWorksWithoutRequestVariable()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // semaphore isolated","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testExecutionFailureWithFallbackFailure()","com.netflix.hystrix.HystrixObservableCommandTest.testExecutionFailureWithFallbackFailure()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testExecutionFailureWithFallbackFailure()","com.netflix.hystrix.HystrixObservableCommandTest.testExecutionFailureWithFallbackFailure()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testExecutionHookSuccessfulCommandWithMultipleGetsOnFuture()","com.netflix.hystrix.HystrixObservableCommandTest.testExecutionHookSuccessfulCommandWithMultipleGetsOnFuture()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // semaphore isolated","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testExecutionHookSuccessfulCommandWithSemaphoreIsolation()","com.netflix.hystrix.HystrixObservableCommandTest.testExecutionHookSuccessfulCommandWithSemaphoreIsolation()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testExecutionHookSuccessfulCommandWithSemaphoreIsolation()","com.netflix.hystrix.HystrixObservableCommandTest.testExecutionHookSuccessfulCommandWithSemaphoreIsolation()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // semaphore isolated","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testQueuedExecutionTimeoutWithNoFallback()","com.netflix.hystrix.HystrixObservableCommandTest.testQueuedExecutionTimeoutWithNoFallback()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testQueuedExecutionTimeoutWithNoFallback()","com.netflix.hystrix.HystrixObservableCommandTest.testQueuedExecutionTimeoutWithNoFallback()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // semaphore isolated","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testNoRequestCacheViaQueueUsingSemaphoreIsolation()","com.netflix.hystrix.HystrixObservableCommandTest.testNoRequestCacheViaQueueUsingSemaphoreIsolation()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command1.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testNoRequestCacheViaQueueUsingSemaphoreIsolation()","com.netflix.hystrix.HystrixObservableCommandTest.testNoRequestCacheViaQueueUsingSemaphoreIsolation()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command2.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testNoRequestCacheViaQueueUsingSemaphoreIsolation()","com.netflix.hystrix.HystrixObservableCommandTest.testNoRequestCacheViaQueueUsingSemaphoreIsolation()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command3.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testNoRequestCacheViaQueueUsingSemaphoreIsolation()","com.netflix.hystrix.HystrixObservableCommandTest.testNoRequestCacheViaQueueUsingSemaphoreIsolation()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // thread isolated","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testNoRequestCache3UsingThreadIsolation()","com.netflix.hystrix.HystrixObservableCommandTest.testNoRequestCache3UsingThreadIsolation()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertTrue(command1.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testNoRequestCache3UsingThreadIsolation()","com.netflix.hystrix.HystrixObservableCommandTest.testNoRequestCache3UsingThreadIsolation()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertTrue(command2.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testNoRequestCache3UsingThreadIsolation()","com.netflix.hystrix.HystrixObservableCommandTest.testNoRequestCache3UsingThreadIsolation()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertTrue(command3.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testNoRequestCache3UsingThreadIsolation()","com.netflix.hystrix.HystrixObservableCommandTest.testNoRequestCache3UsingThreadIsolation()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testExecutionHookTimeoutWithoutFallback()","com.netflix.hystrix.HystrixObservableCommandTest.testExecutionHookTimeoutWithoutFallback()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // semaphore isolated","BODY: ","com.netflix.hystrix.HystrixObservableCommandTest.testObserveSuccess()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","BODY: ","com.netflix.hystrix.HystrixObservableCommandTest.testObserveSuccess()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // semaphore isolated","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testQueueKnownFailureWithNoFallback()","com.netflix.hystrix.HystrixObservableCommandTest.testQueueKnownFailureWithNoFallback()","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: assertFalse(command.isExecutedInThread());","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testQueueKnownFailureWithNoFallback()","com.netflix.hystrix.HystrixObservableCommandTest.testQueueKnownFailureWithNoFallback()","MEDIUM"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"COMMENT_DELETE","LINE_COMMENT: // mark that we are executing in a thread (even if we end up being rejected we still were a THREAD execution and not SEMAPHORE)","THEN_STATEMENT: properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD)","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","NONE"
348,ac9768dd82cd9c77f92ebe1cfaf11b780122cb3a,"STATEMENT_DELETE","METHOD_INVOCATION: isExecutedInThread.set(true);","THEN_STATEMENT: properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD)","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","MEDIUM"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_UPDATE","RETURN_STATEMENT: toObservable(Schedulers.computation());","METHOD: com.netflix.hystrix.HystrixCollapser.toObservable()","com.netflix.hystrix.HystrixCollapser.toObservable()","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCollapser.HystrixCollapser(HystrixCollapserKey,Scope,CollapserTimer,HystrixCollapserProperties.Setter)","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixCollapser.UnitTests","CLASS: com.netflix.hystrix.HystrixCollapser","com.netflix.hystrix.HystrixCollapser","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixTimer.executor : AtomicReference<ScheduledExecutor>","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixTimer.ScheduledExecutor","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixTimer.ScheduledExecutor.executor : ScheduledThreadPoolExecutor","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.util.HystrixTimer.UnitTest","CLASS: com.netflix.hystrix.util.HystrixTimer","com.netflix.hystrix.util.HystrixTimer","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.ExceptionThreadingUtility.attachCallingThreadStack(Throwable,StackTraceElement[])","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.util.ExceptionThreadingUtility.UnitTest","CLASS: com.netflix.hystrix.util.ExceptionThreadingUtility","com.netflix.hystrix.util.ExceptionThreadingUtility","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"DOC_UPDATE","JAVADOC: /**
 * A number which can be used to track counters (increment) or set values over time.
 * <p>
 * It is "rolling" in the sense that a 'timeInMilliseconds' is given that you want to track (such as 10 seconds) and then that is broken into buckets (defaults to 10) so that the 10 second window
 * doesn't empty out and restart every 10 seconds, but instead every 1 second you have a new bucket added and one dropped so that 9 of the buckets remain and only the newest starts from scratch.
 * <p>
 * This is done so that the statistics are gathered over a rolling 10 second window with data being added/dropped in 1 second intervals (or whatever granularity is defined by the arguments) rather
 * than each 10 second window starting at 0 again.
 * <p>
 * Performance-wise this class is optimized for writes, not reads. This is done because it expects far higher write volume (thousands/second) than reads (a few per second).
 * <p>
 * For example, on each read to getSum/getCount it will iterate buckets to sum the data so that on writes we don't need to maintain the overall sum and pay the synchronization cost at each write to
 * ensure the sum is up-to-date when the read can easily iterate each bucket to get the sum when it needs it.
 * <p>
 * See UnitTest for usage and expected behavior examples.
 */","CLASS: com.netflix.hystrix.util.HystrixRollingNumber","com.netflix.hystrix.util.HystrixRollingNumber","NONE"
349,c59ed29a389af786dded85f327036397c2b92c52,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingNumber.timeInMilliseconds : HystrixProperty<Integer>","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingNumber.buckets : BucketCircularArray","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingNumber.getCurrentBucket()","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingNumber.numberOfBuckets : HystrixProperty<Integer>","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingNumber.HystrixRollingNumber(Time,int,int)","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingNumber.getBucketSizeInMilliseconds()","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.util.HystrixRollingNumber.UnitTest","CLASS: com.netflix.hystrix.util.HystrixRollingNumber","com.netflix.hystrix.util.HystrixRollingNumber","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.buckets : BucketCircularArray","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.PercentileSnapshot","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.PercentileSnapshot.PercentileSnapshot(Bucket[])","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.PercentileSnapshot.getMean()","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.PercentileSnapshot.PercentileSnapshot(int...)","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.HystrixRollingPercentile(Time,HystrixProperty<Integer>,HystrixProperty<Integer>,HystrixProperty<Integer>,HystrixProperty<Boolean>)","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.currentPercentileSnapshot : PercentileSnapshot","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.util.HystrixRollingPercentile.SampleDataHolder1","CLASS: com.netflix.hystrix.util.HystrixRollingPercentile","com.netflix.hystrix.util.HystrixRollingPercentile","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.util.HystrixRollingPercentile.SampleDataHolder2","CLASS: com.netflix.hystrix.util.HystrixRollingPercentile","com.netflix.hystrix.util.HystrixRollingPercentile","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.util.HystrixRollingPercentile.UnitTest","CLASS: com.netflix.hystrix.util.HystrixRollingPercentile","com.netflix.hystrix.util.HystrixRollingPercentile","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommandProperties.default_metricsRollingStatisticalWindow : Integer","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommandProperties.default_circuitBreakerForceClosed : Boolean","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommandProperties.Setter.Setter()","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommandProperties.Setter.getUnitTestPropertiesSetter()","CLASS: com.netflix.hystrix.HystrixCommandProperties.Setter","com.netflix.hystrix.HystrixCommandProperties.Setter","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommandProperties.Setter.asMock(Setter)","CLASS: com.netflix.hystrix.HystrixCommandProperties.Setter","com.netflix.hystrix.HystrixCommandProperties.Setter","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixCommandProperties.UnitTest","CLASS: com.netflix.hystrix.HystrixCommandProperties","com.netflix.hystrix.HystrixCommandProperties","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"PARENT_CLASS_DELETE","PARAMETERIZED_TYPE: AbstractHystrixCommand<R>","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
349,c59ed29a389af786dded85f327036397c2b92c52,"DOC_UPDATE","JAVADOC: /**
 * Used to wrap code that will execute potentially risky functionality (typically meaning a service call over the network)
 * with fault and latency tolerance, statistics and performance metrics capture, circuit breaker and bulkhead functionality.
 * This command is essentially a blocking command but provides an Observable facade if used with  observe()
 * 
 * @param <R>
 *            the return type
 */","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","NONE"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_UPDATE","VARIABLE_DECLARATION_STATEMENT: Observable<R> o = Observable.create(new OnSubscribe<R>() {
  public @Override void call(Subscriber<? super R> observer) {
    try
      {
        invocationStartTime = System.currentTimeMillis();
        executionHook.onStart(_this);
        if ((! circuitBreaker.allowRequest()))
            {
              metrics.markShortCircuited();
              try
                {
                  observer.onNext(getFallbackOrThrowException(HystrixEventType.SHORT_CIRCUITED, FailureType.SHORTCIRCUIT, "short-circuited"));
                  observer.onCompleted();
                }
              catch (Exception e)
                {
                  observer.onError(e);
                }
            }
        else
            {
              try
                {
                  if (properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD))
                      {
                        subscribeWithThreadIsolation(observer);
                      }
                  else
                      {
                        subscribeWithSemaphoreIsolation(observer);
                      }
                }
              catch (RuntimeException e)
                {
                  observer.onError(e);
                }
            }
      }
    finally
      {
        recordExecutedCommand();
      }
  }
});","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_UPDATE","ASSIGNMENT: o = o.lift(new TimeoutOperator<R>(_this, performAsyncTimeout));","THEN_STATEMENT: properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: protected","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","CONSTRUCTOR_INVOCATION: super();","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"COMMENT_INSERT","BLOCK_COMMENT: /*
         * CommandGroup initialization
         */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","IF_STATEMENT: (group == null)","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"COMMENT_INSERT","BLOCK_COMMENT: /*
         * CommandKey initialization
         */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","IF_STATEMENT: ((key == null) || key.name().trim().equals(""))","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"COMMENT_INSERT","BLOCK_COMMENT: /*
         * Properties initialization
         */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","IF_STATEMENT: (propertiesStrategy == null)","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"COMMENT_INSERT","BLOCK_COMMENT: /*
         * ThreadPoolKey
         * 
         * This defines which thread-pool this command should run on.
         * 
         * It uses the HystrixThreadPoolKey if provided, then defaults to use HystrixCommandGroup.
         * 
         * It can then be overridden by a property if defined so it can be changed at runtime.
         */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","IF_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"COMMENT_INSERT","BLOCK_COMMENT: /* strategy: HystrixEventNotifier */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","ASSIGNMENT: this.eventNotifier = HystrixPlugins.getInstance().getEventNotifier();","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"COMMENT_INSERT","BLOCK_COMMENT: /* strategy: HystrixConcurrentStrategy */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","ASSIGNMENT: this.concurrencyStrategy = HystrixPlugins.getInstance().getConcurrencyStrategy();","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"COMMENT_INSERT","BLOCK_COMMENT: /*
         * Metrics initialization
         */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","IF_STATEMENT: (metrics == null)","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"COMMENT_INSERT","BLOCK_COMMENT: /*
         * CircuitBreaker initialization
         */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","IF_STATEMENT: this.properties.circuitBreakerEnabled().get()","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"COMMENT_INSERT","BLOCK_COMMENT: /* strategy: HystrixMetricsPublisherCommand */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","METHOD_INVOCATION: HystrixMetricsPublisherFactory.createOrRetrievePublisherForCommand(this.commandKey, this.commandGroup, this.metrics, this.circuitBreaker, this.properties);","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"COMMENT_INSERT","BLOCK_COMMENT: /* strategy: HystrixCommandExecutionHook */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","IF_STATEMENT: (executionHook == null)","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"COMMENT_INSERT","BLOCK_COMMENT: /*
         * ThreadPool initialization
         */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","IF_STATEMENT: (threadPool == null)","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"COMMENT_INSERT","BLOCK_COMMENT: /* fallback semaphore override if applicable */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","ASSIGNMENT: this.fallbackSemaphoreOverride = fallbackSemaphore;","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"COMMENT_INSERT","BLOCK_COMMENT: /* execution semaphore override if applicable */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","ASSIGNMENT: this.executionSemaphoreOverride = executionSemaphore;","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"COMMENT_INSERT","BLOCK_COMMENT: /* setup the request cache for this instance */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","ASSIGNMENT: this.requestCache = HystrixRequestCache.getInstance(this.commandKey, this.concurrencyStrategy);","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ALTERNATIVE_PART_INSERT","ELSE_STATEMENT: (group == null)","IF_STATEMENT: (group == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
349,c59ed29a389af786dded85f327036397c2b92c52,"ALTERNATIVE_PART_INSERT","ELSE_STATEMENT: ((key == null) || key.name().trim().equals(""))","IF_STATEMENT: ((key == null) || key.name().trim().equals(""))","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
349,c59ed29a389af786dded85f327036397c2b92c52,"ALTERNATIVE_PART_INSERT","ELSE_STATEMENT: (propertiesStrategy == null)","IF_STATEMENT: (propertiesStrategy == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
349,c59ed29a389af786dded85f327036397c2b92c52,"ALTERNATIVE_PART_INSERT","ELSE_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","IF_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
349,c59ed29a389af786dded85f327036397c2b92c52,"ALTERNATIVE_PART_INSERT","ELSE_STATEMENT: (metrics == null)","IF_STATEMENT: (metrics == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
349,c59ed29a389af786dded85f327036397c2b92c52,"ALTERNATIVE_PART_INSERT","ELSE_STATEMENT: this.properties.circuitBreakerEnabled().get()","IF_STATEMENT: this.properties.circuitBreakerEnabled().get()","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
349,c59ed29a389af786dded85f327036397c2b92c52,"ALTERNATIVE_PART_INSERT","ELSE_STATEMENT: (executionHook == null)","IF_STATEMENT: (executionHook == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
349,c59ed29a389af786dded85f327036397c2b92c52,"ALTERNATIVE_PART_INSERT","ELSE_STATEMENT: (threadPool == null)","IF_STATEMENT: (threadPool == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","THROW_STATEMENT: new IllegalStateException("HystrixCommandGroup can not be NULL");","THEN_STATEMENT: (group == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","ASSIGNMENT: this.commandGroup = group;","ELSE_STATEMENT: (group == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","VARIABLE_DECLARATION_STATEMENT: final String keyName = getDefaultNameFromClass(getClass());","THEN_STATEMENT: ((key == null) || key.name().trim().equals(""))","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","ASSIGNMENT: this.commandKey = HystrixCommandKey.Factory.asKey(keyName);","THEN_STATEMENT: ((key == null) || key.name().trim().equals(""))","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","ASSIGNMENT: this.commandKey = key;","ELSE_STATEMENT: ((key == null) || key.name().trim().equals(""))","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","ASSIGNMENT: this.properties = HystrixPropertiesFactory.getCommandProperties(this.commandKey, commandPropertiesDefaults);","THEN_STATEMENT: (propertiesStrategy == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"COMMENT_INSERT","LINE_COMMENT: // used for unit testing","ELSE_STATEMENT: (propertiesStrategy == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","ASSIGNMENT: this.properties = propertiesStrategy.getCommandProperties(this.commandKey, commandPropertiesDefaults);","ELSE_STATEMENT: (propertiesStrategy == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"COMMENT_INSERT","LINE_COMMENT: // we don't have a property overriding the value so use either HystrixThreadPoolKey or HystrixCommandGroup","THEN_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","IF_STATEMENT: (threadPoolKey == null)","THEN_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"COMMENT_INSERT","LINE_COMMENT: // we have a property defining the thread-pool so use it instead","ELSE_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","ASSIGNMENT: this.threadPoolKey = HystrixThreadPoolKey.Factory.asKey(properties.executionIsolationThreadPoolKeyOverride().get());","ELSE_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","ASSIGNMENT: this.metrics = HystrixCommandMetrics.getInstance(this.commandKey, this.commandGroup, this.properties);","THEN_STATEMENT: (metrics == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","ASSIGNMENT: this.metrics = metrics;","ELSE_STATEMENT: (metrics == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","IF_STATEMENT: (circuitBreaker == null)","THEN_STATEMENT: this.properties.circuitBreakerEnabled().get()","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","ASSIGNMENT: this.circuitBreaker = new NoOpCircuitBreaker();","ELSE_STATEMENT: this.properties.circuitBreakerEnabled().get()","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","ASSIGNMENT: this.executionHook = HystrixPlugins.getInstance().getCommandExecutionHook();","THEN_STATEMENT: (executionHook == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"COMMENT_INSERT","LINE_COMMENT: // used for unit testing","ELSE_STATEMENT: (executionHook == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","ASSIGNMENT: this.executionHook = executionHook;","ELSE_STATEMENT: (executionHook == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"COMMENT_INSERT","LINE_COMMENT: // get the default implementation of HystrixThreadPool","THEN_STATEMENT: (threadPool == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","ASSIGNMENT: this.threadPool = HystrixThreadPool.Factory.getInstance(this.threadPoolKey, threadPoolPropertiesDefaults);","THEN_STATEMENT: (threadPool == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","ASSIGNMENT: this.threadPool = threadPool;","ELSE_STATEMENT: (threadPool == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ALTERNATIVE_PART_INSERT","ELSE_STATEMENT: (threadPoolKey == null)","IF_STATEMENT: (threadPoolKey == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
349,c59ed29a389af786dded85f327036397c2b92c52,"ALTERNATIVE_PART_INSERT","ELSE_STATEMENT: (circuitBreaker == null)","IF_STATEMENT: (circuitBreaker == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
349,c59ed29a389af786dded85f327036397c2b92c52,"COMMENT_INSERT","BLOCK_COMMENT: /* use HystrixCommandGroup if HystrixThreadPoolKey is null */","THEN_STATEMENT: (threadPoolKey == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","ASSIGNMENT: this.threadPoolKey = HystrixThreadPoolKey.Factory.asKey(commandGroup.name());","THEN_STATEMENT: (threadPoolKey == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","ASSIGNMENT: this.threadPoolKey = threadPoolKey;","ELSE_STATEMENT: (threadPoolKey == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"COMMENT_INSERT","LINE_COMMENT: // get the default implementation of HystrixCircuitBreaker","THEN_STATEMENT: (circuitBreaker == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","ASSIGNMENT: this.circuitBreaker = HystrixCircuitBreaker.Factory.getInstance(this.commandKey, this.commandGroup, this.properties, this.metrics);","THEN_STATEMENT: (circuitBreaker == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","ASSIGNMENT: this.circuitBreaker = circuitBreaker;","ELSE_STATEMENT: (circuitBreaker == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_DELETE","CONSTRUCTOR_INVOCATION: super(group, key, threadPoolKey, circuitBreaker, threadPool, commandPropertiesDefaults, threadPoolPropertiesDefaults, metrics, fallbackSemaphore, executionSemaphore, propertiesStrategy, executionHook);","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
349,c59ed29a389af786dded85f327036397c2b92c52,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"DOC_UPDATE","JAVADOC: /**
     * Fluent interface for arguments to the {@link HystrixObservableCommand} constructor.
     * <p>
     * The required arguments are set via the 'with' factory method and optional arguments via the 'and' chained methods.
     * <p>
     * Example:
     * <pre> {@code
     *  Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey("GroupName"))
                .andCommandKey(HystrixCommandKey.Factory.asKey("CommandName"))
                .andEventNotifier(notifier);
     * } </pre>
     */","CLASS: com.netflix.hystrix.HystrixCommand.Setter","com.netflix.hystrix.HystrixCommand.Setter","NONE"
349,c59ed29a389af786dded85f327036397c2b92c52,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: protected","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.Setter.threadPoolKey : HystrixThreadPoolKey","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: protected","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.Setter.threadPoolPropertiesDefaults : HystrixThreadPoolProperties.Setter","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"DOC_UPDATE","JAVADOC: /**
         * Setter factory method with required values.
         * <p>
         * All optional arguments can be set via the chained methods.
         * 
         * @param groupKey
         *            {@link HystrixCommandGroupKey} used to group together multiple {@link HystrixObservableCommand} objects.
         *            <p>
         *            The {@link HystrixCommandGroupKey} is used to represent a common relationship between commands. For example, a library or team name, the system all related commands interace
         *            with,
         *            common business purpose etc.
         */","METHOD: com.netflix.hystrix.HystrixCommand.Setter.withGroupKey(HystrixCommandGroupKey)","com.netflix.hystrix.HystrixCommand.Setter.withGroupKey(HystrixCommandGroupKey)","NONE"
349,c59ed29a389af786dded85f327036397c2b92c52,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: protected","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.Setter.Setter(HystrixCommandGroupKey)","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"DOC_UPDATE","JAVADOC: /**
         * Setter factory method containing required values.
         * <p>
         * All optional arguments can be set via the chained methods.
         * 
         * @param groupKey
         *            {@link HystrixCommandGroupKey} used to group together multiple {@link HystrixObservableCommand} objects.
         *            <p>
         *            The {@link HystrixCommandGroupKey} is used to represent a common relationship between commands. For example, a library or team name, the system all related commands interace
         *            with,
         *            common business purpose etc.
         */","METHOD: com.netflix.hystrix.HystrixCommand.Setter.Setter(HystrixCommandGroupKey)","com.netflix.hystrix.HystrixCommand.Setter.Setter(HystrixCommandGroupKey)","NONE"
349,c59ed29a389af786dded85f327036397c2b92c52,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: protected","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.Setter.commandPropertiesDefaults : HystrixCommandProperties.Setter","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"DOC_UPDATE","JAVADOC: /**
         * @param commandKey
         *            {@link HystrixCommandKey} used to identify a {@link HystrixObservableCommand} instance for statistics, circuit-breaker, properties, etc.
         *            <p>
         *            By default this will be derived from the instance class name.
         *            <p>
         *            NOTE: Every unique {@link HystrixCommandKey} will result in new instances of {@link HystrixCircuitBreaker}, {@link HystrixCommandMetrics} and {@link HystrixCommandProperties}.
         *            Thus,
         *            the number of variants should be kept to a finite and reasonable number to avoid high-memory usage or memory leacks.
         *            <p>
         *            Hundreds of keys is fine, tens of thousands is probably not.
         * @return Setter for fluent interface via method chaining
         */","METHOD: com.netflix.hystrix.HystrixCommand.Setter.andCommandKey(HystrixCommandKey)","com.netflix.hystrix.HystrixCommand.Setter.andCommandKey(HystrixCommandKey)","NONE"
349,c59ed29a389af786dded85f327036397c2b92c52,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: protected","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.Setter.commandKey : HystrixCommandKey","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"DOC_UPDATE","JAVADOC: /**
         * Optional
         * 
         * @param commandPropertiesDefaults
         *            {@link HystrixCommandProperties.Setter} with property overrides for this specific instance of {@link HystrixObservableCommand}.
         *            <p>
         *            See the {@link HystrixPropertiesStrategy} JavaDocs for more information on properties and order of precedence.
         * @return Setter for fluent interface via method chaining
         */","METHOD: com.netflix.hystrix.HystrixCommand.Setter.andCommandPropertiesDefaults(HystrixCommandProperties.Setter)","com.netflix.hystrix.HystrixCommand.Setter.andCommandPropertiesDefaults(HystrixCommandProperties.Setter)","NONE"
349,c59ed29a389af786dded85f327036397c2b92c52,"DOC_UPDATE","JAVADOC: /**
         * Optional
         * 
         * @param threadPoolPropertiesDefaults
         *            {@link HystrixThreadPoolProperties.Setter} with property overrides for the {@link HystrixThreadPool} used by this specific instance of {@link HystrixObservableCommand}.
         *            <p>
         *            See the {@link HystrixPropertiesStrategy} JavaDocs for more information on properties and order of precedence.
         * @return Setter for fluent interface via method chaining
         */","METHOD: com.netflix.hystrix.HystrixCommand.Setter.andThreadPoolPropertiesDefaults(HystrixThreadPoolProperties.Setter)","com.netflix.hystrix.HystrixCommand.Setter.andThreadPoolPropertiesDefaults(HystrixThreadPoolProperties.Setter)","NONE"
349,c59ed29a389af786dded85f327036397c2b92c52,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: protected","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.Setter.groupKey : HystrixCommandGroupKey","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_UPDATE","RETURN_STATEMENT: toObservable(Schedulers.computation());","THEN_STATEMENT: properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD)","com.netflix.hystrix.HystrixCommand.toObservable()","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"RETURN_TYPE_INSERT","SINGLE_TYPE: com.netflix.hystrix.HystrixCommand.subscribeWithSemaphoreIsolation(Observer<? super R>): Subscription","METHOD: com.netflix.hystrix.HystrixCommand.subscribeWithSemaphoreIsolation(Subscriber<? super R>)","com.netflix.hystrix.HystrixCommand.subscribeWithSemaphoreIsolation(Observer<? super R>)","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: observer: Subscriber<? super R>","PARAMETER: observer","com.netflix.hystrix.HystrixCommand.subscribeWithSemaphoreIsolation(Observer<? super R>)","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"COMMENT_INSERT","LINE_COMMENT: // empty subscription since we executed synchronously","ELSE_STATEMENT: executionSemaphore.tryAcquire()","com.netflix.hystrix.HystrixCommand.subscribeWithSemaphoreIsolation(Observer<? super R>)","NONE"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","RETURN_STATEMENT: Subscriptions.empty();","ELSE_STATEMENT: executionSemaphore.tryAcquire()","com.netflix.hystrix.HystrixCommand.subscribeWithSemaphoreIsolation(Observer<? super R>)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"COMMENT_INSERT","LINE_COMMENT: // empty subscription since we executed synchronously","BODY: ","com.netflix.hystrix.HystrixCommand.subscribeWithSemaphoreIsolation(Observer<? super R>)","NONE"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","RETURN_STATEMENT: Subscriptions.empty();","BODY: ","com.netflix.hystrix.HystrixCommand.subscribeWithSemaphoreIsolation(Observer<? super R>)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"COMMENT_INSERT","LINE_COMMENT: // empty subscription since we executed synchronously","CATCH_CLAUSE: Exception","com.netflix.hystrix.HystrixCommand.subscribeWithSemaphoreIsolation(Observer<? super R>)","NONE"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","RETURN_STATEMENT: Subscriptions.empty();","CATCH_CLAUSE: Exception","com.netflix.hystrix.HystrixCommand.subscribeWithSemaphoreIsolation(Observer<? super R>)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"RETURN_TYPE_INSERT","SINGLE_TYPE: com.netflix.hystrix.HystrixCommand.subscribeWithThreadIsolation(Observer<? super R>): Subscription","METHOD: com.netflix.hystrix.HystrixCommand.subscribeWithThreadIsolation(Subscriber<? super R>)","com.netflix.hystrix.HystrixCommand.subscribeWithThreadIsolation(Observer<? super R>)","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: observer: Subscriber<? super R>","PARAMETER: observer","com.netflix.hystrix.HystrixCommand.subscribeWithThreadIsolation(Observer<? super R>)","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","RETURN_STATEMENT: new Subscription() {
  public @Override void unsubscribe() {
    f.cancel(properties.executionIsolationThreadInterruptOnTimeout().get());
  }
};","BODY: ","com.netflix.hystrix.HystrixCommand.subscribeWithThreadIsolation(Observer<? super R>)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","RETURN_STATEMENT: Subscriptions.empty();","CATCH_CLAUSE: RejectedExecutionException","com.netflix.hystrix.HystrixCommand.subscribeWithThreadIsolation(Observer<? super R>)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","RETURN_STATEMENT: Subscriptions.empty();","CATCH_CLAUSE: Exception","com.netflix.hystrix.HystrixCommand.subscribeWithThreadIsolation(Observer<? super R>)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_DELETE","METHOD_INVOCATION: observer.add(Subscriptions.create(new Action0() {
  public @Override void call() {
    f.cancel(properties.executionIsolationThreadInterruptOnTimeout().get());
  }
}));","BODY: ","com.netflix.hystrix.HystrixCommand.subscribeWithThreadIsolation(Observer<? super R>)","MEDIUM"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getProperties()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getCircuitBreaker()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.execute()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getThreadPoolKey()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isResponseShortCircuited()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getFailedExecutionException()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isResponseFromCache()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getExecutionSemaphore()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.recordExecutedCommand()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isExecutionComplete()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.markAsCollapsedCommand(int)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.queue()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getFallbackSemaphore()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isSuccessfulExecution()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getExecutionTimeInMilliseconds()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.observe()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getDefaultNameFromClass(Class<? extends HystrixCommand>)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isCircuitBreakerOpen()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getCommandKey()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.decomposeException(Exception)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isResponseRejected()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getCacheKey()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getExecutionEvents()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isFailedExecution()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getLogMessagePrefix()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isRequestCachingEnabled()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isExecutedInThread()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getMetrics()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getCommandGroup()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isResponseFromFallback()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isResponseTimedOut()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.recordTotalExecutionTime(long)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.isExecutedInThread : AtomicBoolean","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.executionSemaphorePerCircuit : ConcurrentHashMap<String, TryableSemaphore>","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.started : AtomicBoolean","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.executionSemaphoreOverride : TryableSemaphore","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.executionResult : ExecutionResult","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.fallbackSemaphorePerCircuit : ConcurrentHashMap<String, TryableSemaphore>","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.timeoutTimer : AtomicReference<Reference<TimerListener>>","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.threadPoolKey : HystrixThreadPoolKey","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.properties : HystrixCommandProperties","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.isExecutionComplete : AtomicBoolean","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.fallbackSemaphoreOverride : TryableSemaphore","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.metrics : HystrixCommandMetrics","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.commandKey : HystrixCommandKey","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.concurrencyStrategy : HystrixConcurrencyStrategy","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.commandGroup : HystrixCommandGroupKey","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.isCommandTimedOut : AtomicReference<TimedOutStatus>","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.circuitBreaker : HystrixCircuitBreaker","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.requestCache : HystrixRequestCache","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.defaultNameCache : ConcurrentHashMap<Class<? extends HystrixCommand>, String>","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.invocationStartTime : long","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.executionHook : HystrixCommandExecutionHook","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.threadPool : HystrixThreadPool","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.eventNotifier : HystrixEventNotifier","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.TimeoutObservable","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.ExecutionResult","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.UnitTest","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.TryableSemaphore","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.ObservableCommand","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.CachedObservableOriginal","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.CachedObservableResponse","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.TimeoutOperator","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"PARENT_INTERFACE_CHANGE","PARAMETERIZED_TYPE: OnSubscribe<T>","SUPER_INTERFACE_TYPES: ","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction","CRUCIAL"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_ORDERING_CHANGE","IF_STATEMENT: subscription.isUnsubscribed()","WHILE_STATEMENT: true","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.setException(Exception)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_ORDERING_CHANGE","IF_STATEMENT: subscription.isUnsubscribed()","WHILE_STATEMENT: true","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.setResponse(T)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"METHOD_RENAMING","METHOD: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.call(Subscriber<? super T>)","METHOD: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.call(Subscriber<? super T>)","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.onSubscribe(Observer<? super T>)","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"RETURN_TYPE_INSERT","SINGLE_TYPE: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.onSubscribe(Observer<? super T>): Subscription","METHOD: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.call(Subscriber<? super T>)","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.onSubscribe(Observer<? super T>)","CRUCIAL"
349,c59ed29a389af786dded85f327036397c2b92c52,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: observer: Subscriber<? super T>","PARAMETER: observer","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.onSubscribe(Observer<? super T>)","CRUCIAL"
349,c59ed29a389af786dded85f327036397c2b92c52,"COMMENT_INSERT","LINE_COMMENT: // we'll retry","METHOD: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.call(Subscriber<? super T>)","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.onSubscribe(Observer<? super T>)","NONE"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","RETURN_STATEMENT: subscription;","METHOD: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.call(Subscriber<? super T>)","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.onSubscribe(Observer<? super T>)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_DELETE","METHOD_INVOCATION: observer.add(subscription);","METHOD: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.call(Subscriber<? super T>)","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.onSubscribe(Observer<? super T>)","MEDIUM"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.UnitTest","CLASS: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixRequestCache.UnitTest","CLASS: com.netflix.hystrix.HystrixRequestCache","com.netflix.hystrix.HystrixRequestCache","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixCircuitBreaker.TestCircuitBreaker","CLASS: com.netflix.hystrix.HystrixCircuitBreaker","com.netflix.hystrix.HystrixCircuitBreaker","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixCircuitBreaker.UnitTest","CLASS: com.netflix.hystrix.HystrixCircuitBreaker","com.netflix.hystrix.HystrixCircuitBreaker","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","METHOD_INVOCATION: currentCommand.get().push(key);","BODY: ","com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_DELETE","VARIABLE_DECLARATION_STATEMENT: final LinkedList<HystrixCommandKey> list = currentCommand.get();","METHOD: com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","MEDIUM"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_DELETE","METHOD_INVOCATION: list.push(key);","BODY: ","com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","MEDIUM"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_DELETE","RETURN_STATEMENT: new Action0() {
  public @Override void call() {
    endCurrentThreadExecutingCommand(list);
  }
};","METHOD: com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","MEDIUM"
349,c59ed29a389af786dded85f327036397c2b92c52,"DOC_DELETE","JAVADOC: /**
     * 
     * @return Action0 to perform the same work as `endCurrentThreadExecutingCommand()` but can be done from any thread
     */","METHOD: com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","NONE"
349,c59ed29a389af786dded85f327036397c2b92c52,"RETURN_TYPE_DELETE","SINGLE_TYPE: com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey): Action0","METHOD: com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","TRY_STATEMENT: ","METHOD: com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","IF_STATEMENT: (! currentCommand.get().isEmpty())","BODY: ","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","CATCH_CLAUSE: NoSuchElementException","CATCH_CLAUSES: ","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","CATCH_CLAUSE: Exception","CATCH_CLAUSES: ","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"COMMENT_INSERT","LINE_COMMENT: // this shouldn't be possible since we check for empty above and this is thread-isolated","CATCH_CLAUSE: NoSuchElementException","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","NONE"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","METHOD_INVOCATION: logger.debug("No command found to end.", e);","CATCH_CLAUSE: NoSuchElementException","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","METHOD_INVOCATION: logger.warn("Unable to end command.", e);","CATCH_CLAUSE: Exception","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_PARENT_CHANGE","METHOD_INVOCATION: endCurrentThreadExecutingCommand(currentCommand.get());","METHOD: com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","MEDIUM"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_UPDATE","METHOD_INVOCATION: endCurrentThreadExecutingCommand(currentCommand.get());","THEN_STATEMENT: (! currentCommand.get().isEmpty())","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand(LinkedList<HystrixCommandKey>)","CLASS: com.netflix.hystrix.Hystrix","com.netflix.hystrix.Hystrix","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.Hystrix.UnitTest","CLASS: com.netflix.hystrix.Hystrix","com.netflix.hystrix.Hystrix","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"CONDITION_EXPRESSION_CHANGE","FOREACH_STATEMENT: AbstractHystrixCommand<?> command:allExecutedCommands","BODY: ","com.netflix.hystrix.HystrixRequestLog.getExecutedCommandsAsString()","MEDIUM"
349,c59ed29a389af786dded85f327036397c2b92c52,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixRequestLog.MAX_STORAGE : int","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: command: AbstractHystrixCommand<?>","PARAMETER: command","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixCommand<?>)","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"COMMENT_DELETE","LINE_COMMENT: // TODO remove this when deprecation completed","METHOD: com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(AbstractHystrixCommand<?>)","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixCommand<?>)","NONE"
349,c59ed29a389af786dded85f327036397c2b92c52,"COMMENT_DELETE","LINE_COMMENT: // see RequestLog: Reduce Chance of Memory Leak https://github.com/Netflix/Hystrix/issues/53","THEN_STATEMENT: (! executedCommands.offer((HystrixCommand<?>) command))","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixCommand<?>)","NONE"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_DELETE","METHOD_INVOCATION: logger.warn((("RequestLog ignoring command after reaching limit of " + MAX_STORAGE) + ". See https://github.com/Netflix/Hystrix/issues/53 for more information."));","THEN_STATEMENT: (! executedCommands.offer((HystrixCommand<?>) command))","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixCommand<?>)","MEDIUM"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_DELETE","IF_STATEMENT: (! executedCommands.offer((HystrixCommand<?>) command))","THEN_STATEMENT: (command instanceof HystrixCommand)","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixCommand<?>)","MEDIUM"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_DELETE","IF_STATEMENT: (command instanceof HystrixCommand)","METHOD: com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(AbstractHystrixCommand<?>)","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixCommand<?>)","MEDIUM"
349,c59ed29a389af786dded85f327036397c2b92c52,"CONDITION_EXPRESSION_CHANGE","IF_STATEMENT: (! allExecutedCommands.offer(command))","METHOD: com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(AbstractHystrixCommand<?>)","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixCommand<?>)","MEDIUM"
349,c59ed29a389af786dded85f327036397c2b92c52,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixRequestLog.getAllExecutedCommands()","CLASS: com.netflix.hystrix.HystrixRequestLog","com.netflix.hystrix.HystrixRequestLog","CRUCIAL"
349,c59ed29a389af786dded85f327036397c2b92c52,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixRequestLog.allExecutedCommands : LinkedBlockingQueue<AbstractHystrixCommand<?>>","CLASS: com.netflix.hystrix.HystrixRequestLog","com.netflix.hystrix.HystrixRequestLog","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixRequestLog.TestCommand","CLASS: com.netflix.hystrix.HystrixRequestLog","com.netflix.hystrix.HystrixRequestLog","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixRequestLog.UnitTest","CLASS: com.netflix.hystrix.HystrixRequestLog","com.netflix.hystrix.HystrixRequestLog","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixThreadPool.Factory.threadPools : ConcurrentHashMap<String, HystrixThreadPool>","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDING_ATTRIBUTE_MODIFIABILITY","MODIFIER: final","MODIFIERS: ","com.netflix.hystrix.HystrixThreadPool.Factory.threadPools : ConcurrentHashMap<String, HystrixThreadPool>","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_DELETE","ASSIGNMENT: this.scheduler = new HystrixContextScheduler(concurrencyStrategy, this);","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.HystrixThreadPoolDefault(HystrixThreadPoolKey,HystrixThreadPoolProperties.Setter)","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.HystrixThreadPoolDefault(HystrixThreadPoolKey,HystrixThreadPoolProperties.Setter)","MEDIUM"
349,c59ed29a389af786dded85f327036397c2b92c52,"COMMENT_INSERT","LINE_COMMENT: // allow us to change things via fast-properties by setting it each time","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","NONE"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","METHOD_INVOCATION: threadPool.setCorePoolSize(properties.coreSize().get());","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","METHOD_INVOCATION: threadPool.setMaximumPoolSize(properties.coreSize().get());","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"COMMENT_INSERT","LINE_COMMENT: // we always want maxSize the same as coreSize, we are not using a dynamically resizing pool","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","NONE"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_INSERT","METHOD_INVOCATION: threadPool.setKeepAliveTime(properties.keepAliveTimeMinutes().get(), TimeUnit.MINUTES);","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"COMMENT_INSERT","LINE_COMMENT: // this doesn't really matter since we're not resizing","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","NONE"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_DELETE","METHOD_INVOCATION: touchConfig();","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","MEDIUM"
349,c59ed29a389af786dded85f327036397c2b92c52,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getScheduler()","CLASS: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault","CRUCIAL"
349,c59ed29a389af786dded85f327036397c2b92c52,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.touchConfig()","CLASS: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.scheduler : Scheduler","CLASS: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixThreadPool.getScheduler()","CLASS: com.netflix.hystrix.HystrixThreadPool","com.netflix.hystrix.HystrixThreadPool","CRUCIAL"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixThreadPool.UnitTest","CLASS: com.netflix.hystrix.HystrixThreadPool","com.netflix.hystrix.HystrixThreadPool","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"RETURN_TYPE_CHANGE","PARAMETERIZED_TYPE: com.netflix.hystrix.exception.HystrixRuntimeException.getImplementingClass(): Class<? extends AbstractHystrixCommand>","METHOD: com.netflix.hystrix.exception.HystrixRuntimeException.getImplementingClass()","com.netflix.hystrix.exception.HystrixRuntimeException.getImplementingClass()","CRUCIAL"
349,c59ed29a389af786dded85f327036397c2b92c52,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: commandClass: Class<? extends AbstractHystrixCommand>","PARAMETER: commandClass","com.netflix.hystrix.exception.HystrixRuntimeException.HystrixRuntimeException(FailureType,Class<? extends HystrixCommand>,String,Exception,Throwable)","CRUCIAL"
349,c59ed29a389af786dded85f327036397c2b92c52,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: commandClass: Class<? extends AbstractHystrixCommand>","PARAMETER: commandClass","com.netflix.hystrix.exception.HystrixRuntimeException.HystrixRuntimeException(FailureType,Class<? extends HystrixCommand>,String,Throwable,Throwable)","CRUCIAL"
349,c59ed29a389af786dded85f327036397c2b92c52,"ATTRIBUTE_TYPE_CHANGE","PARAMETERIZED_TYPE: Class<? extends AbstractHystrixCommand>","FIELD: com.netflix.hystrix.exception.HystrixRuntimeException.commandClass : Class<? extends AbstractHystrixCommand>","com.netflix.hystrix.exception.HystrixRuntimeException.commandClass : Class<? extends HystrixCommand>","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixCommandMetrics.UnitTest","CLASS: com.netflix.hystrix.HystrixCommandMetrics","com.netflix.hystrix.HystrixCommandMetrics","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory.getPublisherForThreadPool(HystrixThreadPoolKey,HystrixThreadPoolMetrics,HystrixThreadPoolProperties)","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory.getPublisherForCommand(HystrixCommandKey,HystrixCommandGroupKey,HystrixCommandMetrics,HystrixCircuitBreaker,HystrixCommandProperties)","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory.HystrixMetricsPublisherFactory(HystrixMetricsPublisher)","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory.TestHystrixMetricsPublisher","CLASS: com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory","com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory.UnitTest","CLASS: com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory","com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.HystrixPlugins.concurrencyStrategy : AtomicReference<HystrixConcurrencyStrategy>","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.HystrixPlugins.commandExecutionHook : AtomicReference<HystrixCommandExecutionHook>","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.HystrixPlugins.metricsPublisher : AtomicReference<HystrixMetricsPublisher>","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.HystrixPlugins.notifier : AtomicReference<HystrixEventNotifier>","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.HystrixPlugins.propertiesFactory : AtomicReference<HystrixPropertiesStrategy>","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.strategy.HystrixPlugins.UnitTest","CLASS: com.netflix.hystrix.strategy.HystrixPlugins","com.netflix.hystrix.strategy.HystrixPlugins","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"DOC_UPDATE","JAVADOC: /**
 * Wrap a {@link Scheduler} so that scheduled actions are wrapped with {@link HystrixContexSchedulerAction} so that
 * the {@link HystrixRequestContext} is properly copied across threads (if they are used by the {@link Scheduler}).
 */","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","NONE"
349,c59ed29a389af786dded85f327036397c2b92c52,"STATEMENT_DELETE","ASSIGNMENT: this.threadPool = null;","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.HystrixContextScheduler(HystrixConcurrencyStrategy,Scheduler)","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.HystrixContextScheduler(HystrixConcurrencyStrategy,Scheduler)","MEDIUM"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.schedule(T,Func2<? super Scheduler, ? super T, ? extends Subscription>)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.schedule(T,Func2<? super Scheduler, ? super T, ? extends Subscription>,long,TimeUnit)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.schedule(Action1<Inner>,long,TimeUnit)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","CRUCIAL"
349,c59ed29a389af786dded85f327036397c2b92c52,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.schedule(Action1<Inner>)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","CRUCIAL"
349,c59ed29a389af786dded85f327036397c2b92c52,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.HystrixContextScheduler(HystrixConcurrencyStrategy,HystrixThreadPool)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","CRUCIAL"
349,c59ed29a389af786dded85f327036397c2b92c52,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.threadPool : HystrixThreadPool","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"REMOVED_CLASS","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.HystrixContextInnerScheduler","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","CRUCIAL"
349,c59ed29a389af786dded85f327036397c2b92c52,"REMOVED_CLASS","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.InnerHystrixContextScheduler","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","HIGH"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixConcurrencyStrategy.UnitTest","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixConcurrencyStrategy","com.netflix.hystrix.strategy.concurrency.HystrixConcurrencyStrategy","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.strategy.properties.HystrixPropertiesChainedArchaiusProperty.UnitTest","CLASS: com.netflix.hystrix.strategy.properties.HystrixPropertiesChainedArchaiusProperty","com.netflix.hystrix.strategy.properties.HystrixPropertiesChainedArchaiusProperty","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.strategy.properties.HystrixProperty.UnitTest","CLASS: com.netflix.hystrix.strategy.properties.HystrixProperty","com.netflix.hystrix.strategy.properties.HystrixProperty","LOW"
349,c59ed29a389af786dded85f327036397c2b92c52,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onError(AbstractHystrixCommand<T>,FailureType,Exception)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","CRUCIAL"
349,c59ed29a389af786dded85f327036397c2b92c52,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onFallbackSuccess(AbstractHystrixCommand<T>,T)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","CRUCIAL"
349,c59ed29a389af786dded85f327036397c2b92c52,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onRunError(AbstractHystrixCommand<T>,Exception)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","CRUCIAL"
349,c59ed29a389af786dded85f327036397c2b92c52,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onComplete(AbstractHystrixCommand<T>,T)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","CRUCIAL"
349,c59ed29a389af786dded85f327036397c2b92c52,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onThreadStart(AbstractHystrixCommand<T>)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","CRUCIAL"
349,c59ed29a389af786dded85f327036397c2b92c52,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onStart(AbstractHystrixCommand<T>)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","CRUCIAL"
349,c59ed29a389af786dded85f327036397c2b92c52,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onRunSuccess(AbstractHystrixCommand<T>,T)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","CRUCIAL"
349,c59ed29a389af786dded85f327036397c2b92c52,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onRunStart(AbstractHystrixCommand<T>)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","CRUCIAL"
349,c59ed29a389af786dded85f327036397c2b92c52,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onFallbackError(AbstractHystrixCommand<T>,Exception)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","CRUCIAL"
349,c59ed29a389af786dded85f327036397c2b92c52,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onFallbackStart(AbstractHystrixCommand<T>)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","CRUCIAL"
349,c59ed29a389af786dded85f327036397c2b92c52,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onThreadComplete(AbstractHystrixCommand<T>)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_UPDATE","RETURN_STATEMENT: toObservable(Schedulers.threadPoolForComputation());","METHOD: com.netflix.hystrix.HystrixCollapser.toObservable()","com.netflix.hystrix.HystrixCollapser.toObservable()","LOW"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCollapser.HystrixCollapser(HystrixCollapserKey,Scope,CollapserTimer,HystrixCollapserProperties.Setter)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCollapser.UnitTests","CLASS: com.netflix.hystrix.HystrixCollapser","com.netflix.hystrix.HystrixCollapser","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixTimer.executor : AtomicReference<ScheduledExecutor>","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixTimer.ScheduledExecutor","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixTimer.ScheduledExecutor.executor : ScheduledThreadPoolExecutor","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_CLASS","CLASS: com.netflix.hystrix.util.HystrixTimer.UnitTest","CLASS: com.netflix.hystrix.util.HystrixTimer","com.netflix.hystrix.util.HystrixTimer","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.ExceptionThreadingUtility.attachCallingThreadStack(Throwable,StackTraceElement[])","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_CLASS","CLASS: com.netflix.hystrix.util.ExceptionThreadingUtility.UnitTest","CLASS: com.netflix.hystrix.util.ExceptionThreadingUtility","com.netflix.hystrix.util.ExceptionThreadingUtility","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"DOC_UPDATE","JAVADOC: /**
 * A number which can be used to track counters (increment) or set values over time.
 * <p>
 * It is "rolling" in the sense that a 'timeInMilliseconds' is given that you want to track (such as 10 seconds) and then that is broken into buckets (defaults to 10) so that the 10 second window
 * doesn't empty out and restart every 10 seconds, but instead every 1 second you have a new bucket added and one dropped so that 9 of the buckets remain and only the newest starts from scratch.
 * <p>
 * This is done so that the statistics are gathered over a rolling 10 second window with data being added/dropped in 1 second intervals (or whatever granularity is defined by the arguments) rather
 * than each 10 second window starting at 0 again.
 * <p>
 * Performance-wise this class is optimized for writes, not reads. This is done because it expects far higher write volume (thousands/second) than reads (a few per second).
 * <p>
 * For example, on each read to getSum/getCount it will iterate buckets to sum the data so that on writes we don't need to maintain the overall sum and pay the synchronization cost at each write to
 * ensure the sum is up-to-date when the read can easily iterate each bucket to get the sum when it needs it.
 * <p>
 * See inner-class UnitTest for usage and expected behavior examples.
 */","CLASS: com.netflix.hystrix.util.HystrixRollingNumber","com.netflix.hystrix.util.HystrixRollingNumber","NONE"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingNumber.timeInMilliseconds : HystrixProperty<Integer>","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingNumber.buckets : BucketCircularArray","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingNumber.getCurrentBucket()","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingNumber.numberOfBuckets : HystrixProperty<Integer>","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingNumber.HystrixRollingNumber(Time,int,int)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingNumber.getBucketSizeInMilliseconds()","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_CLASS","CLASS: com.netflix.hystrix.util.HystrixRollingNumber.UnitTest","CLASS: com.netflix.hystrix.util.HystrixRollingNumber","com.netflix.hystrix.util.HystrixRollingNumber","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.buckets : BucketCircularArray","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.PercentileSnapshot","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.PercentileSnapshot.PercentileSnapshot(Bucket[])","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.PercentileSnapshot.getMean()","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.PercentileSnapshot.PercentileSnapshot(int...)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.HystrixRollingPercentile(Time,HystrixProperty<Integer>,HystrixProperty<Integer>,HystrixProperty<Integer>,HystrixProperty<Boolean>)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.currentPercentileSnapshot : PercentileSnapshot","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_CLASS","CLASS: com.netflix.hystrix.util.HystrixRollingPercentile.SampleDataHolder1","CLASS: com.netflix.hystrix.util.HystrixRollingPercentile","com.netflix.hystrix.util.HystrixRollingPercentile","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_CLASS","CLASS: com.netflix.hystrix.util.HystrixRollingPercentile.SampleDataHolder2","CLASS: com.netflix.hystrix.util.HystrixRollingPercentile","com.netflix.hystrix.util.HystrixRollingPercentile","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_CLASS","CLASS: com.netflix.hystrix.util.HystrixRollingPercentile.UnitTest","CLASS: com.netflix.hystrix.util.HystrixRollingPercentile","com.netflix.hystrix.util.HystrixRollingPercentile","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommandProperties.default_metricsRollingStatisticalWindow : Integer","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommandProperties.default_circuitBreakerForceClosed : Boolean","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommandProperties.Setter.Setter()","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommandProperties.Setter.getUnitTestPropertiesSetter()","CLASS: com.netflix.hystrix.HystrixCommandProperties.Setter","com.netflix.hystrix.HystrixCommandProperties.Setter","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommandProperties.Setter.asMock(Setter)","CLASS: com.netflix.hystrix.HystrixCommandProperties.Setter","com.netflix.hystrix.HystrixCommandProperties.Setter","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCommandProperties.UnitTest","CLASS: com.netflix.hystrix.HystrixCommandProperties","com.netflix.hystrix.HystrixCommandProperties","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"PARENT_CLASS_INSERT","PARAMETERIZED_TYPE: AbstractHystrixCommand<R>","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"DOC_UPDATE","JAVADOC: /**
 * Used to wrap code that will execute potentially risky functionality (typically meaning a service call over the network)
 * with fault and latency tolerance, statistics and performance metrics capture, circuit breaker and bulkhead functionality.
 * 
 * @param <R>
 *            the return type
 */","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","NONE"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_UPDATE","VARIABLE_DECLARATION_STATEMENT: Observable<R> o = Observable.create(new OnSubscribeFunc<R>() {
  public @Override Subscription onSubscribe(Observer<? super R> observer) {
    try
      {
        invocationStartTime = System.currentTimeMillis();
        executionHook.onStart(_this);
        if ((! circuitBreaker.allowRequest()))
            {
              metrics.markShortCircuited();
              try
                {
                  observer.onNext(getFallbackOrThrowException(HystrixEventType.SHORT_CIRCUITED, FailureType.SHORTCIRCUIT, "short-circuited"));
                  observer.onCompleted();
                }
              catch (Exception e)
                {
                  observer.onError(e);
                }
              return Subscriptions.empty();
            }
        else
            {
              try
                {
                  if (properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD))
                      {
                        return subscribeWithThreadIsolation(observer);
                      }
                  else
                      {
                        return subscribeWithSemaphoreIsolation(observer);
                      }
                }
              catch (RuntimeException e)
                {
                  observer.onError(e);
                  return Subscriptions.empty();
                }
            }
      }
    finally
      {
        recordExecutedCommand();
      }
  }
});","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_UPDATE","ASSIGNMENT: o = new TimeoutObservable<R>(o, _this, performAsyncTimeout);","THEN_STATEMENT: properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_INSERT","CONSTRUCTOR_INVOCATION: super(group, key, threadPoolKey, circuitBreaker, threadPool, commandPropertiesDefaults, threadPoolPropertiesDefaults, metrics, fallbackSemaphore, executionSemaphore, propertiesStrategy, executionHook);","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","CONSTRUCTOR_INVOCATION: super();","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"COMMENT_DELETE","BLOCK_COMMENT: /*
         * CommandGroup initialization
         */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","THROW_STATEMENT: new IllegalStateException("HystrixCommandGroup can not be NULL");","THEN_STATEMENT: (group == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","ASSIGNMENT: this.commandGroup = group;","ELSE_STATEMENT: (group == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: (group == null)","IF_STATEMENT: (group == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","IF_STATEMENT: (group == null)","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"COMMENT_DELETE","BLOCK_COMMENT: /*
         * CommandKey initialization
         */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","VARIABLE_DECLARATION_STATEMENT: final String keyName = getDefaultNameFromClass(getClass());","THEN_STATEMENT: ((key == null) || key.name().trim().equals(""))","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","ASSIGNMENT: this.commandKey = HystrixCommandKey.Factory.asKey(keyName);","THEN_STATEMENT: ((key == null) || key.name().trim().equals(""))","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","ASSIGNMENT: this.commandKey = key;","ELSE_STATEMENT: ((key == null) || key.name().trim().equals(""))","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: ((key == null) || key.name().trim().equals(""))","IF_STATEMENT: ((key == null) || key.name().trim().equals(""))","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","IF_STATEMENT: ((key == null) || key.name().trim().equals(""))","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"COMMENT_DELETE","BLOCK_COMMENT: /*
         * Properties initialization
         */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","ASSIGNMENT: this.properties = HystrixPropertiesFactory.getCommandProperties(this.commandKey, commandPropertiesDefaults);","THEN_STATEMENT: (propertiesStrategy == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"COMMENT_DELETE","LINE_COMMENT: // used for unit testing","ELSE_STATEMENT: (propertiesStrategy == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","ASSIGNMENT: this.properties = propertiesStrategy.getCommandProperties(this.commandKey, commandPropertiesDefaults);","ELSE_STATEMENT: (propertiesStrategy == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: (propertiesStrategy == null)","IF_STATEMENT: (propertiesStrategy == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","IF_STATEMENT: (propertiesStrategy == null)","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"COMMENT_DELETE","BLOCK_COMMENT: /*
         * ThreadPoolKey
         * 
         * This defines which thread-pool this command should run on.
         * 
         * It uses the HystrixThreadPoolKey if provided, then defaults to use HystrixCommandGroup.
         * 
         * It can then be overridden by a property if defined so it can be changed at runtime.
         */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"COMMENT_DELETE","LINE_COMMENT: // we don't have a property overriding the value so use either HystrixThreadPoolKey or HystrixCommandGroup","THEN_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"COMMENT_DELETE","BLOCK_COMMENT: /* use HystrixCommandGroup if HystrixThreadPoolKey is null */","THEN_STATEMENT: (threadPoolKey == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","ASSIGNMENT: this.threadPoolKey = HystrixThreadPoolKey.Factory.asKey(commandGroup.name());","THEN_STATEMENT: (threadPoolKey == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","ASSIGNMENT: this.threadPoolKey = threadPoolKey;","ELSE_STATEMENT: (threadPoolKey == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: (threadPoolKey == null)","IF_STATEMENT: (threadPoolKey == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","IF_STATEMENT: (threadPoolKey == null)","THEN_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"COMMENT_DELETE","LINE_COMMENT: // we have a property defining the thread-pool so use it instead","ELSE_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","ASSIGNMENT: this.threadPoolKey = HystrixThreadPoolKey.Factory.asKey(properties.executionIsolationThreadPoolKeyOverride().get());","ELSE_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","IF_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","IF_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"COMMENT_DELETE","BLOCK_COMMENT: /* strategy: HystrixEventNotifier */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","ASSIGNMENT: this.eventNotifier = HystrixPlugins.getInstance().getEventNotifier();","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"COMMENT_DELETE","BLOCK_COMMENT: /* strategy: HystrixConcurrentStrategy */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","ASSIGNMENT: this.concurrencyStrategy = HystrixPlugins.getInstance().getConcurrencyStrategy();","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"COMMENT_DELETE","BLOCK_COMMENT: /*
         * Metrics initialization
         */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","ASSIGNMENT: this.metrics = HystrixCommandMetrics.getInstance(this.commandKey, this.commandGroup, this.properties);","THEN_STATEMENT: (metrics == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","ASSIGNMENT: this.metrics = metrics;","ELSE_STATEMENT: (metrics == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: (metrics == null)","IF_STATEMENT: (metrics == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","IF_STATEMENT: (metrics == null)","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"COMMENT_DELETE","BLOCK_COMMENT: /*
         * CircuitBreaker initialization
         */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"COMMENT_DELETE","LINE_COMMENT: // get the default implementation of HystrixCircuitBreaker","THEN_STATEMENT: (circuitBreaker == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","ASSIGNMENT: this.circuitBreaker = HystrixCircuitBreaker.Factory.getInstance(this.commandKey, this.commandGroup, this.properties, this.metrics);","THEN_STATEMENT: (circuitBreaker == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","ASSIGNMENT: this.circuitBreaker = circuitBreaker;","ELSE_STATEMENT: (circuitBreaker == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: (circuitBreaker == null)","IF_STATEMENT: (circuitBreaker == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","IF_STATEMENT: (circuitBreaker == null)","THEN_STATEMENT: this.properties.circuitBreakerEnabled().get()","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","ASSIGNMENT: this.circuitBreaker = new NoOpCircuitBreaker();","ELSE_STATEMENT: this.properties.circuitBreakerEnabled().get()","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: this.properties.circuitBreakerEnabled().get()","IF_STATEMENT: this.properties.circuitBreakerEnabled().get()","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","IF_STATEMENT: this.properties.circuitBreakerEnabled().get()","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"COMMENT_DELETE","BLOCK_COMMENT: /* strategy: HystrixMetricsPublisherCommand */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","METHOD_INVOCATION: HystrixMetricsPublisherFactory.createOrRetrievePublisherForCommand(this.commandKey, this.commandGroup, this.metrics, this.circuitBreaker, this.properties);","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"COMMENT_DELETE","BLOCK_COMMENT: /* strategy: HystrixCommandExecutionHook */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","ASSIGNMENT: this.executionHook = HystrixPlugins.getInstance().getCommandExecutionHook();","THEN_STATEMENT: (executionHook == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"COMMENT_DELETE","LINE_COMMENT: // used for unit testing","ELSE_STATEMENT: (executionHook == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","ASSIGNMENT: this.executionHook = executionHook;","ELSE_STATEMENT: (executionHook == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: (executionHook == null)","IF_STATEMENT: (executionHook == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","IF_STATEMENT: (executionHook == null)","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"COMMENT_DELETE","BLOCK_COMMENT: /*
         * ThreadPool initialization
         */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"COMMENT_DELETE","LINE_COMMENT: // get the default implementation of HystrixThreadPool","THEN_STATEMENT: (threadPool == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","ASSIGNMENT: this.threadPool = HystrixThreadPool.Factory.getInstance(this.threadPoolKey, threadPoolPropertiesDefaults);","THEN_STATEMENT: (threadPool == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","ASSIGNMENT: this.threadPool = threadPool;","ELSE_STATEMENT: (threadPool == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: (threadPool == null)","IF_STATEMENT: (threadPool == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","IF_STATEMENT: (threadPool == null)","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"COMMENT_DELETE","BLOCK_COMMENT: /* fallback semaphore override if applicable */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","ASSIGNMENT: this.fallbackSemaphoreOverride = fallbackSemaphore;","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"COMMENT_DELETE","BLOCK_COMMENT: /* execution semaphore override if applicable */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","ASSIGNMENT: this.executionSemaphoreOverride = executionSemaphore;","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"COMMENT_DELETE","BLOCK_COMMENT: /* setup the request cache for this instance */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","ASSIGNMENT: this.requestCache = HystrixRequestCache.getInstance(this.commandKey, this.concurrencyStrategy);","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"DOC_UPDATE","JAVADOC: /**
     * Fluent interface for arguments to the {@link HystrixCommand} constructor.
     * <p>
     * The required arguments are set via the 'with' factory method and optional arguments via the 'and' chained methods.
     * <p>
     * Example:
     * <pre> {@code
     *  Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey("GroupName"))
                .andCommandKey(HystrixCommandKey.Factory.asKey("CommandName"))
                .andEventNotifier(notifier);
     * } </pre>
     */","CLASS: com.netflix.hystrix.HystrixCommand.Setter","com.netflix.hystrix.HystrixCommand.Setter","NONE"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.Setter.threadPoolKey : HystrixThreadPoolKey","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.Setter.threadPoolPropertiesDefaults : HystrixThreadPoolProperties.Setter","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"DOC_UPDATE","JAVADOC: /**
         * Setter factory method with required values.
         * <p>
         * All optional arguments can be set via the chained methods.
         * 
         * @param groupKey
         *            {@link HystrixCommandGroupKey} used to group together multiple {@link HystrixCommand} objects.
         *            <p>
         *            The {@link HystrixCommandGroupKey} is used to represent a common relationship between commands. For example, a library or team name, the system all related commands interace
         *            with,
         *            common business purpose etc.
         */","METHOD: com.netflix.hystrix.HystrixCommand.Setter.withGroupKey(HystrixCommandGroupKey)","com.netflix.hystrix.HystrixCommand.Setter.withGroupKey(HystrixCommandGroupKey)","NONE"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.Setter.Setter(HystrixCommandGroupKey)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"DOC_UPDATE","JAVADOC: /**
         * Setter factory method containing required values.
         * <p>
         * All optional arguments can be set via the chained methods.
         * 
         * @param groupKey
         *            {@link HystrixCommandGroupKey} used to group together multiple {@link HystrixCommand} objects.
         *            <p>
         *            The {@link HystrixCommandGroupKey} is used to represent a common relationship between commands. For example, a library or team name, the system all related commands interace
         *            with,
         *            common business purpose etc.
         */","METHOD: com.netflix.hystrix.HystrixCommand.Setter.Setter(HystrixCommandGroupKey)","com.netflix.hystrix.HystrixCommand.Setter.Setter(HystrixCommandGroupKey)","NONE"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.Setter.commandPropertiesDefaults : HystrixCommandProperties.Setter","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"DOC_UPDATE","JAVADOC: /**
         * @param commandKey
         *            {@link HystrixCommandKey} used to identify a {@link HystrixCommand} instance for statistics, circuit-breaker, properties, etc.
         *            <p>
         *            By default this will be derived from the instance class name.
         *            <p>
         *            NOTE: Every unique {@link HystrixCommandKey} will result in new instances of {@link HystrixCircuitBreaker}, {@link HystrixCommandMetrics} and {@link HystrixCommandProperties}.
         *            Thus,
         *            the number of variants should be kept to a finite and reasonable number to avoid high-memory usage or memory leacks.
         *            <p>
         *            Hundreds of keys is fine, tens of thousands is probably not.
         * @return Setter for fluent interface via method chaining
         */","METHOD: com.netflix.hystrix.HystrixCommand.Setter.andCommandKey(HystrixCommandKey)","com.netflix.hystrix.HystrixCommand.Setter.andCommandKey(HystrixCommandKey)","NONE"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.Setter.commandKey : HystrixCommandKey","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"DOC_UPDATE","JAVADOC: /**
         * Optional
         * 
         * @param commandPropertiesDefaults
         *            {@link HystrixCommandProperties.Setter} with property overrides for this specific instance of {@link HystrixCommand}.
         *            <p>
         *            See the {@link HystrixPropertiesStrategy} JavaDocs for more information on properties and order of precedence.
         * @return Setter for fluent interface via method chaining
         */","METHOD: com.netflix.hystrix.HystrixCommand.Setter.andCommandPropertiesDefaults(HystrixCommandProperties.Setter)","com.netflix.hystrix.HystrixCommand.Setter.andCommandPropertiesDefaults(HystrixCommandProperties.Setter)","NONE"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"DOC_UPDATE","JAVADOC: /**
         * Optional
         * 
         * @param threadPoolPropertiesDefaults
         *            {@link HystrixThreadPoolProperties.Setter} with property overrides for the {@link HystrixThreadPool} used by this specific instance of {@link HystrixCommand}.
         *            <p>
         *            See the {@link HystrixPropertiesStrategy} JavaDocs for more information on properties and order of precedence.
         * @return Setter for fluent interface via method chaining
         */","METHOD: com.netflix.hystrix.HystrixCommand.Setter.andThreadPoolPropertiesDefaults(HystrixThreadPoolProperties.Setter)","com.netflix.hystrix.HystrixCommand.Setter.andThreadPoolPropertiesDefaults(HystrixThreadPoolProperties.Setter)","NONE"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.Setter.groupKey : HystrixCommandGroupKey","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_UPDATE","RETURN_STATEMENT: toObservable(Schedulers.threadPoolForComputation());","THEN_STATEMENT: properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD)","com.netflix.hystrix.HystrixCommand.toObservable()","LOW"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"RETURN_TYPE_DELETE","SINGLE_TYPE: com.netflix.hystrix.HystrixCommand.subscribeWithSemaphoreIsolation(Subscriber<? super R>): Subscription","METHOD: com.netflix.hystrix.HystrixCommand.subscribeWithSemaphoreIsolation(Observer<? super R>)","com.netflix.hystrix.HystrixCommand.subscribeWithSemaphoreIsolation(Subscriber<? super R>)","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: observer: Observer<? super R>","PARAMETER: observer","com.netflix.hystrix.HystrixCommand.subscribeWithSemaphoreIsolation(Subscriber<? super R>)","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"COMMENT_DELETE","LINE_COMMENT: // empty subscription since we executed synchronously","BODY: ","com.netflix.hystrix.HystrixCommand.subscribeWithSemaphoreIsolation(Subscriber<? super R>)","NONE"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","RETURN_STATEMENT: Subscriptions.empty();","BODY: ","com.netflix.hystrix.HystrixCommand.subscribeWithSemaphoreIsolation(Subscriber<? super R>)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"COMMENT_DELETE","LINE_COMMENT: // empty subscription since we executed synchronously","CATCH_CLAUSE: Exception","com.netflix.hystrix.HystrixCommand.subscribeWithSemaphoreIsolation(Subscriber<? super R>)","NONE"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","RETURN_STATEMENT: Subscriptions.empty();","CATCH_CLAUSE: Exception","com.netflix.hystrix.HystrixCommand.subscribeWithSemaphoreIsolation(Subscriber<? super R>)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"COMMENT_DELETE","LINE_COMMENT: // empty subscription since we executed synchronously","ELSE_STATEMENT: executionSemaphore.tryAcquire()","com.netflix.hystrix.HystrixCommand.subscribeWithSemaphoreIsolation(Subscriber<? super R>)","NONE"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","RETURN_STATEMENT: Subscriptions.empty();","ELSE_STATEMENT: executionSemaphore.tryAcquire()","com.netflix.hystrix.HystrixCommand.subscribeWithSemaphoreIsolation(Subscriber<? super R>)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"RETURN_TYPE_DELETE","SINGLE_TYPE: com.netflix.hystrix.HystrixCommand.subscribeWithThreadIsolation(Subscriber<? super R>): Subscription","METHOD: com.netflix.hystrix.HystrixCommand.subscribeWithThreadIsolation(Observer<? super R>)","com.netflix.hystrix.HystrixCommand.subscribeWithThreadIsolation(Subscriber<? super R>)","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: observer: Observer<? super R>","PARAMETER: observer","com.netflix.hystrix.HystrixCommand.subscribeWithThreadIsolation(Subscriber<? super R>)","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_INSERT","METHOD_INVOCATION: observer.add(Subscriptions.create(new Action0() {
  public @Override void call() {
    f.cancel(properties.executionIsolationThreadInterruptOnTimeout().get());
  }
}));","BODY: ","com.netflix.hystrix.HystrixCommand.subscribeWithThreadIsolation(Subscriber<? super R>)","LOW"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","RETURN_STATEMENT: new Subscription() {
  public @Override void unsubscribe() {
    f.cancel(properties.executionIsolationThreadInterruptOnTimeout().get());
  }
};","BODY: ","com.netflix.hystrix.HystrixCommand.subscribeWithThreadIsolation(Subscriber<? super R>)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","RETURN_STATEMENT: Subscriptions.empty();","CATCH_CLAUSE: RejectedExecutionException","com.netflix.hystrix.HystrixCommand.subscribeWithThreadIsolation(Subscriber<? super R>)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","RETURN_STATEMENT: Subscriptions.empty();","CATCH_CLAUSE: Exception","com.netflix.hystrix.HystrixCommand.subscribeWithThreadIsolation(Subscriber<? super R>)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getProperties()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getCircuitBreaker()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.execute()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getThreadPoolKey()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isResponseShortCircuited()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getFailedExecutionException()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isResponseFromCache()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getExecutionSemaphore()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.recordExecutedCommand()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isExecutionComplete()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.markAsCollapsedCommand(int)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.queue()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getFallbackSemaphore()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isSuccessfulExecution()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getExecutionTimeInMilliseconds()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.observe()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getDefaultNameFromClass(Class<? extends HystrixCommand>)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isCircuitBreakerOpen()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getCommandKey()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.decomposeException(Exception)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isResponseRejected()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getCacheKey()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getExecutionEvents()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isFailedExecution()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getLogMessagePrefix()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isRequestCachingEnabled()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isExecutedInThread()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getMetrics()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getCommandGroup()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isResponseFromFallback()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isResponseTimedOut()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.recordTotalExecutionTime(long)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.isExecutedInThread : AtomicBoolean","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.executionSemaphorePerCircuit : ConcurrentHashMap<String, TryableSemaphore>","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.started : AtomicBoolean","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.executionSemaphoreOverride : TryableSemaphore","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.executionResult : ExecutionResult","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.fallbackSemaphorePerCircuit : ConcurrentHashMap<String, TryableSemaphore>","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.timeoutTimer : AtomicReference<Reference<TimerListener>>","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.threadPoolKey : HystrixThreadPoolKey","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.properties : HystrixCommandProperties","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.isExecutionComplete : AtomicBoolean","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.fallbackSemaphoreOverride : TryableSemaphore","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.metrics : HystrixCommandMetrics","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.commandKey : HystrixCommandKey","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.concurrencyStrategy : HystrixConcurrencyStrategy","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.commandGroup : HystrixCommandGroupKey","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.isCommandTimedOut : AtomicReference<TimedOutStatus>","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.circuitBreaker : HystrixCircuitBreaker","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.requestCache : HystrixRequestCache","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.defaultNameCache : ConcurrentHashMap<Class<? extends HystrixCommand>, String>","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.invocationStartTime : long","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.executionHook : HystrixCommandExecutionHook","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.threadPool : HystrixThreadPool","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.eventNotifier : HystrixEventNotifier","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.TimeoutOperator","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.TimeoutObservable","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.ExecutionResult","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.UnitTest","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.TryableSemaphore","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.ObservableCommand","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.CachedObservableOriginal","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.CachedObservableResponse","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"PARENT_INTERFACE_CHANGE","PARAMETERIZED_TYPE: OnSubscribeFunc<T>","SUPER_INTERFACE_TYPES: ","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_ORDERING_CHANGE","IF_STATEMENT: subscription.isUnsubscribed()","WHILE_STATEMENT: true","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.setException(Exception)","LOW"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_ORDERING_CHANGE","IF_STATEMENT: subscription.isUnsubscribed()","WHILE_STATEMENT: true","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.setResponse(T)","LOW"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"METHOD_RENAMING","METHOD: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.onSubscribe(Observer<? super T>)","METHOD: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.onSubscribe(Observer<? super T>)","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.call(Subscriber<? super T>)","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"RETURN_TYPE_DELETE","SINGLE_TYPE: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.call(Subscriber<? super T>): Subscription","METHOD: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.onSubscribe(Observer<? super T>)","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.call(Subscriber<? super T>)","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: observer: Observer<? super T>","PARAMETER: observer","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.call(Subscriber<? super T>)","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_INSERT","METHOD_INVOCATION: observer.add(subscription);","METHOD: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.onSubscribe(Observer<? super T>)","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.call(Subscriber<? super T>)","LOW"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"COMMENT_DELETE","LINE_COMMENT: // we'll retry","METHOD: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.onSubscribe(Observer<? super T>)","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.call(Subscriber<? super T>)","NONE"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","RETURN_STATEMENT: subscription;","METHOD: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.onSubscribe(Observer<? super T>)","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.call(Subscriber<? super T>)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_CLASS","CLASS: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.UnitTest","CLASS: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixRequestCache.UnitTest","CLASS: com.netflix.hystrix.HystrixRequestCache","com.netflix.hystrix.HystrixRequestCache","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCircuitBreaker.TestCircuitBreaker","CLASS: com.netflix.hystrix.HystrixCircuitBreaker","com.netflix.hystrix.HystrixCircuitBreaker","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCircuitBreaker.UnitTest","CLASS: com.netflix.hystrix.HystrixCircuitBreaker","com.netflix.hystrix.HystrixCircuitBreaker","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_INSERT","VARIABLE_DECLARATION_STATEMENT: final LinkedList<HystrixCommandKey> list = currentCommand.get();","METHOD: com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","LOW"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_INSERT","RETURN_STATEMENT: new Action0() {
  public @Override void call() {
    endCurrentThreadExecutingCommand(list);
  }
};","METHOD: com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","LOW"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_INSERT","METHOD_INVOCATION: list.push(key);","BODY: ","com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","LOW"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","METHOD_INVOCATION: currentCommand.get().push(key);","BODY: ","com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"DOC_INSERT","JAVADOC: /**
     * 
     * @return Action0 to perform the same work as `endCurrentThreadExecutingCommand()` but can be done from any thread
     */","METHOD: com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","NONE"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"RETURN_TYPE_INSERT","SINGLE_TYPE: com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey): Action0","METHOD: com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","IF_STATEMENT: (! currentCommand.get().isEmpty())","BODY: ","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"COMMENT_DELETE","LINE_COMMENT: // this shouldn't be possible since we check for empty above and this is thread-isolated","CATCH_CLAUSE: NoSuchElementException","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","NONE"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","METHOD_INVOCATION: logger.debug("No command found to end.", e);","CATCH_CLAUSE: NoSuchElementException","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","CATCH_CLAUSE: NoSuchElementException","CATCH_CLAUSES: ","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","METHOD_INVOCATION: logger.warn("Unable to end command.", e);","CATCH_CLAUSE: Exception","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","CATCH_CLAUSE: Exception","CATCH_CLAUSES: ","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","TRY_STATEMENT: ","METHOD: com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_PARENT_CHANGE","METHOD_INVOCATION: currentCommand.get().pop();","THEN_STATEMENT: (! currentCommand.get().isEmpty())","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_UPDATE","METHOD_INVOCATION: currentCommand.get().pop();","METHOD: com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","LOW"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand(LinkedList<HystrixCommandKey>)","CLASS: com.netflix.hystrix.Hystrix","com.netflix.hystrix.Hystrix","LOW"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_CLASS","CLASS: com.netflix.hystrix.Hystrix.UnitTest","CLASS: com.netflix.hystrix.Hystrix","com.netflix.hystrix.Hystrix","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"CONDITION_EXPRESSION_CHANGE","FOREACH_STATEMENT: HystrixCommand<?> command:executedCommands","BODY: ","com.netflix.hystrix.HystrixRequestLog.getExecutedCommandsAsString()","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixRequestLog.MAX_STORAGE : int","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: command: HystrixCommand<?>","PARAMETER: command","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(AbstractHystrixCommand<?>)","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"COMMENT_INSERT","LINE_COMMENT: // TODO remove this when deprecation completed","METHOD: com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixCommand<?>)","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(AbstractHystrixCommand<?>)","NONE"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_INSERT","IF_STATEMENT: (command instanceof HystrixCommand)","METHOD: com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixCommand<?>)","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(AbstractHystrixCommand<?>)","LOW"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_INSERT","IF_STATEMENT: (! executedCommands.offer((HystrixCommand<?>) command))","THEN_STATEMENT: (command instanceof HystrixCommand)","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(AbstractHystrixCommand<?>)","LOW"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"COMMENT_INSERT","LINE_COMMENT: // see RequestLog: Reduce Chance of Memory Leak https://github.com/Netflix/Hystrix/issues/53","THEN_STATEMENT: (! executedCommands.offer((HystrixCommand<?>) command))","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(AbstractHystrixCommand<?>)","NONE"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_INSERT","METHOD_INVOCATION: logger.warn((("RequestLog ignoring command after reaching limit of " + MAX_STORAGE) + ". See https://github.com/Netflix/Hystrix/issues/53 for more information."));","THEN_STATEMENT: (! executedCommands.offer((HystrixCommand<?>) command))","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(AbstractHystrixCommand<?>)","LOW"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"CONDITION_EXPRESSION_CHANGE","IF_STATEMENT: (! executedCommands.offer(command))","METHOD: com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixCommand<?>)","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(AbstractHystrixCommand<?>)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixRequestLog.getAllExecutedCommands()","CLASS: com.netflix.hystrix.HystrixRequestLog","com.netflix.hystrix.HystrixRequestLog","LOW"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixRequestLog.allExecutedCommands : LinkedBlockingQueue<AbstractHystrixCommand<?>>","CLASS: com.netflix.hystrix.HystrixRequestLog","com.netflix.hystrix.HystrixRequestLog","LOW"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixRequestLog.TestCommand","CLASS: com.netflix.hystrix.HystrixRequestLog","com.netflix.hystrix.HystrixRequestLog","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixRequestLog.UnitTest","CLASS: com.netflix.hystrix.HystrixRequestLog","com.netflix.hystrix.HystrixRequestLog","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVING_ATTRIBUTE_MODIFIABILITY","MODIFIER: final","MODIFIERS: ","com.netflix.hystrix.HystrixThreadPool.Factory.threadPools : ConcurrentHashMap<String, HystrixThreadPool>","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixThreadPool.Factory.threadPools : ConcurrentHashMap<String, HystrixThreadPool>","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_INSERT","ASSIGNMENT: this.scheduler = new HystrixContextScheduler(concurrencyStrategy, this);","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.HystrixThreadPoolDefault(HystrixThreadPoolKey,HystrixThreadPoolProperties.Setter)","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.HystrixThreadPoolDefault(HystrixThreadPoolKey,HystrixThreadPoolProperties.Setter)","LOW"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_INSERT","METHOD_INVOCATION: touchConfig();","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","LOW"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"COMMENT_DELETE","LINE_COMMENT: // allow us to change things via fast-properties by setting it each time","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","NONE"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","METHOD_INVOCATION: threadPool.setCorePoolSize(properties.coreSize().get());","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","METHOD_INVOCATION: threadPool.setMaximumPoolSize(properties.coreSize().get());","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"COMMENT_DELETE","LINE_COMMENT: // we always want maxSize the same as coreSize, we are not using a dynamically resizing pool","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","NONE"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_DELETE","METHOD_INVOCATION: threadPool.setKeepAliveTime(properties.keepAliveTimeMinutes().get(), TimeUnit.MINUTES);","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"COMMENT_DELETE","LINE_COMMENT: // this doesn't really matter since we're not resizing","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","NONE"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getScheduler()","CLASS: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault","LOW"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.touchConfig()","CLASS: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault","LOW"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.scheduler : Scheduler","CLASS: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault","LOW"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixThreadPool.getScheduler()","CLASS: com.netflix.hystrix.HystrixThreadPool","com.netflix.hystrix.HystrixThreadPool","LOW"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixThreadPool.UnitTest","CLASS: com.netflix.hystrix.HystrixThreadPool","com.netflix.hystrix.HystrixThreadPool","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"RETURN_TYPE_CHANGE","PARAMETERIZED_TYPE: com.netflix.hystrix.exception.HystrixRuntimeException.getImplementingClass(): Class<? extends HystrixCommand>","METHOD: com.netflix.hystrix.exception.HystrixRuntimeException.getImplementingClass()","com.netflix.hystrix.exception.HystrixRuntimeException.getImplementingClass()","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: commandClass: Class<? extends HystrixCommand>","PARAMETER: commandClass","com.netflix.hystrix.exception.HystrixRuntimeException.HystrixRuntimeException(FailureType,Class<? extends AbstractHystrixCommand>,String,Exception,Throwable)","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: commandClass: Class<? extends HystrixCommand>","PARAMETER: commandClass","com.netflix.hystrix.exception.HystrixRuntimeException.HystrixRuntimeException(FailureType,Class<? extends AbstractHystrixCommand>,String,Throwable,Throwable)","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"ATTRIBUTE_TYPE_CHANGE","PARAMETERIZED_TYPE: Class<? extends HystrixCommand>","FIELD: com.netflix.hystrix.exception.HystrixRuntimeException.commandClass : Class<? extends HystrixCommand>","com.netflix.hystrix.exception.HystrixRuntimeException.commandClass : Class<? extends AbstractHystrixCommand>","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCommandMetrics.UnitTest","CLASS: com.netflix.hystrix.HystrixCommandMetrics","com.netflix.hystrix.HystrixCommandMetrics","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory.getPublisherForThreadPool(HystrixThreadPoolKey,HystrixThreadPoolMetrics,HystrixThreadPoolProperties)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory.getPublisherForCommand(HystrixCommandKey,HystrixCommandGroupKey,HystrixCommandMetrics,HystrixCircuitBreaker,HystrixCommandProperties)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory.HystrixMetricsPublisherFactory(HystrixMetricsPublisher)","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_CLASS","CLASS: com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory.TestHystrixMetricsPublisher","CLASS: com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory","com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory","HIGH"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_CLASS","CLASS: com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory.UnitTest","CLASS: com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory","com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.HystrixPlugins.concurrencyStrategy : AtomicReference<HystrixConcurrencyStrategy>","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.HystrixPlugins.commandExecutionHook : AtomicReference<HystrixCommandExecutionHook>","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.HystrixPlugins.metricsPublisher : AtomicReference<HystrixMetricsPublisher>","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.HystrixPlugins.notifier : AtomicReference<HystrixEventNotifier>","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.HystrixPlugins.propertiesFactory : AtomicReference<HystrixPropertiesStrategy>","MEDIUM"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_CLASS","CLASS: com.netflix.hystrix.strategy.HystrixPlugins.UnitTest","CLASS: com.netflix.hystrix.strategy.HystrixPlugins","com.netflix.hystrix.strategy.HystrixPlugins","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"DOC_UPDATE","JAVADOC: /**
 * Wrap a {@link Scheduler} so that scheduled actions are wrapped with {@link HystrixContextFunc2} so that
 * the {@link HystrixRequestContext} is properly copied across threads (if they are used by the {@link Scheduler}).
 */","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","NONE"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"STATEMENT_INSERT","ASSIGNMENT: this.threadPool = null;","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.HystrixContextScheduler(HystrixConcurrencyStrategy,Scheduler)","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.HystrixContextScheduler(HystrixConcurrencyStrategy,Scheduler)","LOW"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.schedule(Action1<Inner>,long,TimeUnit)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","LOW"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.schedule(Action1<Inner>)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","LOW"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.HystrixContextScheduler(HystrixConcurrencyStrategy,HystrixThreadPool)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","LOW"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.schedule(T,Func2<? super Scheduler, ? super T, ? extends Subscription>)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.schedule(T,Func2<? super Scheduler, ? super T, ? extends Subscription>,long,TimeUnit)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.threadPool : HystrixThreadPool","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","LOW"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.HystrixContextInnerScheduler","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","LOW"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.InnerHystrixContextScheduler","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","LOW"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_CLASS","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixConcurrencyStrategy.UnitTest","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixConcurrencyStrategy","com.netflix.hystrix.strategy.concurrency.HystrixConcurrencyStrategy","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_CLASS","CLASS: com.netflix.hystrix.strategy.properties.HystrixPropertiesChainedArchaiusProperty.UnitTest","CLASS: com.netflix.hystrix.strategy.properties.HystrixPropertiesChainedArchaiusProperty","com.netflix.hystrix.strategy.properties.HystrixPropertiesChainedArchaiusProperty","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"REMOVED_CLASS","CLASS: com.netflix.hystrix.strategy.properties.HystrixProperty.UnitTest","CLASS: com.netflix.hystrix.strategy.properties.HystrixProperty","com.netflix.hystrix.strategy.properties.HystrixProperty","CRUCIAL"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onError(AbstractHystrixCommand<T>,FailureType,Exception)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","LOW"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onFallbackSuccess(AbstractHystrixCommand<T>,T)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","LOW"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onRunError(AbstractHystrixCommand<T>,Exception)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","LOW"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onComplete(AbstractHystrixCommand<T>,T)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","LOW"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onThreadStart(AbstractHystrixCommand<T>)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","LOW"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onStart(AbstractHystrixCommand<T>)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","LOW"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onRunSuccess(AbstractHystrixCommand<T>,T)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","LOW"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onRunStart(AbstractHystrixCommand<T>)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","LOW"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onFallbackError(AbstractHystrixCommand<T>,Exception)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","LOW"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onFallbackStart(AbstractHystrixCommand<T>)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","LOW"
350,6da5d760f80075571bf6e14d1360e1174a5545e8,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onThreadComplete(AbstractHystrixCommand<T>)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","LOW"
352,42eb8bdc7d6754ca7aeffd440afedf4273a3ee35,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommandTest.testObservableTimeoutNoFallbackThreadContext()","CLASS: com.netflix.hystrix.HystrixCommandTest","com.netflix.hystrix.HystrixCommandTest","CRUCIAL"
352,42eb8bdc7d6754ca7aeffd440afedf4273a3ee35,"STATEMENT_INSERT","RETURN_STATEMENT: Observable.from(false).subscribeOn(Schedulers.computation());","THEN_STATEMENT: (fallbackBehavior == FALLBACK_SUCCESS)","com.netflix.hystrix.HystrixObservableCommandTest.TestCommandWithTimeout.getFallback()","LOW"
352,42eb8bdc7d6754ca7aeffd440afedf4273a3ee35,"STATEMENT_DELETE","RETURN_STATEMENT: Observable.from(false);","THEN_STATEMENT: (fallbackBehavior == FALLBACK_SUCCESS)","com.netflix.hystrix.HystrixObservableCommandTest.TestCommandWithTimeout.getFallback()","MEDIUM"
352,42eb8bdc7d6754ca7aeffd440afedf4273a3ee35,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testObservableTimeoutNoFallbackThreadContext()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
352,42eb8bdc7d6754ca7aeffd440afedf4273a3ee35,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.testObservableTimeoutFallbackThreadContext()","CLASS: com.netflix.hystrix.HystrixObservableCommandTest","com.netflix.hystrix.HystrixObservableCommandTest","CRUCIAL"
352,42eb8bdc7d6754ca7aeffd440afedf4273a3ee35,"STATEMENT_UPDATE","METHOD_INVOCATION: System.out.println(("Executing => Commands: " + HystrixRequestLog.getCurrentRequest().getAllExecutedCommands()));","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixConcurrencyStrategyTest.SimpleCommand.run()","com.netflix.hystrix.strategy.concurrency.HystrixConcurrencyStrategyTest.SimpleCommand.run()","LOW"
352,42eb8bdc7d6754ca7aeffd440afedf4273a3ee35,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixConcurrencyStrategyTest.testThreadContextOnTimeout()","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixConcurrencyStrategyTest","com.netflix.hystrix.strategy.concurrency.HystrixConcurrencyStrategyTest","CRUCIAL"
352,42eb8bdc7d6754ca7aeffd440afedf4273a3ee35,"REMOVED_CLASS","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixConcurrencyStrategyTest.TimeoutCommand","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixConcurrencyStrategyTest","com.netflix.hystrix.strategy.concurrency.HystrixConcurrencyStrategyTest","CRUCIAL"
352,42eb8bdc7d6754ca7aeffd440afedf4273a3ee35,"COMMENT_DELETE","BLOCK_COMMENT: /*
             * Define the action to perform on timeout outside of the TimerListener to it can capture the HystrixRequestContext
             * of the calling thread which doesn't exist on the Timer thread.
             */","METHOD: com.netflix.hystrix.HystrixObservableCommand.HystrixObservableTimeoutOperator.call(Subscriber<? super R>)","com.netflix.hystrix.HystrixObservableCommand.HystrixObservableTimeoutOperator.call(Subscriber<? super R>)","NONE"
352,42eb8bdc7d6754ca7aeffd440afedf4273a3ee35,"STATEMENT_DELETE","VARIABLE_DECLARATION_STATEMENT: final HystrixContextRunnable timeoutRunnable = new HystrixContextRunnable(new Runnable() {
  public @Override void run() {
    try
      {
        Observable<R> v = originalCommand.getFallbackOrThrowException(HystrixEventType.TIMEOUT, FailureType.TIMEOUT, "timed-out", new TimeoutException());
        v.subscribeOn(new HystrixContextScheduler(originalCommand.concurrencyStrategy, Schedulers.computation())).subscribe(child);
      }
    catch (HystrixRuntimeException re)
      {
        child.onError(re);
      }
  }
});","METHOD: com.netflix.hystrix.HystrixObservableCommand.HystrixObservableTimeoutOperator.call(Subscriber<? super R>)","com.netflix.hystrix.HystrixObservableCommand.HystrixObservableTimeoutOperator.call(Subscriber<? super R>)","MEDIUM"
352,42eb8bdc7d6754ca7aeffd440afedf4273a3ee35,"COMMENT_DELETE","BLOCK_COMMENT: /*
                         * we subscribeOn the computation scheduler as we don't want to use the Timer thread, nor can we use the
                         * THREAD isolation pool as it may be saturated and that's the reason we're in fallback. The fallback logic
                         * should not perform IO and thus we run on the computation event loops.
                         */","METHOD: com.netflix.hystrix.HystrixObservableCommand.HystrixObservableTimeoutOperator.call(Subscriber<? super R>)","com.netflix.hystrix.HystrixObservableCommand.HystrixObservableTimeoutOperator.call(Subscriber<? super R>)","NONE"
352,42eb8bdc7d6754ca7aeffd440afedf4273a3ee35,"STATEMENT_UPDATE","VARIABLE_DECLARATION_STATEMENT: TimerListener listener = new TimerListener() {
  public @Override void tick() {
    if (originalCommand.isCommandTimedOut.compareAndSet(TimedOutStatus.NOT_EXECUTED, TimedOutStatus.TIMED_OUT))
        {
          originalCommand.metrics.markTimeout((System.currentTimeMillis() - originalCommand.invocationStartTime));
          originalCommand.recordTotalExecutionTime(originalCommand.invocationStartTime);
          timeoutRunnable.run();
        }
    s.unsubscribe();
  }
  public @Override int getIntervalTimeInMilliseconds() {
    return originalCommand.properties.executionIsolationThreadTimeoutInMilliseconds().get();
  }
};","METHOD: com.netflix.hystrix.HystrixObservableCommand.HystrixObservableTimeoutOperator.call(Subscriber<? super R>)","com.netflix.hystrix.HystrixObservableCommand.HystrixObservableTimeoutOperator.call(Subscriber<? super R>)","LOW"
352,42eb8bdc7d6754ca7aeffd440afedf4273a3ee35,"COMMENT_DELETE","BLOCK_COMMENT: /*
             * Define the action to perform on timeout outside of the TimerListener to it can capture the HystrixRequestContext
             * of the calling thread which doesn't exist on the Timer thread.
             */","METHOD: com.netflix.hystrix.HystrixCommand.TimeoutOperator.call(Subscriber<? super R>)","com.netflix.hystrix.HystrixCommand.TimeoutOperator.call(Subscriber<? super R>)","NONE"
352,42eb8bdc7d6754ca7aeffd440afedf4273a3ee35,"STATEMENT_DELETE","VARIABLE_DECLARATION_STATEMENT: final HystrixContextRunnable timeoutRunnable = new HystrixContextRunnable(new Runnable() {
  public @Override void run() {
    try
      {
        R v = originalCommand.getFallbackOrThrowException(HystrixEventType.TIMEOUT, FailureType.TIMEOUT, "timed-out", new TimeoutException());
        child.onNext(v);
        child.onCompleted();
      }
    catch (HystrixRuntimeException re)
      {
        child.onError(re);
      }
  }
});","METHOD: com.netflix.hystrix.HystrixCommand.TimeoutOperator.call(Subscriber<? super R>)","com.netflix.hystrix.HystrixCommand.TimeoutOperator.call(Subscriber<? super R>)","MEDIUM"
352,42eb8bdc7d6754ca7aeffd440afedf4273a3ee35,"STATEMENT_UPDATE","VARIABLE_DECLARATION_STATEMENT: TimerListener listener = new TimerListener() {
  public @Override void tick() {
    if (originalCommand.isCommandTimedOut.compareAndSet(TimedOutStatus.NOT_EXECUTED, TimedOutStatus.TIMED_OUT))
        {
          originalCommand.metrics.markTimeout((System.currentTimeMillis() - originalCommand.invocationStartTime));
          originalCommand.recordTotalExecutionTime(originalCommand.invocationStartTime);
          timeoutRunnable.run();
        }
    s.unsubscribe();
  }
  public @Override int getIntervalTimeInMilliseconds() {
    return originalCommand.properties.executionIsolationThreadTimeoutInMilliseconds().get();
  }
};","METHOD: com.netflix.hystrix.HystrixCommand.TimeoutOperator.call(Subscriber<? super R>)","com.netflix.hystrix.HystrixCommand.TimeoutOperator.call(Subscriber<? super R>)","LOW"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"STATEMENT_DELETE","VARIABLE_DECLARATION_STATEMENT: HystrixCommandKey key = Hystrix.getCurrentThreadExecutingCommand();","METHOD: com.netflix.hystrix.HystrixCommandTest.cleanup()","com.netflix.hystrix.HystrixCommandTest.cleanup()","MEDIUM"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"STATEMENT_DELETE","THROW_STATEMENT: new IllegalStateException(("should be null but got: " + key));","THEN_STATEMENT: (key != null)","com.netflix.hystrix.HystrixCommandTest.cleanup()","MEDIUM"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"STATEMENT_DELETE","IF_STATEMENT: (key != null)","METHOD: com.netflix.hystrix.HystrixCommandTest.cleanup()","com.netflix.hystrix.HystrixCommandTest.cleanup()","MEDIUM"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"STATEMENT_UPDATE","METHOD_INVOCATION: assertEquals((- 1), command.getExecutionTimeInMilliseconds());","BODY: ","com.netflix.hystrix.HystrixObservableCommandTest.testShortCircuitFallbackCounter()","LOW"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"STATEMENT_DELETE","VARIABLE_DECLARATION_STATEMENT: HystrixCommandKey key = Hystrix.getCurrentThreadExecutingCommand();","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.cleanup()","com.netflix.hystrix.HystrixObservableCommandTest.cleanup()","MEDIUM"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"STATEMENT_DELETE","THROW_STATEMENT: new IllegalStateException(("should be null but got: " + key));","THEN_STATEMENT: (key != null)","com.netflix.hystrix.HystrixObservableCommandTest.cleanup()","MEDIUM"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"STATEMENT_DELETE","IF_STATEMENT: (key != null)","METHOD: com.netflix.hystrix.HystrixObservableCommandTest.cleanup()","com.netflix.hystrix.HystrixObservableCommandTest.cleanup()","MEDIUM"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"STATEMENT_DELETE","VARIABLE_DECLARATION_STATEMENT: final AtomicReference<Action0> endCurrentThreadExecutingCommand = new AtomicReference<Action0>();","METHOD: com.netflix.hystrix.HystrixObservableCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixObservableCommand.toObservable(Scheduler,boolean)","MEDIUM"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"COMMENT_DELETE","LINE_COMMENT: // acquire a permit","METHOD: com.netflix.hystrix.HystrixObservableCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixObservableCommand.toObservable(Scheduler,boolean)","NONE"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"COMMENT_DELETE","LINE_COMMENT: // store the command that is being run","METHOD: com.netflix.hystrix.HystrixObservableCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixObservableCommand.toObservable(Scheduler,boolean)","NONE"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"COMMENT_DELETE","LINE_COMMENT: // release the semaphore
                                            // this is done here instead of below so that the acquire/release happens where it is guaranteed
                                            // and not affected by the conditional circuit-breaker checks, timeouts, etc","METHOD: com.netflix.hystrix.HystrixObservableCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixObservableCommand.toObservable(Scheduler,boolean)","NONE"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"COMMENT_DELETE","LINE_COMMENT: // debug only since we're throwing the exception and someone higher will do something with it
                        // retrieve a fallback or throw an exception if no fallback available","METHOD: com.netflix.hystrix.HystrixObservableCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixObservableCommand.toObservable(Scheduler,boolean)","NONE"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"COMMENT_DELETE","LINE_COMMENT: // if we executed we will record the execution time","METHOD: com.netflix.hystrix.HystrixObservableCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixObservableCommand.toObservable(Scheduler,boolean)","NONE"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"COMMENT_DELETE","BLOCK_COMMENT: /* execution time (must occur before terminal state otherwise a race condition can occur if requested by client) */","METHOD: com.netflix.hystrix.HystrixObservableCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixObservableCommand.toObservable(Scheduler,boolean)","NONE"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"COMMENT_DELETE","LINE_COMMENT: // pop the command that is being run","METHOD: com.netflix.hystrix.HystrixObservableCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixObservableCommand.toObservable(Scheduler,boolean)","NONE"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"COMMENT_DELETE","LINE_COMMENT: // record that we're completed","METHOD: com.netflix.hystrix.HystrixObservableCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixObservableCommand.toObservable(Scheduler,boolean)","NONE"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"COMMENT_MOVE","BLOCK_COMMENT: /* used to track userThreadExecutionTime */","METHOD: com.netflix.hystrix.HystrixObservableCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixObservableCommand.toObservable(Scheduler,boolean)","NONE"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"COMMENT_UPDATE","LINE_COMMENT: // don't like how this is being done

        // create an Observable that will lazily execute when subscribed to","METHOD: com.netflix.hystrix.HystrixObservableCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixObservableCommand.toObservable(Scheduler,boolean)","NONE"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"STATEMENT_UPDATE","VARIABLE_DECLARATION_STATEMENT: Observable<R> o = Observable.create(new OnSubscribe<R>() {
  public @Override void call(Subscriber<? super R> observer) {
    recordExecutedCommand();
    executionHook.onStart(_this);
    if (circuitBreaker.allowRequest())
        {
          final TryableSemaphore executionSemaphore = getExecutionSemaphore();
          if (executionSemaphore.tryAcquire())
              {
                try
                  {
                    invocationStartTime = System.currentTimeMillis();
                    endCurrentThreadExecutingCommand.set(Hystrix.startCurrentThreadExecutingCommand(getCommandKey()));
                    getRunObservableDecoratedForMetricsAndErrorHandling(observeOn).doOnTerminate(new Action0() {
  public @Override void call() {
    executionSemaphore.release();
  }
}).subscribe(observer);
                  }
                catch (RuntimeException e)
                  {
                    observer.onError(e);
                  }
              }
          else
              {
                metrics.markSemaphoreRejection();
                logger.debug("HystrixCommand Execution Rejection by Semaphore.");
                getFallbackOrThrowException(HystrixEventType.SEMAPHORE_REJECTED, FailureType.REJECTED_SEMAPHORE_EXECUTION, "could not acquire a semaphore for execution").subscribe(observer);
              }
        }
    else
        {
          metrics.markShortCircuited();
          try
            {
              getFallbackOrThrowException(HystrixEventType.SHORT_CIRCUITED, FailureType.SHORTCIRCUIT, "short-circuited").subscribe(observer);
            }
          catch (Exception e)
            {
              observer.onError(e);
            }
        }
  }
});","METHOD: com.netflix.hystrix.HystrixObservableCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixObservableCommand.toObservable(Scheduler,boolean)","LOW"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"STATEMENT_UPDATE","ASSIGNMENT: o = o.doOnTerminate(new Action0() {
  public @Override void call() {
    Reference<TimerListener> tl = timeoutTimer.get();
    if ((tl != null))
        {
          tl.clear();
        }
    try
      {
        if ((invocationStartTime > 0))
            {
              recordTotalExecutionTime(invocationStartTime);
            }
        if ((endCurrentThreadExecutingCommand.get() != null))
            {
              endCurrentThreadExecutingCommand.get().call();
            }
      }
    finally
      {
        metrics.decrementConcurrentExecutionCount();
        isExecutionComplete.set(true);
      }
  }
});","METHOD: com.netflix.hystrix.HystrixObservableCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixObservableCommand.toObservable(Scheduler,boolean)","LOW"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"STATEMENT_INSERT","VARIABLE_DECLARATION_STATEMENT: final TryableSemaphore executionSemaphore = getExecutionSemaphore();","METHOD: com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","LOW"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"COMMENT_INSERT","LINE_COMMENT: // acquire a permit","METHOD: com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","NONE"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"STATEMENT_INSERT","IF_STATEMENT: executionSemaphore.tryAcquire()","METHOD: com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","LOW"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"ALTERNATIVE_PART_INSERT","ELSE_STATEMENT: executionSemaphore.tryAcquire()","IF_STATEMENT: executionSemaphore.tryAcquire()","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","MEDIUM"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"COMMENT_INSERT","LINE_COMMENT: // store the command that is being run","THEN_STATEMENT: executionSemaphore.tryAcquire()","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","NONE"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"STATEMENT_INSERT","METHOD_INVOCATION: Hystrix.startCurrentThreadExecutingCommand(getCommandKey());","THEN_STATEMENT: executionSemaphore.tryAcquire()","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","LOW"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"COMMENT_INSERT","BLOCK_COMMENT: /* capture start time for logging */","THEN_STATEMENT: executionSemaphore.tryAcquire()","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","NONE"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"STATEMENT_INSERT","VARIABLE_DECLARATION_STATEMENT: final long startTime = System.currentTimeMillis();","THEN_STATEMENT: executionSemaphore.tryAcquire()","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","LOW"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"COMMENT_INSERT","LINE_COMMENT: // record that we're completed","THEN_STATEMENT: executionSemaphore.tryAcquire()","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","NONE"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"COMMENT_INSERT","BLOCK_COMMENT: /* execution time (must occur before terminal state otherwise a race condition can occur if requested by client) */","THEN_STATEMENT: executionSemaphore.tryAcquire()","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","NONE"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"COMMENT_INSERT","LINE_COMMENT: // pop the command that is being run","THEN_STATEMENT: executionSemaphore.tryAcquire()","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","NONE"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"COMMENT_INSERT","LINE_COMMENT: // release the semaphore","THEN_STATEMENT: executionSemaphore.tryAcquire()","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","NONE"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"STATEMENT_INSERT","METHOD_INVOCATION: metrics.markSemaphoreRejection();","ELSE_STATEMENT: executionSemaphore.tryAcquire()","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","LOW"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"STATEMENT_INSERT","METHOD_INVOCATION: logger.debug("HystrixCommand Execution Rejection by Semaphore.");","ELSE_STATEMENT: executionSemaphore.tryAcquire()","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","LOW"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"COMMENT_INSERT","LINE_COMMENT: // debug only since we're throwing the exception and someone higher will do something with it
            // retrieve a fallback or throw an exception if no fallback available","ELSE_STATEMENT: executionSemaphore.tryAcquire()","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","NONE"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"STATEMENT_INSERT","RETURN_STATEMENT: getFallbackOrThrowException(HystrixEventType.SEMAPHORE_REJECTED, FailureType.REJECTED_SEMAPHORE_EXECUTION, "could not acquire a semaphore for execution");","ELSE_STATEMENT: executionSemaphore.tryAcquire()","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","LOW"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"STATEMENT_PARENT_CHANGE","VARIABLE_DECLARATION_STATEMENT: final HystrixObservableCommand<R> _cmd = this;","METHOD: com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","MEDIUM"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"STATEMENT_PARENT_CHANGE","VARIABLE_DECLARATION_STATEMENT: final HystrixObservableCommand<R> _self = this;","METHOD: com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","MEDIUM"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"COMMENT_MOVE","LINE_COMMENT: // allow tracking how many concurrent threads are executing","METHOD: com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","NONE"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"STATEMENT_PARENT_CHANGE","METHOD_INVOCATION: metrics.incrementConcurrentExecutionCount();","METHOD: com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","MEDIUM"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"STATEMENT_PARENT_CHANGE","METHOD_INVOCATION: executionHook.onRunStart(this);","METHOD: com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","MEDIUM"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"STATEMENT_PARENT_CHANGE","VARIABLE_DECLARATION_STATEMENT: Observable<R> run = null;","METHOD: com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","MEDIUM"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"STATEMENT_PARENT_CHANGE","TRY_STATEMENT: ","METHOD: com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","MEDIUM"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"STATEMENT_PARENT_CHANGE","IF_STATEMENT: properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD)","METHOD: com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","MEDIUM"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"STATEMENT_PARENT_CHANGE","ASSIGNMENT: run = run.map(new Func1<R, R>() {
  public @Override R call(R t1) {
    return executionHook.onRunSuccess(_cmd, t1);
  }
}).doOnCompleted(new Action0() {
  public @Override void call() {
    if ((isCommandTimedOut.get() == TimedOutStatus.TIMED_OUT))
        {
        }
    else
        {
          long duration = (System.currentTimeMillis() - invocationStartTime);
          metrics.addCommandExecutionTime(duration);
          executionResult = executionResult.addEvents(HystrixEventType.SUCCESS);
          metrics.markSuccess(duration);
          circuitBreaker.markSuccess();
          eventNotifier.markCommandExecution(getCommandKey(), properties.executionIsolationStrategy().get(), (int) duration, executionResult.events);
        }
  }
}).onErrorResumeNext(new Func1<Throwable, Observable<R>>() {
  public @Override Observable<R> call(Throwable t) {
    Exception e = getExceptionFromThrowable(t);
    if ((e instanceof RejectedExecutionException))
        {
          metrics.markThreadPoolRejection();
          return getFallbackOrThrowException(HystrixEventType.THREAD_POOL_REJECTED, FailureType.REJECTED_THREAD_EXECUTION, "could not be queued for execution", e);
        }
    else
        if ((t instanceof HystrixBadRequestException))
            {
              try
                {
                  Exception decorated = executionHook.onRunError(_self, (Exception) t);
                  if ((decorated instanceof HystrixBadRequestException))
                      {
                        t = (HystrixBadRequestException) decorated;
                      }
                  else
                      {
                        logger.warn("ExecutionHook.onRunError returned an exception that was not an instance of HystrixBadRequestException so will be ignored.", decorated);
                      }
                }
              catch (Exception hookException)
                {
                  logger.warn("Error calling ExecutionHook.onRunError", hookException);
                }
              return Observable.error(t);
            }
        else
            {
              try
                {
                  e = executionHook.onRunError(_self, e);
                }
              catch (Exception hookException)
                {
                  logger.warn("Error calling ExecutionHook.endRunFailure", hookException);
                }
              if ((isCommandTimedOut.get() == TimedOutStatus.TIMED_OUT))
                  {
                    logger.debug("Error executing HystrixCommand.run() [TimedOut]. Proceeding to fallback logic ...", e);
                    return Observable.empty();
                  }
              else
                  {
                    logger.debug("Error executing HystrixCommand.run(). Proceeding to fallback logic ...", e);
                  }
              metrics.markFailure((System.currentTimeMillis() - invocationStartTime));
              executionResult = executionResult.setException(e);
              return getFallbackOrThrowException(HystrixEventType.FAILURE, FailureType.COMMAND_EXCEPTION, "failed", e);
            }
  }
}).map(new Func1<R, R>() {
  public @Override R call(R t1) {
    return executionHook.onComplete(_cmd, t1);
  }
});","METHOD: com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","MEDIUM"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"COMMENT_MOVE","LINE_COMMENT: // this must come before onErrorResumeNext as we only want successful onCompletes processed here","METHOD: com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","NONE"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"COMMENT_MOVE","LINE_COMMENT: // the command timed out in the wrapping thread so we will return immediately
                    // and not increment any of the counters below or other such logic","METHOD: com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","NONE"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"COMMENT_MOVE","LINE_COMMENT: // report success","METHOD: com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","NONE"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"COMMENT_MOVE","LINE_COMMENT: // mark on counter","METHOD: com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","NONE"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"COMMENT_MOVE","LINE_COMMENT: // use a fallback instead (or throw exception if not implemented)","METHOD: com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","NONE"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"COMMENT_MOVE","BLOCK_COMMENT: /*
                     * HystrixBadRequestException is treated differently and allowed to propagate without any stats tracking or fallback logic
                     */","METHOD: com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","NONE"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"COMMENT_MOVE","LINE_COMMENT: // http://jira/browse/API-4905 HystrixCommand: Error/Timeout Double-count if both occur
                        // this means we have already timed out then we don't count this error stat and we just return
                        // as this means the user-thread has already returned, we've already done fallback logic
                        // and we've already counted the timeout stat","METHOD: com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","NONE"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"COMMENT_MOVE","LINE_COMMENT: // report failure","METHOD: com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","NONE"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"COMMENT_MOVE","LINE_COMMENT: // record the exception","METHOD: com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","NONE"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"COMMENT_MOVE","LINE_COMMENT: // allow transforming the results via the executionHook whether it came from success or fallback","METHOD: com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","NONE"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"STATEMENT_PARENT_CHANGE","IF_STATEMENT: properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD)","METHOD: com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","MEDIUM"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"STATEMENT_PARENT_CHANGE","RETURN_STATEMENT: run;","METHOD: com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","MEDIUM"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"STATEMENT_UPDATE","ASSIGNMENT: run = run.map(new Func1<R, R>() {
  public @Override R call(R t1) {
    return executionHook.onRunSuccess(_cmd, t1);
  }
}).doOnCompleted(new Action0() {
  public @Override void call() {
    if ((isCommandTimedOut.get() == TimedOutStatus.TIMED_OUT))
        {
        }
    else
        {
          long duration = (System.currentTimeMillis() - invocationStartTime);
          metrics.addCommandExecutionTime(duration);
          executionResult = executionResult.addEvents(HystrixEventType.SUCCESS);
          metrics.markSuccess(duration);
          circuitBreaker.markSuccess();
          eventNotifier.markCommandExecution(getCommandKey(), properties.executionIsolationStrategy().get(), (int) duration, executionResult.events);
        }
  }
}).onErrorResumeNext(new Func1<Throwable, Observable<R>>() {
  public @Override Observable<R> call(Throwable t) {
    Exception e = getExceptionFromThrowable(t);
    if ((e instanceof RejectedExecutionException))
        {
          metrics.markThreadPoolRejection();
          return getFallbackOrThrowException(HystrixEventType.THREAD_POOL_REJECTED, FailureType.REJECTED_THREAD_EXECUTION, "could not be queued for execution", e);
        }
    else
        if ((t instanceof HystrixBadRequestException))
            {
              try
                {
                  Exception decorated = executionHook.onRunError(_self, (Exception) t);
                  if ((decorated instanceof HystrixBadRequestException))
                      {
                        t = (HystrixBadRequestException) decorated;
                      }
                  else
                      {
                        logger.warn("ExecutionHook.onRunError returned an exception that was not an instance of HystrixBadRequestException so will be ignored.", decorated);
                      }
                }
              catch (Exception hookException)
                {
                  logger.warn("Error calling ExecutionHook.onRunError", hookException);
                }
              return Observable.error(t);
            }
        else
            {
              try
                {
                  e = executionHook.onRunError(_self, e);
                }
              catch (Exception hookException)
                {
                  logger.warn("Error calling ExecutionHook.endRunFailure", hookException);
                }
              if ((isCommandTimedOut.get() == TimedOutStatus.TIMED_OUT))
                  {
                    logger.debug("Error executing HystrixCommand.run() [TimedOut]. Proceeding to fallback logic ...", e);
                    return Observable.empty();
                  }
              else
                  {
                    logger.debug("Error executing HystrixCommand.run(). Proceeding to fallback logic ...", e);
                  }
              metrics.markFailure((System.currentTimeMillis() - invocationStartTime));
              executionResult = executionResult.setException(e);
              return getFallbackOrThrowException(HystrixEventType.FAILURE, FailureType.COMMAND_EXCEPTION, "failed", e);
            }
  }
}).map(new Func1<R, R>() {
  public @Override R call(R t1) {
    return executionHook.onComplete(_cmd, t1);
  }
});","THEN_STATEMENT: executionSemaphore.tryAcquire()","com.netflix.hystrix.HystrixObservableCommand.getRunObservableDecoratedForMetricsAndErrorHandling(Scheduler)","LOW"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"STATEMENT_INSERT","METHOD_INVOCATION: currentCommand.get().push(key);","BODY: ","com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","LOW"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"STATEMENT_DELETE","VARIABLE_DECLARATION_STATEMENT: final LinkedList<HystrixCommandKey> list = currentCommand.get();","METHOD: com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","MEDIUM"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"STATEMENT_DELETE","METHOD_INVOCATION: list.push(key);","BODY: ","com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","MEDIUM"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"STATEMENT_DELETE","RETURN_STATEMENT: new Action0() {
  public @Override void call() {
    endCurrentThreadExecutingCommand(list);
  }
};","METHOD: com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","MEDIUM"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"DOC_DELETE","JAVADOC: /**
     * 
     * @return Action0 to perform the same work as `endCurrentThreadExecutingCommand()` but can be done from any thread
     */","METHOD: com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","NONE"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"RETURN_TYPE_DELETE","SINGLE_TYPE: com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey): Action0","METHOD: com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","com.netflix.hystrix.Hystrix.startCurrentThreadExecutingCommand(HystrixCommandKey)","HIGH"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"STATEMENT_INSERT","TRY_STATEMENT: ","METHOD: com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","LOW"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"STATEMENT_INSERT","IF_STATEMENT: (! currentCommand.get().isEmpty())","BODY: ","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","LOW"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"STATEMENT_INSERT","CATCH_CLAUSE: NoSuchElementException","CATCH_CLAUSES: ","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","LOW"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"STATEMENT_INSERT","CATCH_CLAUSE: Exception","CATCH_CLAUSES: ","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","LOW"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"COMMENT_INSERT","LINE_COMMENT: // this shouldn't be possible since we check for empty above and this is thread-isolated","CATCH_CLAUSE: NoSuchElementException","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","NONE"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"STATEMENT_INSERT","METHOD_INVOCATION: logger.debug("No command found to end.", e);","CATCH_CLAUSE: NoSuchElementException","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","LOW"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"STATEMENT_INSERT","METHOD_INVOCATION: logger.warn("Unable to end command.", e);","CATCH_CLAUSE: Exception","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","LOW"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"STATEMENT_PARENT_CHANGE","METHOD_INVOCATION: endCurrentThreadExecutingCommand(currentCommand.get());","METHOD: com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","MEDIUM"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"STATEMENT_UPDATE","METHOD_INVOCATION: endCurrentThreadExecutingCommand(currentCommand.get());","THEN_STATEMENT: (! currentCommand.get().isEmpty())","com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand()","LOW"
354,8bca0cb72348ea30f1af8175f5db07dce91f302c,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.Hystrix.endCurrentThreadExecutingCommand(LinkedList<HystrixCommandKey>)","CLASS: com.netflix.hystrix.Hystrix","com.netflix.hystrix.Hystrix","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_UPDATE","RETURN_STATEMENT: toObservable(Schedulers.computation());","METHOD: com.netflix.hystrix.HystrixCollapser.toObservable()","com.netflix.hystrix.HystrixCollapser.toObservable()","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCollapser.HystrixCollapser(HystrixCollapserKey,Scope,CollapserTimer,HystrixCollapserProperties.Setter)","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixCollapser.UnitTests","CLASS: com.netflix.hystrix.HystrixCollapser","com.netflix.hystrix.HystrixCollapser","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixTimer.executor : AtomicReference<ScheduledExecutor>","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixTimer.ScheduledExecutor","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixTimer.ScheduledExecutor.executor : ScheduledThreadPoolExecutor","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.util.HystrixTimer.UnitTest","CLASS: com.netflix.hystrix.util.HystrixTimer","com.netflix.hystrix.util.HystrixTimer","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.ExceptionThreadingUtility.attachCallingThreadStack(Throwable,StackTraceElement[])","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.util.ExceptionThreadingUtility.UnitTest","CLASS: com.netflix.hystrix.util.ExceptionThreadingUtility","com.netflix.hystrix.util.ExceptionThreadingUtility","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DOC_UPDATE","JAVADOC: /**
 * A number which can be used to track counters (increment) or set values over time.
 * <p>
 * It is "rolling" in the sense that a 'timeInMilliseconds' is given that you want to track (such as 10 seconds) and then that is broken into buckets (defaults to 10) so that the 10 second window
 * doesn't empty out and restart every 10 seconds, but instead every 1 second you have a new bucket added and one dropped so that 9 of the buckets remain and only the newest starts from scratch.
 * <p>
 * This is done so that the statistics are gathered over a rolling 10 second window with data being added/dropped in 1 second intervals (or whatever granularity is defined by the arguments) rather
 * than each 10 second window starting at 0 again.
 * <p>
 * Performance-wise this class is optimized for writes, not reads. This is done because it expects far higher write volume (thousands/second) than reads (a few per second).
 * <p>
 * For example, on each read to getSum/getCount it will iterate buckets to sum the data so that on writes we don't need to maintain the overall sum and pay the synchronization cost at each write to
 * ensure the sum is up-to-date when the read can easily iterate each bucket to get the sum when it needs it.
 * <p>
 * See UnitTest for usage and expected behavior examples.
 */","CLASS: com.netflix.hystrix.util.HystrixRollingNumber","com.netflix.hystrix.util.HystrixRollingNumber","NONE"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingNumber.timeInMilliseconds : HystrixProperty<Integer>","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingNumber.buckets : BucketCircularArray","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingNumber.getCurrentBucket()","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingNumber.numberOfBuckets : HystrixProperty<Integer>","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingNumber.HystrixRollingNumber(Time,int,int)","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingNumber.getBucketSizeInMilliseconds()","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.util.HystrixRollingNumber.UnitTest","CLASS: com.netflix.hystrix.util.HystrixRollingNumber","com.netflix.hystrix.util.HystrixRollingNumber","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.buckets : BucketCircularArray","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.PercentileSnapshot","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.PercentileSnapshot.PercentileSnapshot(Bucket[])","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.PercentileSnapshot.getMean()","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.PercentileSnapshot.PercentileSnapshot(int...)","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.HystrixRollingPercentile(Time,HystrixProperty<Integer>,HystrixProperty<Integer>,HystrixProperty<Integer>,HystrixProperty<Boolean>)","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.currentPercentileSnapshot : PercentileSnapshot","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.util.HystrixRollingPercentile.SampleDataHolder1","CLASS: com.netflix.hystrix.util.HystrixRollingPercentile","com.netflix.hystrix.util.HystrixRollingPercentile","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.util.HystrixRollingPercentile.SampleDataHolder2","CLASS: com.netflix.hystrix.util.HystrixRollingPercentile","com.netflix.hystrix.util.HystrixRollingPercentile","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.util.HystrixRollingPercentile.UnitTest","CLASS: com.netflix.hystrix.util.HystrixRollingPercentile","com.netflix.hystrix.util.HystrixRollingPercentile","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommandProperties.default_metricsRollingStatisticalWindow : Integer","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommandProperties.default_circuitBreakerForceClosed : Boolean","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommandProperties.Setter.Setter()","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommandProperties.Setter.getUnitTestPropertiesSetter()","CLASS: com.netflix.hystrix.HystrixCommandProperties.Setter","com.netflix.hystrix.HystrixCommandProperties.Setter","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommandProperties.Setter.asMock(Setter)","CLASS: com.netflix.hystrix.HystrixCommandProperties.Setter","com.netflix.hystrix.HystrixCommandProperties.Setter","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixCommandProperties.UnitTest","CLASS: com.netflix.hystrix.HystrixCommandProperties","com.netflix.hystrix.HystrixCommandProperties","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"PARENT_CLASS_DELETE","PARAMETERIZED_TYPE: AbstractHystrixCommand<R>","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DOC_UPDATE","JAVADOC: /**
 * Used to wrap code that will execute potentially risky functionality (typically meaning a service call over the network)
 * with fault and latency tolerance, statistics and performance metrics capture, circuit breaker and bulkhead functionality.
 * This command is essentially a blocking command but provides an Observable facade if used with  observe()
 * 
 * @param <R>
 *            the return type
 */","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","NONE"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_UPDATE","VARIABLE_DECLARATION_STATEMENT: Observable<R> o = Observable.create(new OnSubscribe<R>() {
  public @Override void call(Subscriber<? super R> observer) {
    try
      {
        invocationStartTime = System.currentTimeMillis();
        executionHook.onStart(_this);
        if ((! circuitBreaker.allowRequest()))
            {
              metrics.markShortCircuited();
              try
                {
                  observer.onNext(getFallbackOrThrowException(HystrixEventType.SHORT_CIRCUITED, FailureType.SHORTCIRCUIT, "short-circuited"));
                  observer.onCompleted();
                }
              catch (Exception e)
                {
                  observer.onError(e);
                }
            }
        else
            {
              try
                {
                  if (properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD))
                      {
                        subscribeWithThreadIsolation(observer);
                      }
                  else
                      {
                        subscribeWithSemaphoreIsolation(observer);
                      }
                }
              catch (RuntimeException e)
                {
                  observer.onError(e);
                }
            }
      }
    finally
      {
        recordExecutedCommand();
      }
  }
});","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_UPDATE","ASSIGNMENT: o = o.lift(new TimeoutOperator<R>(_this, performAsyncTimeout));","THEN_STATEMENT: properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: protected","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_INSERT","CONSTRUCTOR_INVOCATION: super();","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"COMMENT_INSERT","BLOCK_COMMENT: /*
         * CommandGroup initialization
         */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_INSERT","IF_STATEMENT: (group == null)","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"COMMENT_INSERT","BLOCK_COMMENT: /*
         * CommandKey initialization
         */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_INSERT","IF_STATEMENT: ((key == null) || key.name().trim().equals(""))","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"COMMENT_INSERT","BLOCK_COMMENT: /*
         * Properties initialization
         */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_INSERT","IF_STATEMENT: (propertiesStrategy == null)","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"COMMENT_INSERT","BLOCK_COMMENT: /*
         * ThreadPoolKey
         * 
         * This defines which thread-pool this command should run on.
         * 
         * It uses the HystrixThreadPoolKey if provided, then defaults to use HystrixCommandGroup.
         * 
         * It can then be overridden by a property if defined so it can be changed at runtime.
         */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_INSERT","IF_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"COMMENT_INSERT","BLOCK_COMMENT: /* strategy: HystrixEventNotifier */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_INSERT","ASSIGNMENT: this.eventNotifier = HystrixPlugins.getInstance().getEventNotifier();","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"COMMENT_INSERT","BLOCK_COMMENT: /* strategy: HystrixConcurrentStrategy */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_INSERT","ASSIGNMENT: this.concurrencyStrategy = HystrixPlugins.getInstance().getConcurrencyStrategy();","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"COMMENT_INSERT","BLOCK_COMMENT: /*
         * Metrics initialization
         */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_INSERT","IF_STATEMENT: (metrics == null)","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"COMMENT_INSERT","BLOCK_COMMENT: /*
         * CircuitBreaker initialization
         */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_INSERT","IF_STATEMENT: this.properties.circuitBreakerEnabled().get()","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"COMMENT_INSERT","BLOCK_COMMENT: /* strategy: HystrixMetricsPublisherCommand */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_INSERT","METHOD_INVOCATION: HystrixMetricsPublisherFactory.createOrRetrievePublisherForCommand(this.commandKey, this.commandGroup, this.metrics, this.circuitBreaker, this.properties);","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"COMMENT_INSERT","BLOCK_COMMENT: /* strategy: HystrixCommandExecutionHook */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_INSERT","IF_STATEMENT: (executionHook == null)","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"COMMENT_INSERT","BLOCK_COMMENT: /*
         * ThreadPool initialization
         */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_INSERT","IF_STATEMENT: (threadPool == null)","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"COMMENT_INSERT","BLOCK_COMMENT: /* fallback semaphore override if applicable */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_INSERT","ASSIGNMENT: this.fallbackSemaphoreOverride = fallbackSemaphore;","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"COMMENT_INSERT","BLOCK_COMMENT: /* execution semaphore override if applicable */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_INSERT","ASSIGNMENT: this.executionSemaphoreOverride = executionSemaphore;","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"COMMENT_INSERT","BLOCK_COMMENT: /* setup the request cache for this instance */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_INSERT","ASSIGNMENT: this.requestCache = HystrixRequestCache.getInstance(this.commandKey, this.concurrencyStrategy);","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ALTERNATIVE_PART_INSERT","ELSE_STATEMENT: (group == null)","IF_STATEMENT: (group == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ALTERNATIVE_PART_INSERT","ELSE_STATEMENT: ((key == null) || key.name().trim().equals(""))","IF_STATEMENT: ((key == null) || key.name().trim().equals(""))","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ALTERNATIVE_PART_INSERT","ELSE_STATEMENT: (propertiesStrategy == null)","IF_STATEMENT: (propertiesStrategy == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ALTERNATIVE_PART_INSERT","ELSE_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","IF_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ALTERNATIVE_PART_INSERT","ELSE_STATEMENT: (metrics == null)","IF_STATEMENT: (metrics == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ALTERNATIVE_PART_INSERT","ELSE_STATEMENT: this.properties.circuitBreakerEnabled().get()","IF_STATEMENT: this.properties.circuitBreakerEnabled().get()","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ALTERNATIVE_PART_INSERT","ELSE_STATEMENT: (executionHook == null)","IF_STATEMENT: (executionHook == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ALTERNATIVE_PART_INSERT","ELSE_STATEMENT: (threadPool == null)","IF_STATEMENT: (threadPool == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_INSERT","THROW_STATEMENT: new IllegalStateException("HystrixCommandGroup can not be NULL");","THEN_STATEMENT: (group == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_INSERT","ASSIGNMENT: this.commandGroup = group;","ELSE_STATEMENT: (group == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_INSERT","VARIABLE_DECLARATION_STATEMENT: final String keyName = getDefaultNameFromClass(getClass());","THEN_STATEMENT: ((key == null) || key.name().trim().equals(""))","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_INSERT","ASSIGNMENT: this.commandKey = HystrixCommandKey.Factory.asKey(keyName);","THEN_STATEMENT: ((key == null) || key.name().trim().equals(""))","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_INSERT","ASSIGNMENT: this.commandKey = key;","ELSE_STATEMENT: ((key == null) || key.name().trim().equals(""))","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_INSERT","ASSIGNMENT: this.properties = HystrixPropertiesFactory.getCommandProperties(this.commandKey, commandPropertiesDefaults);","THEN_STATEMENT: (propertiesStrategy == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"COMMENT_INSERT","LINE_COMMENT: // used for unit testing","ELSE_STATEMENT: (propertiesStrategy == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_INSERT","ASSIGNMENT: this.properties = propertiesStrategy.getCommandProperties(this.commandKey, commandPropertiesDefaults);","ELSE_STATEMENT: (propertiesStrategy == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"COMMENT_INSERT","LINE_COMMENT: // we don't have a property overriding the value so use either HystrixThreadPoolKey or HystrixCommandGroup","THEN_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_INSERT","IF_STATEMENT: (threadPoolKey == null)","THEN_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"COMMENT_INSERT","LINE_COMMENT: // we have a property defining the thread-pool so use it instead","ELSE_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_INSERT","ASSIGNMENT: this.threadPoolKey = HystrixThreadPoolKey.Factory.asKey(properties.executionIsolationThreadPoolKeyOverride().get());","ELSE_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_INSERT","ASSIGNMENT: this.metrics = HystrixCommandMetrics.getInstance(this.commandKey, this.commandGroup, this.properties);","THEN_STATEMENT: (metrics == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_INSERT","ASSIGNMENT: this.metrics = metrics;","ELSE_STATEMENT: (metrics == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_INSERT","IF_STATEMENT: (circuitBreaker == null)","THEN_STATEMENT: this.properties.circuitBreakerEnabled().get()","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_INSERT","ASSIGNMENT: this.circuitBreaker = new NoOpCircuitBreaker();","ELSE_STATEMENT: this.properties.circuitBreakerEnabled().get()","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_INSERT","ASSIGNMENT: this.executionHook = HystrixPlugins.getInstance().getCommandExecutionHook();","THEN_STATEMENT: (executionHook == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"COMMENT_INSERT","LINE_COMMENT: // used for unit testing","ELSE_STATEMENT: (executionHook == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_INSERT","ASSIGNMENT: this.executionHook = executionHook;","ELSE_STATEMENT: (executionHook == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"COMMENT_INSERT","LINE_COMMENT: // get the default implementation of HystrixThreadPool","THEN_STATEMENT: (threadPool == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_INSERT","ASSIGNMENT: this.threadPool = HystrixThreadPool.Factory.getInstance(this.threadPoolKey, threadPoolPropertiesDefaults);","THEN_STATEMENT: (threadPool == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_INSERT","ASSIGNMENT: this.threadPool = threadPool;","ELSE_STATEMENT: (threadPool == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ALTERNATIVE_PART_INSERT","ELSE_STATEMENT: (threadPoolKey == null)","IF_STATEMENT: (threadPoolKey == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ALTERNATIVE_PART_INSERT","ELSE_STATEMENT: (circuitBreaker == null)","IF_STATEMENT: (circuitBreaker == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
355,15898cf067d63a30b90efe37639f252aa39db24f,"COMMENT_INSERT","BLOCK_COMMENT: /* use HystrixCommandGroup if HystrixThreadPoolKey is null */","THEN_STATEMENT: (threadPoolKey == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_INSERT","ASSIGNMENT: this.threadPoolKey = HystrixThreadPoolKey.Factory.asKey(commandGroup.name());","THEN_STATEMENT: (threadPoolKey == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_INSERT","ASSIGNMENT: this.threadPoolKey = threadPoolKey;","ELSE_STATEMENT: (threadPoolKey == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"COMMENT_INSERT","LINE_COMMENT: // get the default implementation of HystrixCircuitBreaker","THEN_STATEMENT: (circuitBreaker == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_INSERT","ASSIGNMENT: this.circuitBreaker = HystrixCircuitBreaker.Factory.getInstance(this.commandKey, this.commandGroup, this.properties, this.metrics);","THEN_STATEMENT: (circuitBreaker == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_INSERT","ASSIGNMENT: this.circuitBreaker = circuitBreaker;","ELSE_STATEMENT: (circuitBreaker == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_DELETE","CONSTRUCTOR_INVOCATION: super(group, key, threadPoolKey, circuitBreaker, threadPool, commandPropertiesDefaults, threadPoolPropertiesDefaults, metrics, fallbackSemaphore, executionSemaphore, propertiesStrategy, executionHook);","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DOC_UPDATE","JAVADOC: /**
     * Fluent interface for arguments to the {@link HystrixObservableCommand} constructor.
     * <p>
     * The required arguments are set via the 'with' factory method and optional arguments via the 'and' chained methods.
     * <p>
     * Example:
     * <pre> {@code
     *  Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey("GroupName"))
                .andCommandKey(HystrixCommandKey.Factory.asKey("CommandName"))
                .andEventNotifier(notifier);
     * } </pre>
     */","CLASS: com.netflix.hystrix.HystrixCommand.Setter","com.netflix.hystrix.HystrixCommand.Setter","NONE"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: protected","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.Setter.threadPoolKey : HystrixThreadPoolKey","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: protected","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.Setter.threadPoolPropertiesDefaults : HystrixThreadPoolProperties.Setter","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DOC_UPDATE","JAVADOC: /**
         * Setter factory method with required values.
         * <p>
         * All optional arguments can be set via the chained methods.
         * 
         * @param groupKey
         *            {@link HystrixCommandGroupKey} used to group together multiple {@link HystrixObservableCommand} objects.
         *            <p>
         *            The {@link HystrixCommandGroupKey} is used to represent a common relationship between commands. For example, a library or team name, the system all related commands interace
         *            with,
         *            common business purpose etc.
         */","METHOD: com.netflix.hystrix.HystrixCommand.Setter.withGroupKey(HystrixCommandGroupKey)","com.netflix.hystrix.HystrixCommand.Setter.withGroupKey(HystrixCommandGroupKey)","NONE"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: protected","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.Setter.Setter(HystrixCommandGroupKey)","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DOC_UPDATE","JAVADOC: /**
         * Setter factory method containing required values.
         * <p>
         * All optional arguments can be set via the chained methods.
         * 
         * @param groupKey
         *            {@link HystrixCommandGroupKey} used to group together multiple {@link HystrixObservableCommand} objects.
         *            <p>
         *            The {@link HystrixCommandGroupKey} is used to represent a common relationship between commands. For example, a library or team name, the system all related commands interace
         *            with,
         *            common business purpose etc.
         */","METHOD: com.netflix.hystrix.HystrixCommand.Setter.Setter(HystrixCommandGroupKey)","com.netflix.hystrix.HystrixCommand.Setter.Setter(HystrixCommandGroupKey)","NONE"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: protected","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.Setter.commandPropertiesDefaults : HystrixCommandProperties.Setter","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DOC_UPDATE","JAVADOC: /**
         * @param commandKey
         *            {@link HystrixCommandKey} used to identify a {@link HystrixObservableCommand} instance for statistics, circuit-breaker, properties, etc.
         *            <p>
         *            By default this will be derived from the instance class name.
         *            <p>
         *            NOTE: Every unique {@link HystrixCommandKey} will result in new instances of {@link HystrixCircuitBreaker}, {@link HystrixCommandMetrics} and {@link HystrixCommandProperties}.
         *            Thus,
         *            the number of variants should be kept to a finite and reasonable number to avoid high-memory usage or memory leacks.
         *            <p>
         *            Hundreds of keys is fine, tens of thousands is probably not.
         * @return Setter for fluent interface via method chaining
         */","METHOD: com.netflix.hystrix.HystrixCommand.Setter.andCommandKey(HystrixCommandKey)","com.netflix.hystrix.HystrixCommand.Setter.andCommandKey(HystrixCommandKey)","NONE"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: protected","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.Setter.commandKey : HystrixCommandKey","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DOC_UPDATE","JAVADOC: /**
         * Optional
         * 
         * @param commandPropertiesDefaults
         *            {@link HystrixCommandProperties.Setter} with property overrides for this specific instance of {@link HystrixObservableCommand}.
         *            <p>
         *            See the {@link HystrixPropertiesStrategy} JavaDocs for more information on properties and order of precedence.
         * @return Setter for fluent interface via method chaining
         */","METHOD: com.netflix.hystrix.HystrixCommand.Setter.andCommandPropertiesDefaults(HystrixCommandProperties.Setter)","com.netflix.hystrix.HystrixCommand.Setter.andCommandPropertiesDefaults(HystrixCommandProperties.Setter)","NONE"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DOC_UPDATE","JAVADOC: /**
         * Optional
         * 
         * @param threadPoolPropertiesDefaults
         *            {@link HystrixThreadPoolProperties.Setter} with property overrides for the {@link HystrixThreadPool} used by this specific instance of {@link HystrixObservableCommand}.
         *            <p>
         *            See the {@link HystrixPropertiesStrategy} JavaDocs for more information on properties and order of precedence.
         * @return Setter for fluent interface via method chaining
         */","METHOD: com.netflix.hystrix.HystrixCommand.Setter.andThreadPoolPropertiesDefaults(HystrixThreadPoolProperties.Setter)","com.netflix.hystrix.HystrixCommand.Setter.andThreadPoolPropertiesDefaults(HystrixThreadPoolProperties.Setter)","NONE"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: protected","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.Setter.groupKey : HystrixCommandGroupKey","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_UPDATE","RETURN_STATEMENT: toObservable(Schedulers.computation());","THEN_STATEMENT: properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD)","com.netflix.hystrix.HystrixCommand.toObservable()","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"RETURN_TYPE_INSERT","SINGLE_TYPE: com.netflix.hystrix.HystrixCommand.subscribeWithSemaphoreIsolation(Observer<? super R>): Subscription","METHOD: com.netflix.hystrix.HystrixCommand.subscribeWithSemaphoreIsolation(Subscriber<? super R>)","com.netflix.hystrix.HystrixCommand.subscribeWithSemaphoreIsolation(Observer<? super R>)","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: observer: Subscriber<? super R>","PARAMETER: observer","com.netflix.hystrix.HystrixCommand.subscribeWithSemaphoreIsolation(Observer<? super R>)","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"COMMENT_INSERT","LINE_COMMENT: // empty subscription since we executed synchronously","ELSE_STATEMENT: executionSemaphore.tryAcquire()","com.netflix.hystrix.HystrixCommand.subscribeWithSemaphoreIsolation(Observer<? super R>)","NONE"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_INSERT","RETURN_STATEMENT: Subscriptions.empty();","ELSE_STATEMENT: executionSemaphore.tryAcquire()","com.netflix.hystrix.HystrixCommand.subscribeWithSemaphoreIsolation(Observer<? super R>)","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"COMMENT_INSERT","LINE_COMMENT: // empty subscription since we executed synchronously","BODY: ","com.netflix.hystrix.HystrixCommand.subscribeWithSemaphoreIsolation(Observer<? super R>)","NONE"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_INSERT","RETURN_STATEMENT: Subscriptions.empty();","BODY: ","com.netflix.hystrix.HystrixCommand.subscribeWithSemaphoreIsolation(Observer<? super R>)","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"COMMENT_INSERT","LINE_COMMENT: // empty subscription since we executed synchronously","CATCH_CLAUSE: Exception","com.netflix.hystrix.HystrixCommand.subscribeWithSemaphoreIsolation(Observer<? super R>)","NONE"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_INSERT","RETURN_STATEMENT: Subscriptions.empty();","CATCH_CLAUSE: Exception","com.netflix.hystrix.HystrixCommand.subscribeWithSemaphoreIsolation(Observer<? super R>)","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"RETURN_TYPE_INSERT","SINGLE_TYPE: com.netflix.hystrix.HystrixCommand.subscribeWithThreadIsolation(Observer<? super R>): Subscription","METHOD: com.netflix.hystrix.HystrixCommand.subscribeWithThreadIsolation(Subscriber<? super R>)","com.netflix.hystrix.HystrixCommand.subscribeWithThreadIsolation(Observer<? super R>)","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: observer: Subscriber<? super R>","PARAMETER: observer","com.netflix.hystrix.HystrixCommand.subscribeWithThreadIsolation(Observer<? super R>)","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_INSERT","RETURN_STATEMENT: new Subscription() {
  public @Override void unsubscribe() {
    f.cancel(properties.executionIsolationThreadInterruptOnTimeout().get());
  }
};","BODY: ","com.netflix.hystrix.HystrixCommand.subscribeWithThreadIsolation(Observer<? super R>)","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_INSERT","RETURN_STATEMENT: Subscriptions.empty();","CATCH_CLAUSE: RejectedExecutionException","com.netflix.hystrix.HystrixCommand.subscribeWithThreadIsolation(Observer<? super R>)","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_INSERT","RETURN_STATEMENT: Subscriptions.empty();","CATCH_CLAUSE: Exception","com.netflix.hystrix.HystrixCommand.subscribeWithThreadIsolation(Observer<? super R>)","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_DELETE","METHOD_INVOCATION: observer.add(Subscriptions.create(new Action0() {
  public @Override void call() {
    f.cancel(properties.executionIsolationThreadInterruptOnTimeout().get());
  }
}));","BODY: ","com.netflix.hystrix.HystrixCommand.subscribeWithThreadIsolation(Observer<? super R>)","MEDIUM"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getProperties()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getCircuitBreaker()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.execute()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getThreadPoolKey()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isResponseShortCircuited()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getFailedExecutionException()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isResponseFromCache()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getExecutionSemaphore()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.recordExecutedCommand()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isExecutionComplete()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.markAsCollapsedCommand(int)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.queue()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getFallbackSemaphore()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isSuccessfulExecution()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getExecutionTimeInMilliseconds()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.observe()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getDefaultNameFromClass(Class<? extends HystrixCommand>)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isCircuitBreakerOpen()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getCommandKey()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.decomposeException(Exception)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isResponseRejected()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getCacheKey()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getExecutionEvents()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isFailedExecution()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getLogMessagePrefix()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isRequestCachingEnabled()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isExecutedInThread()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getMetrics()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getCommandGroup()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isResponseFromFallback()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isResponseTimedOut()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.recordTotalExecutionTime(long)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.isExecutedInThread : AtomicBoolean","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.executionSemaphorePerCircuit : ConcurrentHashMap<String, TryableSemaphore>","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.started : AtomicBoolean","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.executionSemaphoreOverride : TryableSemaphore","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.executionResult : ExecutionResult","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.fallbackSemaphorePerCircuit : ConcurrentHashMap<String, TryableSemaphore>","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.timeoutTimer : AtomicReference<Reference<TimerListener>>","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.threadPoolKey : HystrixThreadPoolKey","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.properties : HystrixCommandProperties","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.isExecutionComplete : AtomicBoolean","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.fallbackSemaphoreOverride : TryableSemaphore","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.metrics : HystrixCommandMetrics","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.commandKey : HystrixCommandKey","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.concurrencyStrategy : HystrixConcurrencyStrategy","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.commandGroup : HystrixCommandGroupKey","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.isCommandTimedOut : AtomicReference<TimedOutStatus>","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.circuitBreaker : HystrixCircuitBreaker","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.requestCache : HystrixRequestCache","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.defaultNameCache : ConcurrentHashMap<Class<? extends HystrixCommand>, String>","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.invocationStartTime : long","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.executionHook : HystrixCommandExecutionHook","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.threadPool : HystrixThreadPool","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.eventNotifier : HystrixEventNotifier","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.TimeoutObservable","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.ExecutionResult","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.UnitTest","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.TryableSemaphore","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.ObservableCommand","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.CachedObservableOriginal","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.CachedObservableResponse","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.TimeoutOperator","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"PARENT_INTERFACE_CHANGE","PARAMETERIZED_TYPE: OnSubscribe<T>","SUPER_INTERFACE_TYPES: ","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction","CRUCIAL"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_ORDERING_CHANGE","IF_STATEMENT: subscription.isUnsubscribed()","WHILE_STATEMENT: true","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.setException(Exception)","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_ORDERING_CHANGE","IF_STATEMENT: subscription.isUnsubscribed()","WHILE_STATEMENT: true","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.setResponse(T)","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"METHOD_RENAMING","METHOD: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.call(Subscriber<? super T>)","METHOD: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.call(Subscriber<? super T>)","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.onSubscribe(Observer<? super T>)","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"RETURN_TYPE_INSERT","SINGLE_TYPE: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.onSubscribe(Observer<? super T>): Subscription","METHOD: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.call(Subscriber<? super T>)","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.onSubscribe(Observer<? super T>)","CRUCIAL"
355,15898cf067d63a30b90efe37639f252aa39db24f,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: observer: Subscriber<? super T>","PARAMETER: observer","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.onSubscribe(Observer<? super T>)","CRUCIAL"
355,15898cf067d63a30b90efe37639f252aa39db24f,"COMMENT_INSERT","LINE_COMMENT: // we'll retry","METHOD: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.call(Subscriber<? super T>)","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.onSubscribe(Observer<? super T>)","NONE"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_INSERT","RETURN_STATEMENT: subscription;","METHOD: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.call(Subscriber<? super T>)","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.onSubscribe(Observer<? super T>)","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_DELETE","METHOD_INVOCATION: observer.add(subscription);","METHOD: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.call(Subscriber<? super T>)","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.onSubscribe(Observer<? super T>)","MEDIUM"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.UnitTest","CLASS: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixRequestCache.UnitTest","CLASS: com.netflix.hystrix.HystrixRequestCache","com.netflix.hystrix.HystrixRequestCache","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixCircuitBreaker.TestCircuitBreaker","CLASS: com.netflix.hystrix.HystrixCircuitBreaker","com.netflix.hystrix.HystrixCircuitBreaker","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixCircuitBreaker.UnitTest","CLASS: com.netflix.hystrix.HystrixCircuitBreaker","com.netflix.hystrix.HystrixCircuitBreaker","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.Hystrix.UnitTest","CLASS: com.netflix.hystrix.Hystrix","com.netflix.hystrix.Hystrix","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"CONDITION_EXPRESSION_CHANGE","FOREACH_STATEMENT: AbstractHystrixCommand<?> command:allExecutedCommands","BODY: ","com.netflix.hystrix.HystrixRequestLog.getExecutedCommandsAsString()","MEDIUM"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixRequestLog.MAX_STORAGE : int","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: command: AbstractHystrixCommand<?>","PARAMETER: command","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixCommand<?>)","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"COMMENT_DELETE","LINE_COMMENT: // TODO remove this when deprecation completed","METHOD: com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(AbstractHystrixCommand<?>)","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixCommand<?>)","NONE"
355,15898cf067d63a30b90efe37639f252aa39db24f,"COMMENT_DELETE","LINE_COMMENT: // see RequestLog: Reduce Chance of Memory Leak https://github.com/Netflix/Hystrix/issues/53","THEN_STATEMENT: (! executedCommands.offer((HystrixCommand<?>) command))","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixCommand<?>)","NONE"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_DELETE","METHOD_INVOCATION: logger.warn((("RequestLog ignoring command after reaching limit of " + MAX_STORAGE) + ". See https://github.com/Netflix/Hystrix/issues/53 for more information."));","THEN_STATEMENT: (! executedCommands.offer((HystrixCommand<?>) command))","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixCommand<?>)","MEDIUM"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_DELETE","IF_STATEMENT: (! executedCommands.offer((HystrixCommand<?>) command))","THEN_STATEMENT: (command instanceof HystrixCommand)","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixCommand<?>)","MEDIUM"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_DELETE","IF_STATEMENT: (command instanceof HystrixCommand)","METHOD: com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(AbstractHystrixCommand<?>)","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixCommand<?>)","MEDIUM"
355,15898cf067d63a30b90efe37639f252aa39db24f,"CONDITION_EXPRESSION_CHANGE","IF_STATEMENT: (! allExecutedCommands.offer(command))","METHOD: com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(AbstractHystrixCommand<?>)","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixCommand<?>)","MEDIUM"
355,15898cf067d63a30b90efe37639f252aa39db24f,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixRequestLog.getAllExecutedCommands()","CLASS: com.netflix.hystrix.HystrixRequestLog","com.netflix.hystrix.HystrixRequestLog","CRUCIAL"
355,15898cf067d63a30b90efe37639f252aa39db24f,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixRequestLog.allExecutedCommands : LinkedBlockingQueue<AbstractHystrixCommand<?>>","CLASS: com.netflix.hystrix.HystrixRequestLog","com.netflix.hystrix.HystrixRequestLog","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixRequestLog.TestCommand","CLASS: com.netflix.hystrix.HystrixRequestLog","com.netflix.hystrix.HystrixRequestLog","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixRequestLog.UnitTest","CLASS: com.netflix.hystrix.HystrixRequestLog","com.netflix.hystrix.HystrixRequestLog","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixThreadPool.Factory.threadPools : ConcurrentHashMap<String, HystrixThreadPool>","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDING_ATTRIBUTE_MODIFIABILITY","MODIFIER: final","MODIFIERS: ","com.netflix.hystrix.HystrixThreadPool.Factory.threadPools : ConcurrentHashMap<String, HystrixThreadPool>","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_DELETE","ASSIGNMENT: this.scheduler = new HystrixContextScheduler(concurrencyStrategy, this);","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.HystrixThreadPoolDefault(HystrixThreadPoolKey,HystrixThreadPoolProperties.Setter)","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.HystrixThreadPoolDefault(HystrixThreadPoolKey,HystrixThreadPoolProperties.Setter)","MEDIUM"
355,15898cf067d63a30b90efe37639f252aa39db24f,"COMMENT_INSERT","LINE_COMMENT: // allow us to change things via fast-properties by setting it each time","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","NONE"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_INSERT","METHOD_INVOCATION: threadPool.setCorePoolSize(properties.coreSize().get());","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_INSERT","METHOD_INVOCATION: threadPool.setMaximumPoolSize(properties.coreSize().get());","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"COMMENT_INSERT","LINE_COMMENT: // we always want maxSize the same as coreSize, we are not using a dynamically resizing pool","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","NONE"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_INSERT","METHOD_INVOCATION: threadPool.setKeepAliveTime(properties.keepAliveTimeMinutes().get(), TimeUnit.MINUTES);","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"COMMENT_INSERT","LINE_COMMENT: // this doesn't really matter since we're not resizing","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","NONE"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_DELETE","METHOD_INVOCATION: touchConfig();","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getExecutor()","MEDIUM"
355,15898cf067d63a30b90efe37639f252aa39db24f,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.getScheduler()","CLASS: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault","CRUCIAL"
355,15898cf067d63a30b90efe37639f252aa39db24f,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.touchConfig()","CLASS: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault.scheduler : Scheduler","CLASS: com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault","com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixThreadPool.getScheduler()","CLASS: com.netflix.hystrix.HystrixThreadPool","com.netflix.hystrix.HystrixThreadPool","CRUCIAL"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixThreadPool.UnitTest","CLASS: com.netflix.hystrix.HystrixThreadPool","com.netflix.hystrix.HystrixThreadPool","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"RETURN_TYPE_CHANGE","PARAMETERIZED_TYPE: com.netflix.hystrix.exception.HystrixRuntimeException.getImplementingClass(): Class<? extends AbstractHystrixCommand>","METHOD: com.netflix.hystrix.exception.HystrixRuntimeException.getImplementingClass()","com.netflix.hystrix.exception.HystrixRuntimeException.getImplementingClass()","CRUCIAL"
355,15898cf067d63a30b90efe37639f252aa39db24f,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: commandClass: Class<? extends AbstractHystrixCommand>","PARAMETER: commandClass","com.netflix.hystrix.exception.HystrixRuntimeException.HystrixRuntimeException(FailureType,Class<? extends HystrixCommand>,String,Exception,Throwable)","CRUCIAL"
355,15898cf067d63a30b90efe37639f252aa39db24f,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: commandClass: Class<? extends AbstractHystrixCommand>","PARAMETER: commandClass","com.netflix.hystrix.exception.HystrixRuntimeException.HystrixRuntimeException(FailureType,Class<? extends HystrixCommand>,String,Throwable,Throwable)","CRUCIAL"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ATTRIBUTE_TYPE_CHANGE","PARAMETERIZED_TYPE: Class<? extends AbstractHystrixCommand>","FIELD: com.netflix.hystrix.exception.HystrixRuntimeException.commandClass : Class<? extends AbstractHystrixCommand>","com.netflix.hystrix.exception.HystrixRuntimeException.commandClass : Class<? extends HystrixCommand>","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixCommandMetrics.UnitTest","CLASS: com.netflix.hystrix.HystrixCommandMetrics","com.netflix.hystrix.HystrixCommandMetrics","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory.getPublisherForThreadPool(HystrixThreadPoolKey,HystrixThreadPoolMetrics,HystrixThreadPoolProperties)","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory.getPublisherForCommand(HystrixCommandKey,HystrixCommandGroupKey,HystrixCommandMetrics,HystrixCircuitBreaker,HystrixCommandProperties)","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory.HystrixMetricsPublisherFactory(HystrixMetricsPublisher)","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory.TestHystrixMetricsPublisher","CLASS: com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory","com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory.UnitTest","CLASS: com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory","com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.HystrixPlugins.concurrencyStrategy : AtomicReference<HystrixConcurrencyStrategy>","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.HystrixPlugins.commandExecutionHook : AtomicReference<HystrixCommandExecutionHook>","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.HystrixPlugins.metricsPublisher : AtomicReference<HystrixMetricsPublisher>","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.HystrixPlugins.notifier : AtomicReference<HystrixEventNotifier>","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DECREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.HystrixPlugins.propertiesFactory : AtomicReference<HystrixPropertiesStrategy>","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.strategy.HystrixPlugins.UnitTest","CLASS: com.netflix.hystrix.strategy.HystrixPlugins","com.netflix.hystrix.strategy.HystrixPlugins","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"DOC_UPDATE","JAVADOC: /**
 * Wrap a {@link Scheduler} so that scheduled actions are wrapped with {@link HystrixContexSchedulerAction} so that
 * the {@link HystrixRequestContext} is properly copied across threads (if they are used by the {@link Scheduler}).
 */","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","NONE"
355,15898cf067d63a30b90efe37639f252aa39db24f,"STATEMENT_DELETE","ASSIGNMENT: this.threadPool = null;","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.HystrixContextScheduler(HystrixConcurrencyStrategy,Scheduler)","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.HystrixContextScheduler(HystrixConcurrencyStrategy,Scheduler)","MEDIUM"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.schedule(T,Func2<? super Scheduler, ? super T, ? extends Subscription>)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.schedule(T,Func2<? super Scheduler, ? super T, ? extends Subscription>,long,TimeUnit)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.schedule(Action1<Inner>,long,TimeUnit)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","CRUCIAL"
355,15898cf067d63a30b90efe37639f252aa39db24f,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.schedule(Action1<Inner>)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","CRUCIAL"
355,15898cf067d63a30b90efe37639f252aa39db24f,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.HystrixContextScheduler(HystrixConcurrencyStrategy,HystrixThreadPool)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","CRUCIAL"
355,15898cf067d63a30b90efe37639f252aa39db24f,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.threadPool : HystrixThreadPool","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"REMOVED_CLASS","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.HystrixContextInnerScheduler","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","CRUCIAL"
355,15898cf067d63a30b90efe37639f252aa39db24f,"REMOVED_CLASS","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.InnerHystrixContextScheduler","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","HIGH"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixConcurrencyStrategy.UnitTest","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixConcurrencyStrategy","com.netflix.hystrix.strategy.concurrency.HystrixConcurrencyStrategy","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.strategy.properties.HystrixPropertiesChainedArchaiusProperty.UnitTest","CLASS: com.netflix.hystrix.strategy.properties.HystrixPropertiesChainedArchaiusProperty","com.netflix.hystrix.strategy.properties.HystrixPropertiesChainedArchaiusProperty","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.strategy.properties.HystrixProperty.UnitTest","CLASS: com.netflix.hystrix.strategy.properties.HystrixProperty","com.netflix.hystrix.strategy.properties.HystrixProperty","LOW"
355,15898cf067d63a30b90efe37639f252aa39db24f,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onError(AbstractHystrixCommand<T>,FailureType,Exception)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","CRUCIAL"
355,15898cf067d63a30b90efe37639f252aa39db24f,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onFallbackSuccess(AbstractHystrixCommand<T>,T)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","CRUCIAL"
355,15898cf067d63a30b90efe37639f252aa39db24f,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onRunError(AbstractHystrixCommand<T>,Exception)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","CRUCIAL"
355,15898cf067d63a30b90efe37639f252aa39db24f,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onComplete(AbstractHystrixCommand<T>,T)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","CRUCIAL"
355,15898cf067d63a30b90efe37639f252aa39db24f,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onThreadStart(AbstractHystrixCommand<T>)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","CRUCIAL"
355,15898cf067d63a30b90efe37639f252aa39db24f,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onStart(AbstractHystrixCommand<T>)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","CRUCIAL"
355,15898cf067d63a30b90efe37639f252aa39db24f,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onRunSuccess(AbstractHystrixCommand<T>,T)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","CRUCIAL"
355,15898cf067d63a30b90efe37639f252aa39db24f,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onRunStart(AbstractHystrixCommand<T>)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","CRUCIAL"
355,15898cf067d63a30b90efe37639f252aa39db24f,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onFallbackError(AbstractHystrixCommand<T>,Exception)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","CRUCIAL"
355,15898cf067d63a30b90efe37639f252aa39db24f,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onFallbackStart(AbstractHystrixCommand<T>)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","CRUCIAL"
355,15898cf067d63a30b90efe37639f252aa39db24f,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onThreadComplete(AbstractHystrixCommand<T>)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_UPDATE","RETURN_STATEMENT: toObservable(Schedulers.threadPoolForComputation());","METHOD: com.netflix.hystrix.HystrixCollapser.toObservable()","com.netflix.hystrix.HystrixCollapser.toObservable()","LOW"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCollapser.HystrixCollapser(HystrixCollapserKey,Scope,CollapserTimer,HystrixCollapserProperties.Setter)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCollapser.UnitTests","CLASS: com.netflix.hystrix.HystrixCollapser","com.netflix.hystrix.HystrixCollapser","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixTimer.executor : AtomicReference<ScheduledExecutor>","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixTimer.ScheduledExecutor","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixTimer.ScheduledExecutor.executor : ScheduledThreadPoolExecutor","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_CLASS","CLASS: com.netflix.hystrix.util.HystrixTimer.UnitTest","CLASS: com.netflix.hystrix.util.HystrixTimer","com.netflix.hystrix.util.HystrixTimer","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.ExceptionThreadingUtility.attachCallingThreadStack(Throwable,StackTraceElement[])","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_CLASS","CLASS: com.netflix.hystrix.util.ExceptionThreadingUtility.UnitTest","CLASS: com.netflix.hystrix.util.ExceptionThreadingUtility","com.netflix.hystrix.util.ExceptionThreadingUtility","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"DOC_UPDATE","JAVADOC: /**
 * A number which can be used to track counters (increment) or set values over time.
 * <p>
 * It is "rolling" in the sense that a 'timeInMilliseconds' is given that you want to track (such as 10 seconds) and then that is broken into buckets (defaults to 10) so that the 10 second window
 * doesn't empty out and restart every 10 seconds, but instead every 1 second you have a new bucket added and one dropped so that 9 of the buckets remain and only the newest starts from scratch.
 * <p>
 * This is done so that the statistics are gathered over a rolling 10 second window with data being added/dropped in 1 second intervals (or whatever granularity is defined by the arguments) rather
 * than each 10 second window starting at 0 again.
 * <p>
 * Performance-wise this class is optimized for writes, not reads. This is done because it expects far higher write volume (thousands/second) than reads (a few per second).
 * <p>
 * For example, on each read to getSum/getCount it will iterate buckets to sum the data so that on writes we don't need to maintain the overall sum and pay the synchronization cost at each write to
 * ensure the sum is up-to-date when the read can easily iterate each bucket to get the sum when it needs it.
 * <p>
 * See inner-class UnitTest for usage and expected behavior examples.
 */","CLASS: com.netflix.hystrix.util.HystrixRollingNumber","com.netflix.hystrix.util.HystrixRollingNumber","NONE"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingNumber.timeInMilliseconds : HystrixProperty<Integer>","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingNumber.buckets : BucketCircularArray","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingNumber.getCurrentBucket()","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingNumber.numberOfBuckets : HystrixProperty<Integer>","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingNumber.HystrixRollingNumber(Time,int,int)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingNumber.getBucketSizeInMilliseconds()","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_CLASS","CLASS: com.netflix.hystrix.util.HystrixRollingNumber.UnitTest","CLASS: com.netflix.hystrix.util.HystrixRollingNumber","com.netflix.hystrix.util.HystrixRollingNumber","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.buckets : BucketCircularArray","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.PercentileSnapshot","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.PercentileSnapshot.PercentileSnapshot(Bucket[])","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.PercentileSnapshot.getMean()","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.PercentileSnapshot.PercentileSnapshot(int...)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.HystrixRollingPercentile(Time,HystrixProperty<Integer>,HystrixProperty<Integer>,HystrixProperty<Integer>,HystrixProperty<Boolean>)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.util.HystrixRollingPercentile.currentPercentileSnapshot : PercentileSnapshot","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_CLASS","CLASS: com.netflix.hystrix.util.HystrixRollingPercentile.SampleDataHolder1","CLASS: com.netflix.hystrix.util.HystrixRollingPercentile","com.netflix.hystrix.util.HystrixRollingPercentile","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_CLASS","CLASS: com.netflix.hystrix.util.HystrixRollingPercentile.SampleDataHolder2","CLASS: com.netflix.hystrix.util.HystrixRollingPercentile","com.netflix.hystrix.util.HystrixRollingPercentile","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_CLASS","CLASS: com.netflix.hystrix.util.HystrixRollingPercentile.UnitTest","CLASS: com.netflix.hystrix.util.HystrixRollingPercentile","com.netflix.hystrix.util.HystrixRollingPercentile","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommandProperties.default_metricsRollingStatisticalWindow : Integer","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommandProperties.default_circuitBreakerForceClosed : Boolean","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommandProperties.Setter.Setter()","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommandProperties.Setter.getUnitTestPropertiesSetter()","CLASS: com.netflix.hystrix.HystrixCommandProperties.Setter","com.netflix.hystrix.HystrixCommandProperties.Setter","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommandProperties.Setter.asMock(Setter)","CLASS: com.netflix.hystrix.HystrixCommandProperties.Setter","com.netflix.hystrix.HystrixCommandProperties.Setter","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCommandProperties.UnitTest","CLASS: com.netflix.hystrix.HystrixCommandProperties","com.netflix.hystrix.HystrixCommandProperties","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"PARENT_CLASS_INSERT","PARAMETERIZED_TYPE: AbstractHystrixCommand<R>","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"DOC_UPDATE","JAVADOC: /**
 * Used to wrap code that will execute potentially risky functionality (typically meaning a service call over the network)
 * with fault and latency tolerance, statistics and performance metrics capture, circuit breaker and bulkhead functionality.
 * 
 * @param <R>
 *            the return type
 */","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","NONE"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_UPDATE","VARIABLE_DECLARATION_STATEMENT: Observable<R> o = Observable.create(new OnSubscribeFunc<R>() {
  public @Override Subscription onSubscribe(Observer<? super R> observer) {
    try
      {
        invocationStartTime = System.currentTimeMillis();
        executionHook.onStart(_this);
        if ((! circuitBreaker.allowRequest()))
            {
              metrics.markShortCircuited();
              try
                {
                  observer.onNext(getFallbackOrThrowException(HystrixEventType.SHORT_CIRCUITED, FailureType.SHORTCIRCUIT, "short-circuited"));
                  observer.onCompleted();
                }
              catch (Exception e)
                {
                  observer.onError(e);
                }
              return Subscriptions.empty();
            }
        else
            {
              try
                {
                  if (properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD))
                      {
                        return subscribeWithThreadIsolation(observer);
                      }
                  else
                      {
                        return subscribeWithSemaphoreIsolation(observer);
                      }
                }
              catch (RuntimeException e)
                {
                  observer.onError(e);
                  return Subscriptions.empty();
                }
            }
      }
    finally
      {
        recordExecutedCommand();
      }
  }
});","METHOD: com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_UPDATE","ASSIGNMENT: o = new TimeoutObservable<R>(o, _this, performAsyncTimeout);","THEN_STATEMENT: properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD)","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","LOW"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.toObservable(Scheduler,boolean)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_INSERT","CONSTRUCTOR_INVOCATION: super(group, key, threadPoolKey, circuitBreaker, threadPool, commandPropertiesDefaults, threadPoolPropertiesDefaults, metrics, fallbackSemaphore, executionSemaphore, propertiesStrategy, executionHook);","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","LOW"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_DELETE","CONSTRUCTOR_INVOCATION: super();","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"COMMENT_DELETE","BLOCK_COMMENT: /*
         * CommandGroup initialization
         */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_DELETE","THROW_STATEMENT: new IllegalStateException("HystrixCommandGroup can not be NULL");","THEN_STATEMENT: (group == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_DELETE","ASSIGNMENT: this.commandGroup = group;","ELSE_STATEMENT: (group == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: (group == null)","IF_STATEMENT: (group == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_DELETE","IF_STATEMENT: (group == null)","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"COMMENT_DELETE","BLOCK_COMMENT: /*
         * CommandKey initialization
         */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_DELETE","VARIABLE_DECLARATION_STATEMENT: final String keyName = getDefaultNameFromClass(getClass());","THEN_STATEMENT: ((key == null) || key.name().trim().equals(""))","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_DELETE","ASSIGNMENT: this.commandKey = HystrixCommandKey.Factory.asKey(keyName);","THEN_STATEMENT: ((key == null) || key.name().trim().equals(""))","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_DELETE","ASSIGNMENT: this.commandKey = key;","ELSE_STATEMENT: ((key == null) || key.name().trim().equals(""))","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: ((key == null) || key.name().trim().equals(""))","IF_STATEMENT: ((key == null) || key.name().trim().equals(""))","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_DELETE","IF_STATEMENT: ((key == null) || key.name().trim().equals(""))","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"COMMENT_DELETE","BLOCK_COMMENT: /*
         * Properties initialization
         */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_DELETE","ASSIGNMENT: this.properties = HystrixPropertiesFactory.getCommandProperties(this.commandKey, commandPropertiesDefaults);","THEN_STATEMENT: (propertiesStrategy == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"COMMENT_DELETE","LINE_COMMENT: // used for unit testing","ELSE_STATEMENT: (propertiesStrategy == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_DELETE","ASSIGNMENT: this.properties = propertiesStrategy.getCommandProperties(this.commandKey, commandPropertiesDefaults);","ELSE_STATEMENT: (propertiesStrategy == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: (propertiesStrategy == null)","IF_STATEMENT: (propertiesStrategy == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_DELETE","IF_STATEMENT: (propertiesStrategy == null)","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"COMMENT_DELETE","BLOCK_COMMENT: /*
         * ThreadPoolKey
         * 
         * This defines which thread-pool this command should run on.
         * 
         * It uses the HystrixThreadPoolKey if provided, then defaults to use HystrixCommandGroup.
         * 
         * It can then be overridden by a property if defined so it can be changed at runtime.
         */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"COMMENT_DELETE","LINE_COMMENT: // we don't have a property overriding the value so use either HystrixThreadPoolKey or HystrixCommandGroup","THEN_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"COMMENT_DELETE","BLOCK_COMMENT: /* use HystrixCommandGroup if HystrixThreadPoolKey is null */","THEN_STATEMENT: (threadPoolKey == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_DELETE","ASSIGNMENT: this.threadPoolKey = HystrixThreadPoolKey.Factory.asKey(commandGroup.name());","THEN_STATEMENT: (threadPoolKey == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_DELETE","ASSIGNMENT: this.threadPoolKey = threadPoolKey;","ELSE_STATEMENT: (threadPoolKey == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: (threadPoolKey == null)","IF_STATEMENT: (threadPoolKey == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_DELETE","IF_STATEMENT: (threadPoolKey == null)","THEN_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"COMMENT_DELETE","LINE_COMMENT: // we have a property defining the thread-pool so use it instead","ELSE_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_DELETE","ASSIGNMENT: this.threadPoolKey = HystrixThreadPoolKey.Factory.asKey(properties.executionIsolationThreadPoolKeyOverride().get());","ELSE_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","IF_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_DELETE","IF_STATEMENT: (this.properties.executionIsolationThreadPoolKeyOverride().get() == null)","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"COMMENT_DELETE","BLOCK_COMMENT: /* strategy: HystrixEventNotifier */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_DELETE","ASSIGNMENT: this.eventNotifier = HystrixPlugins.getInstance().getEventNotifier();","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"COMMENT_DELETE","BLOCK_COMMENT: /* strategy: HystrixConcurrentStrategy */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_DELETE","ASSIGNMENT: this.concurrencyStrategy = HystrixPlugins.getInstance().getConcurrencyStrategy();","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"COMMENT_DELETE","BLOCK_COMMENT: /*
         * Metrics initialization
         */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_DELETE","ASSIGNMENT: this.metrics = HystrixCommandMetrics.getInstance(this.commandKey, this.commandGroup, this.properties);","THEN_STATEMENT: (metrics == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_DELETE","ASSIGNMENT: this.metrics = metrics;","ELSE_STATEMENT: (metrics == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: (metrics == null)","IF_STATEMENT: (metrics == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_DELETE","IF_STATEMENT: (metrics == null)","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"COMMENT_DELETE","BLOCK_COMMENT: /*
         * CircuitBreaker initialization
         */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"COMMENT_DELETE","LINE_COMMENT: // get the default implementation of HystrixCircuitBreaker","THEN_STATEMENT: (circuitBreaker == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_DELETE","ASSIGNMENT: this.circuitBreaker = HystrixCircuitBreaker.Factory.getInstance(this.commandKey, this.commandGroup, this.properties, this.metrics);","THEN_STATEMENT: (circuitBreaker == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_DELETE","ASSIGNMENT: this.circuitBreaker = circuitBreaker;","ELSE_STATEMENT: (circuitBreaker == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: (circuitBreaker == null)","IF_STATEMENT: (circuitBreaker == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_DELETE","IF_STATEMENT: (circuitBreaker == null)","THEN_STATEMENT: this.properties.circuitBreakerEnabled().get()","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_DELETE","ASSIGNMENT: this.circuitBreaker = new NoOpCircuitBreaker();","ELSE_STATEMENT: this.properties.circuitBreakerEnabled().get()","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: this.properties.circuitBreakerEnabled().get()","IF_STATEMENT: this.properties.circuitBreakerEnabled().get()","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_DELETE","IF_STATEMENT: this.properties.circuitBreakerEnabled().get()","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"COMMENT_DELETE","BLOCK_COMMENT: /* strategy: HystrixMetricsPublisherCommand */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_DELETE","METHOD_INVOCATION: HystrixMetricsPublisherFactory.createOrRetrievePublisherForCommand(this.commandKey, this.commandGroup, this.metrics, this.circuitBreaker, this.properties);","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"COMMENT_DELETE","BLOCK_COMMENT: /* strategy: HystrixCommandExecutionHook */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_DELETE","ASSIGNMENT: this.executionHook = HystrixPlugins.getInstance().getCommandExecutionHook();","THEN_STATEMENT: (executionHook == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"COMMENT_DELETE","LINE_COMMENT: // used for unit testing","ELSE_STATEMENT: (executionHook == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_DELETE","ASSIGNMENT: this.executionHook = executionHook;","ELSE_STATEMENT: (executionHook == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: (executionHook == null)","IF_STATEMENT: (executionHook == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_DELETE","IF_STATEMENT: (executionHook == null)","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"COMMENT_DELETE","BLOCK_COMMENT: /*
         * ThreadPool initialization
         */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"COMMENT_DELETE","LINE_COMMENT: // get the default implementation of HystrixThreadPool","THEN_STATEMENT: (threadPool == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_DELETE","ASSIGNMENT: this.threadPool = HystrixThreadPool.Factory.getInstance(this.threadPoolKey, threadPoolPropertiesDefaults);","THEN_STATEMENT: (threadPool == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_DELETE","ASSIGNMENT: this.threadPool = threadPool;","ELSE_STATEMENT: (threadPool == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: (threadPool == null)","IF_STATEMENT: (threadPool == null)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_DELETE","IF_STATEMENT: (threadPool == null)","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"COMMENT_DELETE","BLOCK_COMMENT: /* fallback semaphore override if applicable */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_DELETE","ASSIGNMENT: this.fallbackSemaphoreOverride = fallbackSemaphore;","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"COMMENT_DELETE","BLOCK_COMMENT: /* execution semaphore override if applicable */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_DELETE","ASSIGNMENT: this.executionSemaphoreOverride = executionSemaphore;","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"COMMENT_DELETE","BLOCK_COMMENT: /* setup the request cache for this instance */","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_DELETE","ASSIGNMENT: this.requestCache = HystrixRequestCache.getInstance(this.commandKey, this.concurrencyStrategy);","METHOD: com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.HystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"DOC_UPDATE","JAVADOC: /**
     * Fluent interface for arguments to the {@link HystrixCommand} constructor.
     * <p>
     * The required arguments are set via the 'with' factory method and optional arguments via the 'and' chained methods.
     * <p>
     * Example:
     * <pre> {@code
     *  Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey("GroupName"))
                .andCommandKey(HystrixCommandKey.Factory.asKey("CommandName"))
                .andEventNotifier(notifier);
     * } </pre>
     */","CLASS: com.netflix.hystrix.HystrixCommand.Setter","com.netflix.hystrix.HystrixCommand.Setter","NONE"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.Setter.threadPoolKey : HystrixThreadPoolKey","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.Setter.threadPoolPropertiesDefaults : HystrixThreadPoolProperties.Setter","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"DOC_UPDATE","JAVADOC: /**
         * Setter factory method with required values.
         * <p>
         * All optional arguments can be set via the chained methods.
         * 
         * @param groupKey
         *            {@link HystrixCommandGroupKey} used to group together multiple {@link HystrixCommand} objects.
         *            <p>
         *            The {@link HystrixCommandGroupKey} is used to represent a common relationship between commands. For example, a library or team name, the system all related commands interace
         *            with,
         *            common business purpose etc.
         */","METHOD: com.netflix.hystrix.HystrixCommand.Setter.withGroupKey(HystrixCommandGroupKey)","com.netflix.hystrix.HystrixCommand.Setter.withGroupKey(HystrixCommandGroupKey)","NONE"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.Setter.Setter(HystrixCommandGroupKey)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"DOC_UPDATE","JAVADOC: /**
         * Setter factory method containing required values.
         * <p>
         * All optional arguments can be set via the chained methods.
         * 
         * @param groupKey
         *            {@link HystrixCommandGroupKey} used to group together multiple {@link HystrixCommand} objects.
         *            <p>
         *            The {@link HystrixCommandGroupKey} is used to represent a common relationship between commands. For example, a library or team name, the system all related commands interace
         *            with,
         *            common business purpose etc.
         */","METHOD: com.netflix.hystrix.HystrixCommand.Setter.Setter(HystrixCommandGroupKey)","com.netflix.hystrix.HystrixCommand.Setter.Setter(HystrixCommandGroupKey)","NONE"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.Setter.commandPropertiesDefaults : HystrixCommandProperties.Setter","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"DOC_UPDATE","JAVADOC: /**
         * @param commandKey
         *            {@link HystrixCommandKey} used to identify a {@link HystrixCommand} instance for statistics, circuit-breaker, properties, etc.
         *            <p>
         *            By default this will be derived from the instance class name.
         *            <p>
         *            NOTE: Every unique {@link HystrixCommandKey} will result in new instances of {@link HystrixCircuitBreaker}, {@link HystrixCommandMetrics} and {@link HystrixCommandProperties}.
         *            Thus,
         *            the number of variants should be kept to a finite and reasonable number to avoid high-memory usage or memory leacks.
         *            <p>
         *            Hundreds of keys is fine, tens of thousands is probably not.
         * @return Setter for fluent interface via method chaining
         */","METHOD: com.netflix.hystrix.HystrixCommand.Setter.andCommandKey(HystrixCommandKey)","com.netflix.hystrix.HystrixCommand.Setter.andCommandKey(HystrixCommandKey)","NONE"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.Setter.commandKey : HystrixCommandKey","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"DOC_UPDATE","JAVADOC: /**
         * Optional
         * 
         * @param commandPropertiesDefaults
         *            {@link HystrixCommandProperties.Setter} with property overrides for this specific instance of {@link HystrixCommand}.
         *            <p>
         *            See the {@link HystrixPropertiesStrategy} JavaDocs for more information on properties and order of precedence.
         * @return Setter for fluent interface via method chaining
         */","METHOD: com.netflix.hystrix.HystrixCommand.Setter.andCommandPropertiesDefaults(HystrixCommandProperties.Setter)","com.netflix.hystrix.HystrixCommand.Setter.andCommandPropertiesDefaults(HystrixCommandProperties.Setter)","NONE"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"DOC_UPDATE","JAVADOC: /**
         * Optional
         * 
         * @param threadPoolPropertiesDefaults
         *            {@link HystrixThreadPoolProperties.Setter} with property overrides for the {@link HystrixThreadPool} used by this specific instance of {@link HystrixCommand}.
         *            <p>
         *            See the {@link HystrixPropertiesStrategy} JavaDocs for more information on properties and order of precedence.
         * @return Setter for fluent interface via method chaining
         */","METHOD: com.netflix.hystrix.HystrixCommand.Setter.andThreadPoolPropertiesDefaults(HystrixThreadPoolProperties.Setter)","com.netflix.hystrix.HystrixCommand.Setter.andThreadPoolPropertiesDefaults(HystrixThreadPoolProperties.Setter)","NONE"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixCommand.Setter.groupKey : HystrixCommandGroupKey","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_UPDATE","RETURN_STATEMENT: toObservable(Schedulers.threadPoolForComputation());","THEN_STATEMENT: properties.executionIsolationStrategy().get().equals(ExecutionIsolationStrategy.THREAD)","com.netflix.hystrix.HystrixCommand.toObservable()","LOW"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"RETURN_TYPE_DELETE","SINGLE_TYPE: com.netflix.hystrix.HystrixCommand.subscribeWithSemaphoreIsolation(Subscriber<? super R>): Subscription","METHOD: com.netflix.hystrix.HystrixCommand.subscribeWithSemaphoreIsolation(Observer<? super R>)","com.netflix.hystrix.HystrixCommand.subscribeWithSemaphoreIsolation(Subscriber<? super R>)","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: observer: Observer<? super R>","PARAMETER: observer","com.netflix.hystrix.HystrixCommand.subscribeWithSemaphoreIsolation(Subscriber<? super R>)","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"COMMENT_DELETE","LINE_COMMENT: // empty subscription since we executed synchronously","BODY: ","com.netflix.hystrix.HystrixCommand.subscribeWithSemaphoreIsolation(Subscriber<? super R>)","NONE"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_DELETE","RETURN_STATEMENT: Subscriptions.empty();","BODY: ","com.netflix.hystrix.HystrixCommand.subscribeWithSemaphoreIsolation(Subscriber<? super R>)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"COMMENT_DELETE","LINE_COMMENT: // empty subscription since we executed synchronously","CATCH_CLAUSE: Exception","com.netflix.hystrix.HystrixCommand.subscribeWithSemaphoreIsolation(Subscriber<? super R>)","NONE"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_DELETE","RETURN_STATEMENT: Subscriptions.empty();","CATCH_CLAUSE: Exception","com.netflix.hystrix.HystrixCommand.subscribeWithSemaphoreIsolation(Subscriber<? super R>)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"COMMENT_DELETE","LINE_COMMENT: // empty subscription since we executed synchronously","ELSE_STATEMENT: executionSemaphore.tryAcquire()","com.netflix.hystrix.HystrixCommand.subscribeWithSemaphoreIsolation(Subscriber<? super R>)","NONE"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_DELETE","RETURN_STATEMENT: Subscriptions.empty();","ELSE_STATEMENT: executionSemaphore.tryAcquire()","com.netflix.hystrix.HystrixCommand.subscribeWithSemaphoreIsolation(Subscriber<? super R>)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"RETURN_TYPE_DELETE","SINGLE_TYPE: com.netflix.hystrix.HystrixCommand.subscribeWithThreadIsolation(Subscriber<? super R>): Subscription","METHOD: com.netflix.hystrix.HystrixCommand.subscribeWithThreadIsolation(Observer<? super R>)","com.netflix.hystrix.HystrixCommand.subscribeWithThreadIsolation(Subscriber<? super R>)","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: observer: Observer<? super R>","PARAMETER: observer","com.netflix.hystrix.HystrixCommand.subscribeWithThreadIsolation(Subscriber<? super R>)","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_INSERT","METHOD_INVOCATION: observer.add(Subscriptions.create(new Action0() {
  public @Override void call() {
    f.cancel(properties.executionIsolationThreadInterruptOnTimeout().get());
  }
}));","BODY: ","com.netflix.hystrix.HystrixCommand.subscribeWithThreadIsolation(Subscriber<? super R>)","LOW"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_DELETE","RETURN_STATEMENT: new Subscription() {
  public @Override void unsubscribe() {
    f.cancel(properties.executionIsolationThreadInterruptOnTimeout().get());
  }
};","BODY: ","com.netflix.hystrix.HystrixCommand.subscribeWithThreadIsolation(Subscriber<? super R>)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_DELETE","RETURN_STATEMENT: Subscriptions.empty();","CATCH_CLAUSE: RejectedExecutionException","com.netflix.hystrix.HystrixCommand.subscribeWithThreadIsolation(Subscriber<? super R>)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_DELETE","RETURN_STATEMENT: Subscriptions.empty();","CATCH_CLAUSE: Exception","com.netflix.hystrix.HystrixCommand.subscribeWithThreadIsolation(Subscriber<? super R>)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getProperties()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getCircuitBreaker()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.execute()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getThreadPoolKey()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isResponseShortCircuited()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getFailedExecutionException()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isResponseFromCache()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getExecutionSemaphore()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.recordExecutedCommand()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isExecutionComplete()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.markAsCollapsedCommand(int)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.queue()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getFallbackSemaphore()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isSuccessfulExecution()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getExecutionTimeInMilliseconds()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.observe()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getDefaultNameFromClass(Class<? extends HystrixCommand>)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isCircuitBreakerOpen()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getCommandKey()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.decomposeException(Exception)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isResponseRejected()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getCacheKey()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getExecutionEvents()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isFailedExecution()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getLogMessagePrefix()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isRequestCachingEnabled()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isExecutedInThread()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getMetrics()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.getCommandGroup()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isResponseFromFallback()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.isResponseTimedOut()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.recordTotalExecutionTime(long)","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.isExecutedInThread : AtomicBoolean","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.executionSemaphorePerCircuit : ConcurrentHashMap<String, TryableSemaphore>","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.started : AtomicBoolean","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.executionSemaphoreOverride : TryableSemaphore","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.executionResult : ExecutionResult","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.fallbackSemaphorePerCircuit : ConcurrentHashMap<String, TryableSemaphore>","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.timeoutTimer : AtomicReference<Reference<TimerListener>>","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.threadPoolKey : HystrixThreadPoolKey","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.properties : HystrixCommandProperties","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.isExecutionComplete : AtomicBoolean","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.fallbackSemaphoreOverride : TryableSemaphore","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.metrics : HystrixCommandMetrics","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.commandKey : HystrixCommandKey","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.concurrencyStrategy : HystrixConcurrencyStrategy","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.commandGroup : HystrixCommandGroupKey","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.isCommandTimedOut : AtomicReference<TimedOutStatus>","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.circuitBreaker : HystrixCircuitBreaker","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.requestCache : HystrixRequestCache","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.defaultNameCache : ConcurrentHashMap<Class<? extends HystrixCommand>, String>","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.invocationStartTime : long","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.executionHook : HystrixCommandExecutionHook","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.threadPool : HystrixThreadPool","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixCommand.eventNotifier : HystrixEventNotifier","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.TimeoutOperator","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.TimeoutObservable","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.ExecutionResult","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.UnitTest","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.TryableSemaphore","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.ObservableCommand","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.CachedObservableOriginal","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCommand.CachedObservableResponse","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"PARENT_INTERFACE_CHANGE","PARAMETERIZED_TYPE: OnSubscribeFunc<T>","SUPER_INTERFACE_TYPES: ","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_ORDERING_CHANGE","IF_STATEMENT: subscription.isUnsubscribed()","WHILE_STATEMENT: true","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.setException(Exception)","LOW"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_ORDERING_CHANGE","IF_STATEMENT: subscription.isUnsubscribed()","WHILE_STATEMENT: true","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.setResponse(T)","LOW"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"METHOD_RENAMING","METHOD: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.onSubscribe(Observer<? super T>)","METHOD: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.onSubscribe(Observer<? super T>)","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.call(Subscriber<? super T>)","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"RETURN_TYPE_DELETE","SINGLE_TYPE: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.call(Subscriber<? super T>): Subscription","METHOD: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.onSubscribe(Observer<? super T>)","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.call(Subscriber<? super T>)","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: observer: Observer<? super T>","PARAMETER: observer","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.call(Subscriber<? super T>)","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_INSERT","METHOD_INVOCATION: observer.add(subscription);","METHOD: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.onSubscribe(Observer<? super T>)","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.call(Subscriber<? super T>)","LOW"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"COMMENT_DELETE","LINE_COMMENT: // we'll retry","METHOD: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.onSubscribe(Observer<? super T>)","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.call(Subscriber<? super T>)","NONE"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_DELETE","RETURN_STATEMENT: subscription;","METHOD: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.onSubscribe(Observer<? super T>)","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.call(Subscriber<? super T>)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_CLASS","CLASS: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction.UnitTest","CLASS: com.netflix.hystrix.collapser.CollapsedRequestObservableFunction","com.netflix.hystrix.collapser.CollapsedRequestObservableFunction","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixRequestCache.UnitTest","CLASS: com.netflix.hystrix.HystrixRequestCache","com.netflix.hystrix.HystrixRequestCache","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCircuitBreaker.TestCircuitBreaker","CLASS: com.netflix.hystrix.HystrixCircuitBreaker","com.netflix.hystrix.HystrixCircuitBreaker","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCircuitBreaker.UnitTest","CLASS: com.netflix.hystrix.HystrixCircuitBreaker","com.netflix.hystrix.HystrixCircuitBreaker","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_CLASS","CLASS: com.netflix.hystrix.Hystrix.UnitTest","CLASS: com.netflix.hystrix.Hystrix","com.netflix.hystrix.Hystrix","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"CONDITION_EXPRESSION_CHANGE","FOREACH_STATEMENT: HystrixCommand<?> command:executedCommands","BODY: ","com.netflix.hystrix.HystrixRequestLog.getExecutedCommandsAsString()","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixRequestLog.MAX_STORAGE : int","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: command: HystrixCommand<?>","PARAMETER: command","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(AbstractHystrixCommand<?>)","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"COMMENT_INSERT","LINE_COMMENT: // TODO remove this when deprecation completed","METHOD: com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixCommand<?>)","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(AbstractHystrixCommand<?>)","NONE"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_INSERT","IF_STATEMENT: (command instanceof HystrixCommand)","METHOD: com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixCommand<?>)","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(AbstractHystrixCommand<?>)","LOW"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_INSERT","IF_STATEMENT: (! executedCommands.offer((HystrixCommand<?>) command))","THEN_STATEMENT: (command instanceof HystrixCommand)","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(AbstractHystrixCommand<?>)","LOW"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"COMMENT_INSERT","LINE_COMMENT: // see RequestLog: Reduce Chance of Memory Leak https://github.com/Netflix/Hystrix/issues/53","THEN_STATEMENT: (! executedCommands.offer((HystrixCommand<?>) command))","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(AbstractHystrixCommand<?>)","NONE"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"STATEMENT_INSERT","METHOD_INVOCATION: logger.warn((("RequestLog ignoring command after reaching limit of " + MAX_STORAGE) + ". See https://github.com/Netflix/Hystrix/issues/53 for more information."));","THEN_STATEMENT: (! executedCommands.offer((HystrixCommand<?>) command))","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(AbstractHystrixCommand<?>)","LOW"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"CONDITION_EXPRESSION_CHANGE","IF_STATEMENT: (! executedCommands.offer(command))","METHOD: com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixCommand<?>)","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(AbstractHystrixCommand<?>)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixRequestLog.getAllExecutedCommands()","CLASS: com.netflix.hystrix.HystrixRequestLog","com.netflix.hystrix.HystrixRequestLog","LOW"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"ADDITIONAL_OBJECT_STATE","FIELD: com.netflix.hystrix.HystrixRequestLog.allExecutedCommands : LinkedBlockingQueue<AbstractHystrixCommand<?>>","CLASS: com.netflix.hystrix.HystrixRequestLog","com.netflix.hystrix.HystrixRequestLog","LOW"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixRequestLog.TestCommand","CLASS: com.netflix.hystrix.HystrixRequestLog","com.netflix.hystrix.HystrixRequestLog","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixRequestLog.UnitTest","CLASS: com.netflix.hystrix.HystrixRequestLog","com.netflix.hystrix.HystrixRequestLog","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVING_ATTRIBUTE_MODIFIABILITY","MODIFIER: final","MODIFIERS: ","com.netflix.hystrix.HystrixThreadPool.Factory.threadPools : ConcurrentHashMap<String, HystrixThreadPool>","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.HystrixThreadPool.Factory.threadPools : ConcurrentHashMap<String, HystrixThreadPool>","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixThreadPool.UnitTest","CLASS: com.netflix.hystrix.HystrixThreadPool","com.netflix.hystrix.HystrixThreadPool","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"RETURN_TYPE_CHANGE","PARAMETERIZED_TYPE: com.netflix.hystrix.exception.HystrixRuntimeException.getImplementingClass(): Class<? extends HystrixCommand>","METHOD: com.netflix.hystrix.exception.HystrixRuntimeException.getImplementingClass()","com.netflix.hystrix.exception.HystrixRuntimeException.getImplementingClass()","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: commandClass: Class<? extends HystrixCommand>","PARAMETER: commandClass","com.netflix.hystrix.exception.HystrixRuntimeException.HystrixRuntimeException(FailureType,Class<? extends AbstractHystrixCommand>,String,Exception,Throwable)","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"PARAMETER_TYPE_CHANGE","PARAMETERIZED_TYPE: commandClass: Class<? extends HystrixCommand>","PARAMETER: commandClass","com.netflix.hystrix.exception.HystrixRuntimeException.HystrixRuntimeException(FailureType,Class<? extends AbstractHystrixCommand>,String,Throwable,Throwable)","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"ATTRIBUTE_TYPE_CHANGE","PARAMETERIZED_TYPE: Class<? extends HystrixCommand>","FIELD: com.netflix.hystrix.exception.HystrixRuntimeException.commandClass : Class<? extends HystrixCommand>","com.netflix.hystrix.exception.HystrixRuntimeException.commandClass : Class<? extends AbstractHystrixCommand>","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixCommandMetrics.UnitTest","CLASS: com.netflix.hystrix.HystrixCommandMetrics","com.netflix.hystrix.HystrixCommandMetrics","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory.getPublisherForThreadPool(HystrixThreadPoolKey,HystrixThreadPoolMetrics,HystrixThreadPoolProperties)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory.getPublisherForCommand(HystrixCommandKey,HystrixCommandGroupKey,HystrixCommandMetrics,HystrixCircuitBreaker,HystrixCommandProperties)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory.HystrixMetricsPublisherFactory(HystrixMetricsPublisher)","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_CLASS","CLASS: com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory.TestHystrixMetricsPublisher","CLASS: com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory","com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory","HIGH"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_CLASS","CLASS: com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory.UnitTest","CLASS: com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory","com.netflix.hystrix.strategy.metrics.HystrixMetricsPublisherFactory","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.HystrixPlugins.concurrencyStrategy : AtomicReference<HystrixConcurrencyStrategy>","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.HystrixPlugins.commandExecutionHook : AtomicReference<HystrixCommandExecutionHook>","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.HystrixPlugins.metricsPublisher : AtomicReference<HystrixMetricsPublisher>","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.HystrixPlugins.notifier : AtomicReference<HystrixEventNotifier>","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"INCREASING_ACCESSIBILITY_CHANGE","MODIFIER: private","MODIFIERS: ","com.netflix.hystrix.strategy.HystrixPlugins.propertiesFactory : AtomicReference<HystrixPropertiesStrategy>","MEDIUM"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_CLASS","CLASS: com.netflix.hystrix.strategy.HystrixPlugins.UnitTest","CLASS: com.netflix.hystrix.strategy.HystrixPlugins","com.netflix.hystrix.strategy.HystrixPlugins","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"DOC_UPDATE","JAVADOC: /**
 * Wrap a {@link Scheduler} so that scheduled actions are wrapped with {@link HystrixContextFunc2} so that
 * the {@link HystrixRequestContext} is properly copied across threads (if they are used by the {@link Scheduler}).
 */","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","NONE"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.schedule(Action1<Inner>,long,TimeUnit)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","LOW"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.schedule(Action1<Inner>)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","LOW"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.schedule(T,Func2<? super Scheduler, ? super T, ? extends Subscription>)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.schedule(T,Func2<? super Scheduler, ? super T, ? extends Subscription>,long,TimeUnit)","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.HystrixContextInnerScheduler","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","LOW"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler.InnerHystrixContextScheduler","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","com.netflix.hystrix.strategy.concurrency.HystrixContextScheduler","LOW"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_CLASS","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixConcurrencyStrategy.UnitTest","CLASS: com.netflix.hystrix.strategy.concurrency.HystrixConcurrencyStrategy","com.netflix.hystrix.strategy.concurrency.HystrixConcurrencyStrategy","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_CLASS","CLASS: com.netflix.hystrix.strategy.properties.HystrixPropertiesChainedArchaiusProperty.UnitTest","CLASS: com.netflix.hystrix.strategy.properties.HystrixPropertiesChainedArchaiusProperty","com.netflix.hystrix.strategy.properties.HystrixPropertiesChainedArchaiusProperty","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"REMOVED_CLASS","CLASS: com.netflix.hystrix.strategy.properties.HystrixProperty.UnitTest","CLASS: com.netflix.hystrix.strategy.properties.HystrixProperty","com.netflix.hystrix.strategy.properties.HystrixProperty","CRUCIAL"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onError(AbstractHystrixCommand<T>,FailureType,Exception)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","LOW"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onFallbackSuccess(AbstractHystrixCommand<T>,T)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","LOW"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onRunError(AbstractHystrixCommand<T>,Exception)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","LOW"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onComplete(AbstractHystrixCommand<T>,T)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","LOW"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onThreadStart(AbstractHystrixCommand<T>)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","LOW"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onStart(AbstractHystrixCommand<T>)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","LOW"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onRunSuccess(AbstractHystrixCommand<T>,T)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","LOW"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onRunStart(AbstractHystrixCommand<T>)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","LOW"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onFallbackError(AbstractHystrixCommand<T>,Exception)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","LOW"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onFallbackStart(AbstractHystrixCommand<T>)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","LOW"
356,375b8f36fdbb9d00d03fc7e858f2f8383e614336,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook.onThreadComplete(AbstractHystrixCommand<T>)","CLASS: com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","com.netflix.hystrix.strategy.executionhook.HystrixCommandExecutionHook","LOW"
357,9a5adde9024dc35ca6f4ceb28c2fe53641840e8a,"STATEMENT_UPDATE","ASSIGNMENT: o = o.lift(new HystrixObservableTimeoutOperator<R>(_this, performAsyncTimeout));","METHOD: com.netflix.hystrix.HystrixObservableCommand.toObservable(Scheduler,boolean)","com.netflix.hystrix.HystrixObservableCommand.toObservable(Scheduler,boolean)","LOW"
357,9a5adde9024dc35ca6f4ceb28c2fe53641840e8a,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixObservableCommand.TimeoutObservable","CLASS: com.netflix.hystrix.HystrixObservableCommand","com.netflix.hystrix.HystrixObservableCommand","LOW"
357,9a5adde9024dc35ca6f4ceb28c2fe53641840e8a,"REMOVED_CLASS","CLASS: com.netflix.hystrix.HystrixObservableCommand.HystrixObservableTimeoutOperator","CLASS: com.netflix.hystrix.HystrixObservableCommand","com.netflix.hystrix.HystrixObservableCommand","HIGH"
358,bfaba6f25d7ec04149ac7ab1757f7869dbef56f1,"STATEMENT_INSERT","METHOD_INVOCATION: System.out.println(((("&&&&&&& add request to log: " + command) + "  thread: ") + Thread.currentThread()));","METHOD: com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(AbstractHystrixCommand<?>)","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(AbstractHystrixCommand<?>)","LOW"
361,706a0f267ed65a215de1d813598c6c72b00f76eb,"STATEMENT_DELETE","METHOD_INVOCATION: System.out.println(("request log: " + HystrixRequestLog.getCurrentRequest()));","BODY: ","com.netflix.hystrix.HystrixCommandTest.testExecutionSuccess()","MEDIUM"
361,706a0f267ed65a215de1d813598c6c72b00f76eb,"DOC_UPDATE","JAVADOC: /**
     * Fluent interface for arguments to the {@link HystrixObservableCommand} constructor.
     * <p>
     * The required arguments are set via the 'with' factory method and optional arguments via the 'and' chained methods.
     * <p>
     * Example:
     * <pre> {@code
     *  Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey("GroupName"))
                .andCommandKey(HystrixCommandKey.Factory.asKey("CommandName"))
                .andEventNotifier(notifier);
     * } </pre>
     */","CLASS: com.netflix.hystrix.HystrixCommand.Setter","com.netflix.hystrix.HystrixCommand.Setter","NONE"
361,706a0f267ed65a215de1d813598c6c72b00f76eb,"DOC_UPDATE","JAVADOC: /**
         * Setter factory method with required values.
         * <p>
         * All optional arguments can be set via the chained methods.
         * 
         * @param groupKey
         *            {@link HystrixCommandGroupKey} used to group together multiple {@link HystrixObservableCommand} objects.
         *            <p>
         *            The {@link HystrixCommandGroupKey} is used to represent a common relationship between commands. For example, a library or team name, the system all related commands interace
         *            with,
         *            common business purpose etc.
         */","METHOD: com.netflix.hystrix.HystrixCommand.Setter.withGroupKey(HystrixCommandGroupKey)","com.netflix.hystrix.HystrixCommand.Setter.withGroupKey(HystrixCommandGroupKey)","NONE"
361,706a0f267ed65a215de1d813598c6c72b00f76eb,"DOC_UPDATE","JAVADOC: /**
         * Setter factory method containing required values.
         * <p>
         * All optional arguments can be set via the chained methods.
         * 
         * @param groupKey
         *            {@link HystrixCommandGroupKey} used to group together multiple {@link HystrixObservableCommand} objects.
         *            <p>
         *            The {@link HystrixCommandGroupKey} is used to represent a common relationship between commands. For example, a library or team name, the system all related commands interace
         *            with,
         *            common business purpose etc.
         */","METHOD: com.netflix.hystrix.HystrixCommand.Setter.Setter(HystrixCommandGroupKey)","com.netflix.hystrix.HystrixCommand.Setter.Setter(HystrixCommandGroupKey)","NONE"
361,706a0f267ed65a215de1d813598c6c72b00f76eb,"DOC_UPDATE","JAVADOC: /**
         * @param commandKey
         *            {@link HystrixCommandKey} used to identify a {@link HystrixObservableCommand} instance for statistics, circuit-breaker, properties, etc.
         *            <p>
         *            By default this will be derived from the instance class name.
         *            <p>
         *            NOTE: Every unique {@link HystrixCommandKey} will result in new instances of {@link HystrixCircuitBreaker}, {@link HystrixCommandMetrics} and {@link HystrixCommandProperties}.
         *            Thus,
         *            the number of variants should be kept to a finite and reasonable number to avoid high-memory usage or memory leacks.
         *            <p>
         *            Hundreds of keys is fine, tens of thousands is probably not.
         * @return Setter for fluent interface via method chaining
         */","METHOD: com.netflix.hystrix.HystrixCommand.Setter.andCommandKey(HystrixCommandKey)","com.netflix.hystrix.HystrixCommand.Setter.andCommandKey(HystrixCommandKey)","NONE"
361,706a0f267ed65a215de1d813598c6c72b00f76eb,"DOC_UPDATE","JAVADOC: /**
         * Optional
         * 
         * @param commandPropertiesDefaults
         *            {@link HystrixCommandProperties.Setter} with property overrides for this specific instance of {@link HystrixObservableCommand}.
         *            <p>
         *            See the {@link HystrixPropertiesStrategy} JavaDocs for more information on properties and order of precedence.
         * @return Setter for fluent interface via method chaining
         */","METHOD: com.netflix.hystrix.HystrixCommand.Setter.andCommandPropertiesDefaults(HystrixCommandProperties.Setter)","com.netflix.hystrix.HystrixCommand.Setter.andCommandPropertiesDefaults(HystrixCommandProperties.Setter)","NONE"
361,706a0f267ed65a215de1d813598c6c72b00f76eb,"DOC_UPDATE","JAVADOC: /**
         * Optional
         * 
         * @param threadPoolPropertiesDefaults
         *            {@link HystrixThreadPoolProperties.Setter} with property overrides for the {@link HystrixThreadPool} used by this specific instance of {@link HystrixObservableCommand}.
         *            <p>
         *            See the {@link HystrixPropertiesStrategy} JavaDocs for more information on properties and order of precedence.
         * @return Setter for fluent interface via method chaining
         */","METHOD: com.netflix.hystrix.HystrixCommand.Setter.andThreadPoolPropertiesDefaults(HystrixThreadPoolProperties.Setter)","com.netflix.hystrix.HystrixCommand.Setter.andThreadPoolPropertiesDefaults(HystrixThreadPoolProperties.Setter)","NONE"
361,706a0f267ed65a215de1d813598c6c72b00f76eb,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixCommand.recordExecutedCommand()","CLASS: com.netflix.hystrix.HystrixCommand","com.netflix.hystrix.HystrixCommand","LOW"
361,706a0f267ed65a215de1d813598c6c72b00f76eb,"STATEMENT_DELETE","METHOD_INVOCATION: System.out.println(((("&&&&&&& add request to log: " + command) + "  thread: ") + Thread.currentThread()));","METHOD: com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(AbstractHystrixCommand<?>)","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(AbstractHystrixCommand<?>)","MEDIUM"
361,706a0f267ed65a215de1d813598c6c72b00f76eb,"COMMENT_DELETE","LINE_COMMENT: // TODO remove this when deprecation completed","METHOD: com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(AbstractHystrixCommand<?>)","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(AbstractHystrixCommand<?>)","NONE"
361,706a0f267ed65a215de1d813598c6c72b00f76eb,"COMMENT_DELETE","LINE_COMMENT: // see RequestLog: Reduce Chance of Memory Leak https://github.com/Netflix/Hystrix/issues/53","THEN_STATEMENT: (! executedCommands.offer((HystrixCommand<?>) command))","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(AbstractHystrixCommand<?>)","NONE"
361,706a0f267ed65a215de1d813598c6c72b00f76eb,"STATEMENT_DELETE","METHOD_INVOCATION: logger.warn((("RequestLog ignoring command after reaching limit of " + MAX_STORAGE) + ". See https://github.com/Netflix/Hystrix/issues/53 for more information."));","THEN_STATEMENT: (! executedCommands.offer((HystrixCommand<?>) command))","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(AbstractHystrixCommand<?>)","MEDIUM"
361,706a0f267ed65a215de1d813598c6c72b00f76eb,"STATEMENT_DELETE","IF_STATEMENT: (! executedCommands.offer((HystrixCommand<?>) command))","THEN_STATEMENT: (command instanceof HystrixCommand)","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(AbstractHystrixCommand<?>)","MEDIUM"
361,706a0f267ed65a215de1d813598c6c72b00f76eb,"STATEMENT_DELETE","IF_STATEMENT: (command instanceof HystrixCommand)","METHOD: com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(AbstractHystrixCommand<?>)","com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(AbstractHystrixCommand<?>)","MEDIUM"
361,706a0f267ed65a215de1d813598c6c72b00f76eb,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.HystrixRequestLog.addExecutedCommand(HystrixCommand<?>)","CLASS: com.netflix.hystrix.HystrixRequestLog","com.netflix.hystrix.HystrixRequestLog","LOW"
361,706a0f267ed65a215de1d813598c6c72b00f76eb,"DOC_UPDATE","JAVADOC: /**
     * The {@link HystrixCommandProperties} associated with this {@link HystrixObservableCommand} instance.
     * 
     * @return HystrixCommandProperties
     */","METHOD: com.netflix.hystrix.AbstractHystrixCommand.getProperties()","com.netflix.hystrix.AbstractHystrixCommand.getProperties()","NONE"
361,706a0f267ed65a215de1d813598c6c72b00f76eb,"COMMENT_DELETE","LINE_COMMENT: // log this command execution regardless of what happened","THEN_STATEMENT: properties.requestLogEnabled().get()","com.netflix.hystrix.AbstractHystrixCommand.recordExecutedCommand()","NONE"
361,706a0f267ed65a215de1d813598c6c72b00f76eb,"STATEMENT_DELETE","METHOD_INVOCATION: currentRequestLog.addExecutedCommand(this);","THEN_STATEMENT: (currentRequestLog != null)","com.netflix.hystrix.AbstractHystrixCommand.recordExecutedCommand()","MEDIUM"
361,706a0f267ed65a215de1d813598c6c72b00f76eb,"STATEMENT_DELETE","IF_STATEMENT: (currentRequestLog != null)","THEN_STATEMENT: properties.requestLogEnabled().get()","com.netflix.hystrix.AbstractHystrixCommand.recordExecutedCommand()","MEDIUM"
361,706a0f267ed65a215de1d813598c6c72b00f76eb,"STATEMENT_DELETE","IF_STATEMENT: properties.requestLogEnabled().get()","METHOD: com.netflix.hystrix.AbstractHystrixCommand.recordExecutedCommand()","com.netflix.hystrix.AbstractHystrixCommand.recordExecutedCommand()","MEDIUM"
361,706a0f267ed65a215de1d813598c6c72b00f76eb,"DOC_DELETE","JAVADOC: /**
     * Record that this command was executed in the HystrixRequestLog.
     * <p>
     * This can be treated as an async operation as it just adds a references to "this" in the log even if the current command is still executing.
     */","METHOD: com.netflix.hystrix.AbstractHystrixCommand.recordExecutedCommand()","com.netflix.hystrix.AbstractHystrixCommand.recordExecutedCommand()","NONE"
361,706a0f267ed65a215de1d813598c6c72b00f76eb,"COMMENT_DELETE","BLOCK_COMMENT: /* store reference to request log regardless of which thread later hits it */","METHOD: com.netflix.hystrix.AbstractHystrixCommand.AbstractHystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.AbstractHystrixCommand.AbstractHystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
361,706a0f267ed65a215de1d813598c6c72b00f76eb,"COMMENT_DELETE","LINE_COMMENT: // if we're using the default we support only optionally using a request context","THEN_STATEMENT: (concurrencyStrategy instanceof HystrixConcurrencyStrategyDefault)","com.netflix.hystrix.AbstractHystrixCommand.AbstractHystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
361,706a0f267ed65a215de1d813598c6c72b00f76eb,"STATEMENT_DELETE","ASSIGNMENT: currentRequestLog = HystrixRequestLog.getCurrentRequest(concurrencyStrategy);","THEN_STATEMENT: HystrixRequestContext.isCurrentThreadInitialized()","com.netflix.hystrix.AbstractHystrixCommand.AbstractHystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
361,706a0f267ed65a215de1d813598c6c72b00f76eb,"STATEMENT_DELETE","ASSIGNMENT: currentRequestLog = null;","ELSE_STATEMENT: HystrixRequestContext.isCurrentThreadInitialized()","com.netflix.hystrix.AbstractHystrixCommand.AbstractHystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
361,706a0f267ed65a215de1d813598c6c72b00f76eb,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: HystrixRequestContext.isCurrentThreadInitialized()","IF_STATEMENT: HystrixRequestContext.isCurrentThreadInitialized()","com.netflix.hystrix.AbstractHystrixCommand.AbstractHystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
361,706a0f267ed65a215de1d813598c6c72b00f76eb,"STATEMENT_DELETE","IF_STATEMENT: HystrixRequestContext.isCurrentThreadInitialized()","THEN_STATEMENT: (concurrencyStrategy instanceof HystrixConcurrencyStrategyDefault)","com.netflix.hystrix.AbstractHystrixCommand.AbstractHystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
361,706a0f267ed65a215de1d813598c6c72b00f76eb,"COMMENT_DELETE","LINE_COMMENT: // if it's a custom strategy it must ensure the context is initialized","ELSE_STATEMENT: (concurrencyStrategy instanceof HystrixConcurrencyStrategyDefault)","com.netflix.hystrix.AbstractHystrixCommand.AbstractHystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","NONE"
361,706a0f267ed65a215de1d813598c6c72b00f76eb,"STATEMENT_DELETE","ASSIGNMENT: currentRequestLog = HystrixRequestLog.getCurrentRequest(concurrencyStrategy);","THEN_STATEMENT: (HystrixRequestLog.getCurrentRequest(concurrencyStrategy) != null)","com.netflix.hystrix.AbstractHystrixCommand.AbstractHystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
361,706a0f267ed65a215de1d813598c6c72b00f76eb,"STATEMENT_DELETE","ASSIGNMENT: currentRequestLog = null;","ELSE_STATEMENT: (HystrixRequestLog.getCurrentRequest(concurrencyStrategy) != null)","com.netflix.hystrix.AbstractHystrixCommand.AbstractHystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
361,706a0f267ed65a215de1d813598c6c72b00f76eb,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: (HystrixRequestLog.getCurrentRequest(concurrencyStrategy) != null)","IF_STATEMENT: (HystrixRequestLog.getCurrentRequest(concurrencyStrategy) != null)","com.netflix.hystrix.AbstractHystrixCommand.AbstractHystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
361,706a0f267ed65a215de1d813598c6c72b00f76eb,"STATEMENT_DELETE","IF_STATEMENT: (HystrixRequestLog.getCurrentRequest(concurrencyStrategy) != null)","ELSE_STATEMENT: (concurrencyStrategy instanceof HystrixConcurrencyStrategyDefault)","com.netflix.hystrix.AbstractHystrixCommand.AbstractHystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
361,706a0f267ed65a215de1d813598c6c72b00f76eb,"ALTERNATIVE_PART_DELETE","ELSE_STATEMENT: (concurrencyStrategy instanceof HystrixConcurrencyStrategyDefault)","IF_STATEMENT: (concurrencyStrategy instanceof HystrixConcurrencyStrategyDefault)","com.netflix.hystrix.AbstractHystrixCommand.AbstractHystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
361,706a0f267ed65a215de1d813598c6c72b00f76eb,"STATEMENT_DELETE","IF_STATEMENT: (concurrencyStrategy instanceof HystrixConcurrencyStrategyDefault)","METHOD: com.netflix.hystrix.AbstractHystrixCommand.AbstractHystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","com.netflix.hystrix.AbstractHystrixCommand.AbstractHystrixCommand(HystrixCommandGroupKey,HystrixCommandKey,HystrixThreadPoolKey,HystrixCircuitBreaker,HystrixThreadPool,HystrixCommandProperties.Setter,HystrixThreadPoolProperties.Setter,HystrixCommandMetrics,TryableSemaphore,TryableSemaphore,HystrixPropertiesStrategy,HystrixCommandExecutionHook)","MEDIUM"
361,706a0f267ed65a215de1d813598c6c72b00f76eb,"DOC_UPDATE","JAVADOC: /**
     * The {@link HystrixCommandMetrics} associated with this {@link HystrixObservableCommand} instance.
     * 
     * @return HystrixCommandMetrics
     */","METHOD: com.netflix.hystrix.AbstractHystrixCommand.getMetrics()","com.netflix.hystrix.AbstractHystrixCommand.getMetrics()","NONE"
361,706a0f267ed65a215de1d813598c6c72b00f76eb,"DOC_UPDATE","JAVADOC: /**
     * @return {@link HystrixCommandGroupKey} used to group together multiple {@link HystrixObservableCommand} objects.
     *         <p>
     *         The {@link HystrixCommandGroupKey} is used to represent a common relationship between commands. For example, a library or team name, the system all related commands interace with,
     *         common business purpose etc.
     */","METHOD: com.netflix.hystrix.AbstractHystrixCommand.getCommandGroup()","com.netflix.hystrix.AbstractHystrixCommand.getCommandGroup()","NONE"
361,706a0f267ed65a215de1d813598c6c72b00f76eb,"REMOVED_OBJECT_STATE","FIELD: com.netflix.hystrix.AbstractHystrixCommand.currentRequestLog : HystrixRequestLog","CLASS: com.netflix.hystrix.AbstractHystrixCommand","com.netflix.hystrix.AbstractHystrixCommand","CRUCIAL"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","RETURN_STATEMENT: Observable.from(value);","METHOD: com.netflix.hystrix.HystrixNonBlockingCommandTest.SuccessfulCacheableCommand.run()","com.netflix.hystrix.HystrixNonBlockingCommandTest.SuccessfulCacheableCommand.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_DELETE","RETURN_STATEMENT: Observable.from(value).subscribeOn(Schedulers.computation());","METHOD: com.netflix.hystrix.HystrixNonBlockingCommandTest.SuccessfulCacheableCommand.run()","com.netflix.hystrix.HystrixNonBlockingCommandTest.SuccessfulCacheableCommand.run()","MEDIUM"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","RETURN_STATEMENT: Observable.from(false);","METHOD: com.netflix.hystrix.HystrixNonBlockingCommandTest.BadRequestCommand.getFallback()","com.netflix.hystrix.HystrixNonBlockingCommandTest.BadRequestCommand.getFallback()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_DELETE","RETURN_STATEMENT: Observable.from(false).subscribeOn(Schedulers.computation());","METHOD: com.netflix.hystrix.HystrixNonBlockingCommandTest.BadRequestCommand.getFallback()","com.netflix.hystrix.HystrixNonBlockingCommandTest.BadRequestCommand.getFallback()","MEDIUM"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","RETURN_STATEMENT: Observable.just(true);","METHOD: com.netflix.hystrix.HystrixNonBlockingCommandTest.SuccessfulTestCommand.run()","com.netflix.hystrix.HystrixNonBlockingCommandTest.SuccessfulTestCommand.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_DELETE","RETURN_STATEMENT: Observable.just(true).subscribeOn(Schedulers.computation());","METHOD: com.netflix.hystrix.HystrixNonBlockingCommandTest.SuccessfulTestCommand.run()","com.netflix.hystrix.HystrixNonBlockingCommandTest.SuccessfulTestCommand.run()","MEDIUM"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","METHOD_INVOCATION: System.out.println("***** running");","METHOD: com.netflix.hystrix.HystrixNonBlockingCommandTest.TestCommandWithTimeout.run()","com.netflix.hystrix.HystrixNonBlockingCommandTest.TestCommandWithTimeout.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","TRY_STATEMENT: ","METHOD: com.netflix.hystrix.HystrixNonBlockingCommandTest.TestCommandWithTimeout.run()","com.netflix.hystrix.HystrixNonBlockingCommandTest.TestCommandWithTimeout.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","RETURN_STATEMENT: Observable.from(true);","METHOD: com.netflix.hystrix.HystrixNonBlockingCommandTest.TestCommandWithTimeout.run()","com.netflix.hystrix.HystrixNonBlockingCommandTest.TestCommandWithTimeout.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","METHOD_INVOCATION: Thread.sleep((timeout * 10));","BODY: ","com.netflix.hystrix.HystrixNonBlockingCommandTest.TestCommandWithTimeout.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","CATCH_CLAUSE: InterruptedException","CATCH_CLAUSES: ","com.netflix.hystrix.HystrixNonBlockingCommandTest.TestCommandWithTimeout.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","METHOD_INVOCATION: e.printStackTrace();","CATCH_CLAUSE: InterruptedException","com.netflix.hystrix.HystrixNonBlockingCommandTest.TestCommandWithTimeout.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"COMMENT_INSERT","LINE_COMMENT: // ignore and sleep some more to simulate a dependency that doesn't obey interrupts","CATCH_CLAUSE: InterruptedException","com.netflix.hystrix.HystrixNonBlockingCommandTest.TestCommandWithTimeout.run()","NONE"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","TRY_STATEMENT: ","CATCH_CLAUSE: InterruptedException","com.netflix.hystrix.HystrixNonBlockingCommandTest.TestCommandWithTimeout.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"COMMENT_INSERT","LINE_COMMENT: // ignore","CATCH_CLAUSE: InterruptedException","com.netflix.hystrix.HystrixNonBlockingCommandTest.TestCommandWithTimeout.run()","NONE"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","METHOD_INVOCATION: System.out.println("after interruption with extra sleep");","CATCH_CLAUSE: InterruptedException","com.netflix.hystrix.HystrixNonBlockingCommandTest.TestCommandWithTimeout.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","METHOD_INVOCATION: Thread.sleep((timeout * 2));","BODY: ","com.netflix.hystrix.HystrixNonBlockingCommandTest.TestCommandWithTimeout.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","CATCH_CLAUSE: Exception","CATCH_CLAUSES: ","com.netflix.hystrix.HystrixNonBlockingCommandTest.TestCommandWithTimeout.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_DELETE","RETURN_STATEMENT: Observable.create(new OnSubscribe<Boolean>() {
  public @Override void call(Subscriber<? super Boolean> sub) {
    System.out.println("***** running");
    try
      {
        Thread.sleep((timeout * 10));
      }
    catch (InterruptedException e)
      {
        e.printStackTrace();
        try
          {
            Thread.sleep((timeout * 2));
          }
        catch (Exception e2)
          {
          }
        System.out.println("after interruption with extra sleep");
      }
    sub.onNext(true);
    sub.onCompleted();
  }
}).subscribeOn(Schedulers.computation());","METHOD: com.netflix.hystrix.HystrixNonBlockingCommandTest.TestCommandWithTimeout.run()","com.netflix.hystrix.HystrixNonBlockingCommandTest.TestCommandWithTimeout.run()","MEDIUM"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","RETURN_STATEMENT: Observable.from(false);","THEN_STATEMENT: (fallbackBehavior == FALLBACK_SUCCESS)","com.netflix.hystrix.HystrixNonBlockingCommandTest.TestCommandWithTimeout.getFallback()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_DELETE","RETURN_STATEMENT: Observable.from(false).subscribeOn(Schedulers.computation());","THEN_STATEMENT: (fallbackBehavior == FALLBACK_SUCCESS)","com.netflix.hystrix.HystrixNonBlockingCommandTest.TestCommandWithTimeout.getFallback()","MEDIUM"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"COMMENT_DELETE","LINE_COMMENT: // TODO duplicate with error inside async Observable","THEN_STATEMENT: (fallbackBehavior == FALLBACK_FAILURE)","com.netflix.hystrix.HystrixNonBlockingCommandTest.TestCommandWithTimeout.getFallback()","NONE"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","RETURN_STATEMENT: Observable.from(true);","METHOD: com.netflix.hystrix.HystrixNonBlockingCommandTest.TestCommandWithoutCircuitBreaker.run()","com.netflix.hystrix.HystrixNonBlockingCommandTest.TestCommandWithoutCircuitBreaker.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_DELETE","RETURN_STATEMENT: Observable.from(true).subscribeOn(Schedulers.computation());","METHOD: com.netflix.hystrix.HystrixNonBlockingCommandTest.TestCommandWithoutCircuitBreaker.run()","com.netflix.hystrix.HystrixNonBlockingCommandTest.TestCommandWithoutCircuitBreaker.run()","MEDIUM"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","RETURN_STATEMENT: Observable.just(true);","METHOD: com.netflix.hystrix.HystrixNonBlockingCommandTest.DynamicOwnerTestCommand.run()","com.netflix.hystrix.HystrixNonBlockingCommandTest.DynamicOwnerTestCommand.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_DELETE","RETURN_STATEMENT: Observable.just(true).subscribeOn(Schedulers.computation());","METHOD: com.netflix.hystrix.HystrixNonBlockingCommandTest.DynamicOwnerTestCommand.run()","com.netflix.hystrix.HystrixNonBlockingCommandTest.DynamicOwnerTestCommand.run()","MEDIUM"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","TRY_STATEMENT: ","METHOD: com.netflix.hystrix.HystrixNonBlockingCommandTest.RequestCacheNullPointerExceptionCase.run()","com.netflix.hystrix.HystrixNonBlockingCommandTest.RequestCacheNullPointerExceptionCase.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","RETURN_STATEMENT: Observable.from(true);","METHOD: com.netflix.hystrix.HystrixNonBlockingCommandTest.RequestCacheNullPointerExceptionCase.run()","com.netflix.hystrix.HystrixNonBlockingCommandTest.RequestCacheNullPointerExceptionCase.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","METHOD_INVOCATION: Thread.sleep(500);","BODY: ","com.netflix.hystrix.HystrixNonBlockingCommandTest.RequestCacheNullPointerExceptionCase.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","CATCH_CLAUSE: InterruptedException","CATCH_CLAUSES: ","com.netflix.hystrix.HystrixNonBlockingCommandTest.RequestCacheNullPointerExceptionCase.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","METHOD_INVOCATION: e.printStackTrace();","CATCH_CLAUSE: InterruptedException","com.netflix.hystrix.HystrixNonBlockingCommandTest.RequestCacheNullPointerExceptionCase.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_DELETE","RETURN_STATEMENT: Observable.create(new OnSubscribe<Boolean>() {
  public @Override void call(Subscriber<? super Boolean> s) {
    try
      {
        Thread.sleep(500);
      }
    catch (InterruptedException e)
      {
        e.printStackTrace();
      }
    s.onNext(true);
    s.onCompleted();
  }
}).subscribeOn(Schedulers.computation());","METHOD: com.netflix.hystrix.HystrixNonBlockingCommandTest.RequestCacheNullPointerExceptionCase.run()","com.netflix.hystrix.HystrixNonBlockingCommandTest.RequestCacheNullPointerExceptionCase.run()","MEDIUM"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","RETURN_STATEMENT: Observable.from(false);","METHOD: com.netflix.hystrix.HystrixNonBlockingCommandTest.RequestCacheNullPointerExceptionCase.getFallback()","com.netflix.hystrix.HystrixNonBlockingCommandTest.RequestCacheNullPointerExceptionCase.getFallback()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_DELETE","RETURN_STATEMENT: Observable.from(false).subscribeOn(Schedulers.computation());","METHOD: com.netflix.hystrix.HystrixNonBlockingCommandTest.RequestCacheNullPointerExceptionCase.getFallback()","com.netflix.hystrix.HystrixNonBlockingCommandTest.RequestCacheNullPointerExceptionCase.getFallback()","MEDIUM"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","TRY_STATEMENT: ","METHOD: com.netflix.hystrix.HystrixNonBlockingCommandTest.TestSemaphoreCommandWithFallback.run()","com.netflix.hystrix.HystrixNonBlockingCommandTest.TestSemaphoreCommandWithFallback.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","RETURN_STATEMENT: Observable.from(true);","METHOD: com.netflix.hystrix.HystrixNonBlockingCommandTest.TestSemaphoreCommandWithFallback.run()","com.netflix.hystrix.HystrixNonBlockingCommandTest.TestSemaphoreCommandWithFallback.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","METHOD_INVOCATION: Thread.sleep(executionSleep);","BODY: ","com.netflix.hystrix.HystrixNonBlockingCommandTest.TestSemaphoreCommandWithFallback.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","CATCH_CLAUSE: InterruptedException","CATCH_CLAUSES: ","com.netflix.hystrix.HystrixNonBlockingCommandTest.TestSemaphoreCommandWithFallback.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","METHOD_INVOCATION: e.printStackTrace();","CATCH_CLAUSE: InterruptedException","com.netflix.hystrix.HystrixNonBlockingCommandTest.TestSemaphoreCommandWithFallback.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_DELETE","RETURN_STATEMENT: Observable.create(new OnSubscribe<Boolean>() {
  public @Override void call(Subscriber<? super Boolean> s) {
    try
      {
        Thread.sleep(executionSleep);
      }
    catch (InterruptedException e)
      {
        e.printStackTrace();
      }
    s.onNext(true);
    s.onCompleted();
  }
}).subscribeOn(Schedulers.computation());","METHOD: com.netflix.hystrix.HystrixNonBlockingCommandTest.TestSemaphoreCommandWithFallback.run()","com.netflix.hystrix.HystrixNonBlockingCommandTest.TestSemaphoreCommandWithFallback.run()","MEDIUM"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","RETURN_STATEMENT: Observable.just(true);","METHOD: com.netflix.hystrix.HystrixNonBlockingCommandTest.DynamicOwnerAndKeyTestCommand.run()","com.netflix.hystrix.HystrixNonBlockingCommandTest.DynamicOwnerAndKeyTestCommand.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_DELETE","RETURN_STATEMENT: Observable.just(true).subscribeOn(Schedulers.computation());","METHOD: com.netflix.hystrix.HystrixNonBlockingCommandTest.DynamicOwnerAndKeyTestCommand.run()","com.netflix.hystrix.HystrixNonBlockingCommandTest.DynamicOwnerAndKeyTestCommand.run()","MEDIUM"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","RETURN_STATEMENT: Observable.from(false);","METHOD: com.netflix.hystrix.HystrixNonBlockingCommandTest.KnownFailureTestCommandWithFallback.getFallback()","com.netflix.hystrix.HystrixNonBlockingCommandTest.KnownFailureTestCommandWithFallback.getFallback()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_DELETE","RETURN_STATEMENT: Observable.from(false).subscribeOn(Schedulers.computation());","METHOD: com.netflix.hystrix.HystrixNonBlockingCommandTest.KnownFailureTestCommandWithFallback.getFallback()","com.netflix.hystrix.HystrixNonBlockingCommandTest.KnownFailureTestCommandWithFallback.getFallback()","MEDIUM"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","TRY_STATEMENT: ","METHOD: com.netflix.hystrix.HystrixNonBlockingCommandTest.NoRequestCacheTimeoutWithoutFallback.run()","com.netflix.hystrix.HystrixNonBlockingCommandTest.NoRequestCacheTimeoutWithoutFallback.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","RETURN_STATEMENT: Observable.from(true);","METHOD: com.netflix.hystrix.HystrixNonBlockingCommandTest.NoRequestCacheTimeoutWithoutFallback.run()","com.netflix.hystrix.HystrixNonBlockingCommandTest.NoRequestCacheTimeoutWithoutFallback.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","METHOD_INVOCATION: Thread.sleep(500);","BODY: ","com.netflix.hystrix.HystrixNonBlockingCommandTest.NoRequestCacheTimeoutWithoutFallback.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","CATCH_CLAUSE: InterruptedException","CATCH_CLAUSES: ","com.netflix.hystrix.HystrixNonBlockingCommandTest.NoRequestCacheTimeoutWithoutFallback.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","METHOD_INVOCATION: System.out.println((">>>> Sleep Interrupted: " + e.getMessage()));","CATCH_CLAUSE: InterruptedException","com.netflix.hystrix.HystrixNonBlockingCommandTest.NoRequestCacheTimeoutWithoutFallback.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_DELETE","RETURN_STATEMENT: Observable.create(new OnSubscribe<Boolean>() {
  public @Override void call(Subscriber<? super Boolean> s) {
    try
      {
        Thread.sleep(500);
      }
    catch (InterruptedException e)
      {
        System.out.println((">>>> Sleep Interrupted: " + e.getMessage()));
      }
    s.onNext(true);
    s.onCompleted();
  }
}).subscribeOn(Schedulers.computation());","METHOD: com.netflix.hystrix.HystrixNonBlockingCommandTest.NoRequestCacheTimeoutWithoutFallback.run()","com.netflix.hystrix.HystrixNonBlockingCommandTest.NoRequestCacheTimeoutWithoutFallback.run()","MEDIUM"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","TRY_STATEMENT: ","METHOD: com.netflix.hystrix.HystrixNonBlockingCommandTest.RequestCacheTimeoutWithoutFallback.run()","com.netflix.hystrix.HystrixNonBlockingCommandTest.RequestCacheTimeoutWithoutFallback.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","RETURN_STATEMENT: Observable.from(true);","METHOD: com.netflix.hystrix.HystrixNonBlockingCommandTest.RequestCacheTimeoutWithoutFallback.run()","com.netflix.hystrix.HystrixNonBlockingCommandTest.RequestCacheTimeoutWithoutFallback.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","METHOD_INVOCATION: Thread.sleep(500);","BODY: ","com.netflix.hystrix.HystrixNonBlockingCommandTest.RequestCacheTimeoutWithoutFallback.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","CATCH_CLAUSE: InterruptedException","CATCH_CLAUSES: ","com.netflix.hystrix.HystrixNonBlockingCommandTest.RequestCacheTimeoutWithoutFallback.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","METHOD_INVOCATION: System.out.println((">>>> Sleep Interrupted: " + e.getMessage()));","CATCH_CLAUSE: InterruptedException","com.netflix.hystrix.HystrixNonBlockingCommandTest.RequestCacheTimeoutWithoutFallback.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_DELETE","RETURN_STATEMENT: Observable.create(new OnSubscribe<Boolean>() {
  public @Override void call(Subscriber<? super Boolean> s) {
    try
      {
        Thread.sleep(500);
      }
    catch (InterruptedException e)
      {
        System.out.println((">>>> Sleep Interrupted: " + e.getMessage()));
      }
    s.onNext(true);
    s.onCompleted();
  }
}).subscribeOn(Schedulers.computation());","METHOD: com.netflix.hystrix.HystrixNonBlockingCommandTest.RequestCacheTimeoutWithoutFallback.run()","com.netflix.hystrix.HystrixNonBlockingCommandTest.RequestCacheTimeoutWithoutFallback.run()","MEDIUM"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","TRY_STATEMENT: ","METHOD: com.netflix.hystrix.HystrixNonBlockingCommandTest.TestSemaphoreCommand.run()","com.netflix.hystrix.HystrixNonBlockingCommandTest.TestSemaphoreCommand.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","RETURN_STATEMENT: Observable.from(true);","METHOD: com.netflix.hystrix.HystrixNonBlockingCommandTest.TestSemaphoreCommand.run()","com.netflix.hystrix.HystrixNonBlockingCommandTest.TestSemaphoreCommand.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","METHOD_INVOCATION: Thread.sleep(executionSleep);","BODY: ","com.netflix.hystrix.HystrixNonBlockingCommandTest.TestSemaphoreCommand.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","CATCH_CLAUSE: InterruptedException","CATCH_CLAUSES: ","com.netflix.hystrix.HystrixNonBlockingCommandTest.TestSemaphoreCommand.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","METHOD_INVOCATION: e.printStackTrace();","CATCH_CLAUSE: InterruptedException","com.netflix.hystrix.HystrixNonBlockingCommandTest.TestSemaphoreCommand.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_DELETE","RETURN_STATEMENT: Observable.create(new OnSubscribe<Boolean>() {
  public @Override void call(Subscriber<? super Boolean> s) {
    try
      {
        Thread.sleep(executionSleep);
      }
    catch (InterruptedException e)
      {
        e.printStackTrace();
      }
    s.onNext(true);
    s.onCompleted();
  }
}).subscribeOn(Schedulers.computation());","METHOD: com.netflix.hystrix.HystrixNonBlockingCommandTest.TestSemaphoreCommand.run()","com.netflix.hystrix.HystrixNonBlockingCommandTest.TestSemaphoreCommand.run()","MEDIUM"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","TRY_STATEMENT: ","METHOD: com.netflix.hystrix.HystrixNonBlockingCommandTest.SlowCacheableCommand.run()","com.netflix.hystrix.HystrixNonBlockingCommandTest.SlowCacheableCommand.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","METHOD_INVOCATION: System.out.println("successfully executed");","METHOD: com.netflix.hystrix.HystrixNonBlockingCommandTest.SlowCacheableCommand.run()","com.netflix.hystrix.HystrixNonBlockingCommandTest.SlowCacheableCommand.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","RETURN_STATEMENT: Observable.from(value);","METHOD: com.netflix.hystrix.HystrixNonBlockingCommandTest.SlowCacheableCommand.run()","com.netflix.hystrix.HystrixNonBlockingCommandTest.SlowCacheableCommand.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","METHOD_INVOCATION: Thread.sleep(duration);","BODY: ","com.netflix.hystrix.HystrixNonBlockingCommandTest.SlowCacheableCommand.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","CATCH_CLAUSE: Exception","CATCH_CLAUSES: ","com.netflix.hystrix.HystrixNonBlockingCommandTest.SlowCacheableCommand.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","METHOD_INVOCATION: e.printStackTrace();","CATCH_CLAUSE: Exception","com.netflix.hystrix.HystrixNonBlockingCommandTest.SlowCacheableCommand.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_DELETE","RETURN_STATEMENT: Observable.from(value).delay(duration, TimeUnit.MILLISECONDS).subscribeOn(Schedulers.computation()).doOnNext(new Action1<String>() {
  public @Override void call(String t1) {
    System.out.println("successfully executed");
  }
});","METHOD: com.netflix.hystrix.HystrixNonBlockingCommandTest.SlowCacheableCommand.run()","com.netflix.hystrix.HystrixNonBlockingCommandTest.SlowCacheableCommand.run()","MEDIUM"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","RETURN_STATEMENT: Observable.from(value);","METHOD: com.netflix.hystrix.HystrixNonBlockingCommandTest.SuccessfulCacheableCommandViaSemaphore.run()","com.netflix.hystrix.HystrixNonBlockingCommandTest.SuccessfulCacheableCommandViaSemaphore.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_DELETE","RETURN_STATEMENT: Observable.from(value).subscribeOn(Schedulers.computation());","METHOD: com.netflix.hystrix.HystrixNonBlockingCommandTest.SuccessfulCacheableCommandViaSemaphore.run()","com.netflix.hystrix.HystrixNonBlockingCommandTest.SuccessfulCacheableCommandViaSemaphore.run()","MEDIUM"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"DOC_INSERT","JAVADOC: /**
     * Test when a command fails to get queued up in the threadpool where the command didn't implement getFallback.
     * <p>
     * We specifically want to protect against developers getting random thread exceptions and instead just correctly receiving HystrixRuntimeException when no fallback exists.
     */","METHOD: com.netflix.hystrix.HystrixNonBlockingCommandTest.testExecutionSemaphoreWithQueue()","com.netflix.hystrix.HystrixNonBlockingCommandTest.testExecutionSemaphoreWithQueue()","NONE"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"COMMENT_INSERT","LINE_COMMENT: // signals caller that run has started","METHOD: com.netflix.hystrix.HystrixNonBlockingCommandTest.LatchedSemaphoreCommand.run()","com.netflix.hystrix.HystrixNonBlockingCommandTest.LatchedSemaphoreCommand.run()","NONE"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","METHOD_INVOCATION: this.startLatch.countDown();","METHOD: com.netflix.hystrix.HystrixNonBlockingCommandTest.LatchedSemaphoreCommand.run()","com.netflix.hystrix.HystrixNonBlockingCommandTest.LatchedSemaphoreCommand.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","TRY_STATEMENT: ","METHOD: com.netflix.hystrix.HystrixNonBlockingCommandTest.LatchedSemaphoreCommand.run()","com.netflix.hystrix.HystrixNonBlockingCommandTest.LatchedSemaphoreCommand.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","RETURN_STATEMENT: Observable.from(true);","METHOD: com.netflix.hystrix.HystrixNonBlockingCommandTest.LatchedSemaphoreCommand.run()","com.netflix.hystrix.HystrixNonBlockingCommandTest.LatchedSemaphoreCommand.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"COMMENT_INSERT","LINE_COMMENT: // waits for caller to countDown latch","BODY: ","com.netflix.hystrix.HystrixNonBlockingCommandTest.LatchedSemaphoreCommand.run()","NONE"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","METHOD_INVOCATION: this.waitLatch.await();","BODY: ","com.netflix.hystrix.HystrixNonBlockingCommandTest.LatchedSemaphoreCommand.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","CATCH_CLAUSE: InterruptedException","CATCH_CLAUSES: ","com.netflix.hystrix.HystrixNonBlockingCommandTest.LatchedSemaphoreCommand.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","METHOD_INVOCATION: e.printStackTrace();","CATCH_CLAUSE: InterruptedException","com.netflix.hystrix.HystrixNonBlockingCommandTest.LatchedSemaphoreCommand.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_INSERT","RETURN_STATEMENT: Observable.from(false);","CATCH_CLAUSE: InterruptedException","com.netflix.hystrix.HystrixNonBlockingCommandTest.LatchedSemaphoreCommand.run()","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"STATEMENT_DELETE","RETURN_STATEMENT: Observable.create(new OnSubscribe<Boolean>() {
  public @Override void call(Subscriber<? super Boolean> s) {
    startLatch.countDown();
    try
      {
        waitLatch.await();
      }
    catch (InterruptedException e)
      {
        e.printStackTrace();
        s.onNext(false);
        s.onCompleted();
        return ;
      }
    s.onNext(true);
    s.onCompleted();
  }
}).subscribeOn(Schedulers.computation());","METHOD: com.netflix.hystrix.HystrixNonBlockingCommandTest.LatchedSemaphoreCommand.run()","com.netflix.hystrix.HystrixNonBlockingCommandTest.LatchedSemaphoreCommand.run()","MEDIUM"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixNonBlockingCommandTest.CommandWithCustomThreadPool","CLASS: com.netflix.hystrix.HystrixNonBlockingCommandTest","com.netflix.hystrix.HystrixNonBlockingCommandTest","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixNonBlockingCommandTest.RequestCacheThreadRejectionWithoutFallback","CLASS: com.netflix.hystrix.HystrixNonBlockingCommandTest","com.netflix.hystrix.HystrixNonBlockingCommandTest","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixNonBlockingCommandTest.TestSemaphoreCommandWithSlowFallback","CLASS: com.netflix.hystrix.HystrixNonBlockingCommandTest","com.netflix.hystrix.HystrixNonBlockingCommandTest","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixNonBlockingCommandTest.SingleThreadedPool","CLASS: com.netflix.hystrix.HystrixNonBlockingCommandTest","com.netflix.hystrix.HystrixNonBlockingCommandTest","LOW"
365,1e536ef9bcc15252b3896e4538d65bf708b64a50,"ADDITIONAL_CLASS","CLASS: com.netflix.hystrix.HystrixNonBlockingCommandTest.TestCommandRejection","CLASS: com.netflix.hystrix.HystrixNonBlockingCommandTest","com.netflix.hystrix.HystrixNonBlockingCommandTest","LOW"
366,e4759d47d8a8db863577affc6ec63072f6856857,"STATEMENT_UPDATE","VARIABLE_DECLARATION_STATEMENT: String fullClass = HystrixPropertiesStrategyTestImpl.class.getName();","BODY: ","com.netflix.hystrix.strategy.HystrixPluginsTest.testPropertiesStrategyViaProperty()","LOW"
366,e4759d47d8a8db863577affc6ec63072f6856857,"STATEMENT_UPDATE","VARIABLE_DECLARATION_STATEMENT: String fullClass = HystrixEventNotifierTestImpl.class.getName();","BODY: ","com.netflix.hystrix.strategy.HystrixPluginsTest.testEventNotifierViaProperty()","LOW"
366,e4759d47d8a8db863577affc6ec63072f6856857,"STATEMENT_UPDATE","VARIABLE_DECLARATION_STATEMENT: String fullClass = HystrixMetricsPublisherTestImpl.class.getName();","BODY: ","com.netflix.hystrix.strategy.HystrixPluginsTest.testMetricsPublisherViaProperty()","LOW"
366,e4759d47d8a8db863577affc6ec63072f6856857,"STATEMENT_UPDATE","VARIABLE_DECLARATION_STATEMENT: String fullClass = HystrixConcurrencyStrategyTestImpl.class.getName();","BODY: ","com.netflix.hystrix.strategy.HystrixPluginsTest.testConcurrencyStrategyViaProperty()","LOW"
366,e4759d47d8a8db863577affc6ec63072f6856857,"ADDITIONAL_FUNCTIONALITY","METHOD: com.netflix.hystrix.strategy.HystrixPluginsTest.getFullClassNameForTestClass(Class<?>)","CLASS: com.netflix.hystrix.strategy.HystrixPluginsTest","com.netflix.hystrix.strategy.HystrixPluginsTest","LOW"
